function legend(a,b){a.className="legend",(b.hasOwnProperty("datasets")?b.datasets:b).forEach(function(b){var c=document.createElement("span");c.className="title",c.style.borderColor=b.hasOwnProperty("strokeColor")?b.strokeColor:b.color,c.style.borderStyle="solid",a.appendChild(c);var d=document.createTextNode(b.title);c.appendChild(d)})}function AccessControlFormData(){this.AccessControlEnabled=!0,this.Ownership="private",this.AuthorizedUsers=[],this.AuthorizedTeams=[]}function includeString(a,b){return b.some(function(b){return-1!==a.indexOf(b)})}function UserAccessViewModel(a){this.Id=a.Id,this.Name=a.Username,this.Type="user"}function TeamAccessViewModel(a){this.Id=a.Id,this.Name=a.Name,this.Type="team"}function DockerHubViewModel(a){this.Name="DockerHub",this.URL="",this.Authentication=a.Authentication,this.Username=a.Username,this.Password=a.Password}function RegistryViewModel(a){this.Id=a.Id,this.Name=a.Name,this.URL=a.URL,this.Authentication=a.Authentication,this.Username=a.Username,this.Password=a.Password,this.AuthorizedUsers=a.AuthorizedUsers,this.AuthorizedTeams=a.AuthorizedTeams,this.Checked=!1}function ResourceControlViewModel(a){this.Id=a.Id,this.Type=a.Type,this.ResourceId=a.ResourceId,this.UserAccesses=a.UserAccesses,this.TeamAccesses=a.TeamAccesses,this.AdministratorsOnly=a.AdministratorsOnly,this.Ownership=determineOwnership(this)}function determineOwnership(a){return a.AdministratorsOnly?"administrators":1===a.UserAccesses.length&&0===a.TeamAccesses.length?"private":a.UserAccesses.length>1||a.TeamAccesses.length>0?"restricted":void 0}function LDAPSettingsViewModel(a){this.ReaderDN=a.ReaderDN,this.Password=a.Password,this.URL=a.URL,this.SearchSettings=a.SearchSettings}function LDAPSearchSettings(a,b,c){this.BaseDN=a,this.UsernameAttribute=b,this.Filter=c}function SettingsViewModel(a){this.TemplatesURL=a.TemplatesURL,this.LogoURL=a.LogoURL,this.BlackListedLabels=a.BlackListedLabels,this.DisplayExternalContributors=a.DisplayExternalContributors,this.AuthenticationMethod=a.AuthenticationMethod,this.LDAPSettings=a.LDAPSettings}function StatusViewModel(a){this.Authentication=a.Authentication,this.EndpointManagement=a.EndpointManagement,this.Analytics=a.Analytics,this.Version=a.Version}function TeamViewModel(a){this.Id=a.Id,this.Name=a.Name,this.Checked=!1}function TeamMembershipModel(a){this.Id=a.Id,this.UserId=a.UserID,this.TeamId=a.TeamID,this.Role=a.Role}function TemplateViewModel(a){this.Title=a.title,this.Description=a.description,this.Note=a.note,this.Categories=a.categories?a.categories:[],this.Platform=a.platform?a.platform:"undefined",this.Logo=a.logo,this.Image=a.image,this.Registry=a.registry?a.registry:"",this.Command=a.command?a.command:"",this.Network=a.network?a.network:"",this.Env=a.env?a.env:[],this.Privileged=!!a.privileged&&a.privileged,this.Interactive=!!a.interactive&&a.interactive,this.RestartPolicy=a.restart_policy?a.restart_policy:"always",this.Volumes=[],a.volumes&&(this.Volumes=a.volumes.map(function(a){var b={readOnly:a.readonly||!1,containerPath:a.container||a,type:"auto"};return a.bind&&(b.name=a.bind,b.type="bind"),b})),this.Ports=[],a.ports&&(this.Ports=a.ports.map(function(a){var b=_.split(a,"/");return{containerPort:b[0],protocol:b[1]}}))}function TemplateLSIOViewModel(a){this.Title=a.title,this.Note=a.description,this.Categories=a.category?a.category:[],this.Platform=a.platform?a.platform:"linux",this.Logo=a.logo,this.Image=a.image,this.Registry=a.registry?a.registry:"",this.Command=a.command?a.command:"",this.Network=a.network?a.network:"",this.Env=a.env?a.env:[],this.Privileged=!!a.privileged&&a.privileged,this.Interactive=!!a.interactive&&a.interactive,this.RestartPolicy=a.restart_policy?a.restart_policy:"always",this.Volumes=[],a.volumes&&(this.Volumes=a.volumes.map(function(a){return{readOnly:!1,containerPath:a,type:"auto"}})),this.Ports=[],a.ports&&(this.Ports=a.ports.map(function(a){var b=_.split(a,"/");return{containerPort:b[0],protocol:b[1]}}))}function UserViewModel(a){this.Id=a.Id,this.Username=a.Username,this.Role=a.Role,1===a.Role?this.RoleName="administrator":this.RoleName="user",this.AuthenticationMethod=a.AuthenticationMethod,this.Checked=!1}function ContainerViewModel(a){if(this.Id=a.Id,this.Status=a.Status,this.State=a.State,this.Names=a.Names,a.NetworkSettings&&!_.isEmpty(a.NetworkSettings.Networks)&&(this.IP=a.NetworkSettings.Networks[Object.keys(a.NetworkSettings.Networks)[0]].IPAddress),this.Image=a.Image,this.Command=a.Command,this.Checked=!1,this.Labels=a.Labels,this.Mounts=a.Mounts,this.Ports=[],a.Ports)for(var b=0;b<a.Ports.length;++b){var c=a.Ports[b];c.PublicPort&&this.Ports.push({host:c.IP,private:c.PrivatePort,public:c.PublicPort})}a.Portainer&&a.Portainer.ResourceControl&&(this.ResourceControl=new ResourceControlViewModel(a.Portainer.ResourceControl))}function ContainerDetailsViewModel(a){this.Model=a,this.Id=a.Id,this.State=a.State,this.Created=a.Created,this.Name=a.Name,this.NetworkSettings=a.NetworkSettings,this.Args=a.Args,this.Image=a.Image,this.Config=a.Config,this.HostConfig=a.HostConfig,a.Portainer&&a.Portainer.ResourceControl&&(this.ResourceControl=new ResourceControlViewModel(a.Portainer.ResourceControl))}function createEventDetails(a){var b=a.Actor.Attributes,c="";switch(a.Type){case"container":switch(a.Action){case"stop":c="Container "+b.name+" stopped";break;case"destroy":c="Container "+b.name+" deleted";break;case"create":c="Container "+b.name+" created";break;case"start":c="Container "+b.name+" started";break;case"kill":c="Container "+b.name+" killed";break;case"die":c="Container "+b.name+" exited with status code "+b.exitCode;break;case"commit":c="Container "+b.name+" committed";break;case"restart":c="Container "+b.name+" restarted";break;case"pause":c="Container "+b.name+" paused";break;case"unpause":c="Container "+b.name+" unpaused";break;case"attach":c="Container "+b.name+" attached";break;default:c=0===a.Action.indexOf("exec_create")?"Exec instance created":0===a.Action.indexOf("exec_start")?"Exec instance started":"Unsupported event"}break;case"image":switch(a.Action){case"delete":c="Image deleted";break;case"tag":c="New tag created for "+b.name;break;case"untag":c="Image untagged";break;case"pull":c="Image "+a.Actor.ID+" pulled";break;default:c="Unsupported event"}break;case"network":switch(a.Action){case"create":c="Network "+b.name+" created";break;case"destroy":c="Network "+b.name+" deleted";break;case"connect":c="Container connected to "+b.name+" network";break;case"disconnect":c="Container disconnected from "+b.name+" network";break;default:c="Unsupported event"}break;case"volume":switch(a.Action){case"create":c="Volume "+a.Actor.ID+" created";break;case"destroy":c="Volume "+a.Actor.ID+" deleted";break;case"mount":c="Volume "+a.Actor.ID+" mounted";break;case"unmount":c="Volume "+a.Actor.ID+" unmounted";break;default:c="Unsupported event"}break;default:c="Unsupported event"}return c}function EventViewModel(a){this.Time=a.time,a.Type?(this.Type=a.Type,this.Details=createEventDetails(a)):(this.Type=a.status,this.Details=a.from)}function ImageViewModel(a){this.Id=a.Id,this.Tag=a.Tag,this.Repository=a.Repository,this.Created=a.Created,this.Checked=!1,this.RepoTags=a.RepoTags,this.VirtualSize=a.VirtualSize,this.ContainerCount=a.ContainerCount}function ImageDetailsViewModel(a){this.Id=a.Id,this.Tag=a.Tag,this.Parent=a.Parent,this.Repository=a.Repository,this.Created=a.Created,this.Checked=!1,this.RepoTags=a.RepoTags,this.VirtualSize=a.VirtualSize,this.DockerVersion=a.DockerVersion,this.Os=a.Os,this.Architecture=a.Architecture,this.Author=a.Author,this.Command=a.Config.Cmd,this.Entrypoint=a.ContainerConfig.Entrypoint?a.ContainerConfig.Entrypoint:"",this.ExposedPorts=a.ContainerConfig.ExposedPorts?Object.keys(a.ContainerConfig.ExposedPorts):[],this.Volumes=a.ContainerConfig.Volumes?Object.keys(a.ContainerConfig.Volumes):[],this.Env=a.ContainerConfig.Env?a.ContainerConfig.Env:[]}function ImageLayerViewModel(a){this.Id=a.Id,this.Created=a.Created,this.CreatedBy=a.CreatedBy,this.Size=a.Size,this.Comment=a.Comment,this.Tags=a.Tags}function NodeViewModel(a){this.Model=a,this.Id=a.ID,this.Version=a.Version.Index,this.Name=a.Spec.Name,this.Role=a.Spec.Role,this.CreatedAt=a.CreatedAt,this.UpdatedAt=a.UpdatedAt,this.Availability=a.Spec.Availability;var b=a.Spec.Labels;this.Labels=b?Object.keys(b).map(function(a){return{key:a,value:b[a],originalKey:a,originalValue:b[a],added:!0}}):[],this.Hostname=a.Description.Hostname,this.PlatformArchitecture=a.Description.Platform.Architecture,this.PlatformOS=a.Description.Platform.OS,this.CPUs=a.Description.Resources.NanoCPUs,this.Memory=a.Description.Resources.MemoryBytes,this.EngineVersion=a.Description.Engine.EngineVersion,this.EngineLabels=a.Description.Engine.Labels,this.Plugins=a.Description.Engine.Plugins,this.Status=a.Status.State,a.Status.Addr&&(this.Addr=a.Status.Addr),a.ManagerStatus&&(this.Leader=a.ManagerStatus.Leader,this.Reachability=a.ManagerStatus.Reachability,this.ManagerAddr=a.ManagerStatus.Addr)}function PluginViewModel(a){this.Id=a.Id,this.Name=a.Name,this.Enabled=a.Enabled,this.Config=a.Config}function SecretViewModel(a){this.Id=a.ID,this.CreatedAt=a.CreatedAt,this.UpdatedAt=a.UpdatedAt,this.Version=a.Version.Index,this.Name=a.Spec.Name,this.Labels=a.Spec.Labels}function ServiceViewModel(a,b,c){this.Model=a,this.Id=a.ID,this.Name=a.Spec.Name,this.CreatedAt=a.CreatedAt,this.UpdatedAt=a.UpdatedAt,this.Image=a.Spec.TaskTemplate.ContainerSpec.Image,this.Version=a.Version.Index,a.Spec.Mode.Replicated?(this.Mode="replicated",this.Replicas=a.Spec.Mode.Replicated.Replicas):(this.Mode="global",c&&(this.Replicas=c.length)),b&&(this.Running=b.length),a.Spec.TaskTemplate.Resources&&(a.Spec.TaskTemplate.Resources.Limits&&(this.LimitNanoCPUs=a.Spec.TaskTemplate.Resources.Limits.NanoCPUs,this.LimitMemoryBytes=a.Spec.TaskTemplate.Resources.Limits.MemoryBytes),a.Spec.TaskTemplate.Resources.Reservations&&(this.ReservationNanoCPUs=a.Spec.TaskTemplate.Resources.Reservations.NanoCPUs,this.ReservationMemoryBytes=a.Spec.TaskTemplate.Resources.Reservations.MemoryBytes)),a.Spec.TaskTemplate.RestartPolicy?(this.RestartCondition=a.Spec.TaskTemplate.RestartPolicy.Condition,this.RestartDelay=a.Spec.TaskTemplate.RestartPolicy.Delay,this.RestartMaxAttempts=a.Spec.TaskTemplate.RestartPolicy.MaxAttempts,this.RestartWindow=a.Spec.TaskTemplate.RestartPolicy.Window):(this.RestartCondition="none",this.RestartDelay=0,this.RestartMaxAttempts=0,this.RestartWindow=0),this.Constraints=a.Spec.TaskTemplate.Placement?a.Spec.TaskTemplate.Placement.Constraints||[]:[],this.Preferences=a.Spec.TaskTemplate.Placement?a.Spec.TaskTemplate.Placement.Preferences||[]:[],this.Platforms=a.Spec.TaskTemplate.Placement?a.Spec.TaskTemplate.Placement.Platforms||[]:[],this.Labels=a.Spec.Labels;var d=a.Spec.TaskTemplate.ContainerSpec;d&&(this.ContainerLabels=d.Labels,this.Command=d.Command,this.Arguments=d.Args,this.Hostname=d.Hostname,this.Env=d.Env,this.Dir=d.Dir,this.User=d.User,this.Groups=d.Groups,this.TTY=d.TTY,this.OpenStdin=d.OpenStdin,this.ReadOnly=d.ReadOnly,this.Mounts=d.Mounts||[],this.StopSignal=d.StopSignal,this.StopGracePeriod=d.StopGracePeriod,this.HealthCheck=d.HealthCheck||{},this.Hosts=d.Hosts,this.DNSConfig=d.DNSConfig,this.Secrets=d.Secrets),a.Endpoint&&(this.Ports=a.Endpoint.Ports),this.LogDriver=a.Spec.TaskTemplate.LogDriver,this.Runtime=a.Spec.TaskTemplate.Runtime,this.VirtualIPs=a.Endpoint?a.Endpoint.VirtualIPs:[],a.Spec.UpdateConfig?(this.UpdateParallelism=void 0!==typeof a.Spec.UpdateConfig.Parallelism?a.Spec.UpdateConfig.Parallelism||0:1,this.UpdateDelay=a.Spec.UpdateConfig.Delay||0,this.UpdateFailureAction=a.Spec.UpdateConfig.FailureAction||"pause",this.UpdateOrder=a.Spec.UpdateConfig.Order||"stop-first"):(this.UpdateParallelism=1,this.UpdateDelay=0,this.UpdateFailureAction="pause",this.UpdateOrder="stop-first"),this.RollbackConfig=a.Spec.RollbackConfig,this.Checked=!1,this.Scale=!1,this.EditName=!1,a.Portainer&&a.Portainer.ResourceControl&&(this.ResourceControl=new ResourceControlViewModel(a.Portainer.ResourceControl))}function TaskViewModel(a){this.Id=a.ID,this.Created=a.CreatedAt,this.Updated=a.UpdatedAt,this.Slot=a.Slot,this.Spec=a.Spec,this.Status=a.Status,this.ServiceId=a.ServiceID,this.NodeId=a.NodeID}function VolumeViewModel(a){this.Id=a.Name,this.Driver=a.Driver,this.Options=a.Options,this.Labels=a.Labels,this.Mountpoint=a.Mountpoint,a.Portainer&&a.Portainer.ResourceControl&&(this.ResourceControl=new ResourceControlViewModel(a.Portainer.ResourceControl))}function isJSONArray(a){return"[object Array]"===Object.prototype.toString.call(a)}function isJSON(a){try{var b=JSON.parse(a);if(b&&"object"==typeof b)return b}catch(e){}return!1}function jsonObjectsToArrayHandler(a){var b="["+a.replace(/\n/g," ").replace(/\}\s*\{/g,"}, {")+"]";return angular.fromJson(b)}function genericHandler(a){var b={};return a?(isJSON(a)?b=angular.fromJson(a):b.message=a,b):b}function deleteImageHandler(a){var b=[];if(isJSON(a))if(isJSONArray(a))b=angular.fromJson(a);else{var c=angular.fromJson(a);b.push(c)}else b.push({message:a});return b}angular.module("portainer.filters",[]),angular.module("portainer.rest",["ngResource"]),angular.module("portainer.services",[]),angular.module("portainer.helpers",[]);var app=angular.module("portainer",["ui.bootstrap","ui.router","isteven-multi-select","ngCookies","ngSanitize","ngFileUpload","angularUtils.directives.dirPagination","LocalStorageModule","angular-jwt","angular-google-analytics","pascalprecht.translate","portainer.templates","portainer.filters","portainer.rest","portainer.helpers","portainer.services","auth","dashboard","container","containerConsole","containerLogs","serviceLogs","containers","createContainer","createNetwork","createRegistry","createSecret","createService","createVolume","docker","endpoint","endpointAccess","endpoints","events","image","images","initAdmin","initEndpoint","languageSwitch","main","network","networks","node","registries","registry","registryAccess","secrets","secret","service","services","settings","settingsAuthentication","sidebar","stats","swarm","task","team","teams","templates","user","users","userSettings","volume","volumes"]);app.config(["$stateProvider","$urlRouterProvider","$httpProvider","localStorageServiceProvider","jwtOptionsProvider","AnalyticsProvider","$uibTooltipProvider","$compileProvider","$translateProvider",function(a,b,c,d,e,f,g,h,i){"use strict";h.debugInfoEnabled(!1),d.setPrefix("portainer");var j=window.localStorage.lang||"cn";i.preferredLanguage(j),i.useStaticFilesLoader({prefix:"/i18n/",suffix:".json"}),e.config({tokenGetter:["LocalStorage",function(a){return a.getJWT()}],unauthenticatedRedirector:["$state",function(a){a.go("auth",{error:"Your session has expired"})}]}),c.interceptors.push("jwtInterceptor"),f.setAccount("UA-84944922-2"),f.startOffline(!0),b.otherwise("/auth"),toastr.options.timeOut=3e3,g.setTriggers({mouseenter:"mouseleave",click:"click",focus:"blur",outsideClick:"outsideClick"}),a.state("root",{abstract:!0,resolve:{requiresLogin:["StateManager",function(a){return a.getState().application.authentication}]}}).state("auth",{parent:"root",url:"/auth",params:{logout:!1,error:""},views:{"content@":{templateUrl:"app/components/auth/auth.html",controller:"AuthenticationController"}},data:{requiresLogin:!1}}).state("containers",{parent:"root",url:"/containers/",views:{"content@":{templateUrl:"app/components/containers/containers.html",controller:"ContainersController"},"sidebar@":{templateUrl:"app/components/sidebar/sidebar.html",controller:"SidebarController"}}}).state("container",{url:"^/containers/:id",views:{"content@":{templateUrl:"app/components/container/container.html",controller:"ContainerController"},"sidebar@":{templateUrl:"app/components/sidebar/sidebar.html",controller:"SidebarController"}}}).state("stats",{url:"^/containers/:id/stats",views:{"content@":{templateUrl:"app/components/stats/stats.html",controller:"StatsController"},"sidebar@":{templateUrl:"app/components/sidebar/sidebar.html",controller:"SidebarController"}}}).state("containerlogs",{url:"^/containers/:id/logs",views:{"content@":{templateUrl:"app/components/containerLogs/containerlogs.html",controller:"ContainerLogsController"},"sidebar@":{templateUrl:"app/components/sidebar/sidebar.html",controller:"SidebarController"}}}).state("servicelogs",{url:"^/services/:id/logs",views:{"content@":{templateUrl:"app/components/serviceLogs/servicelogs.html",controller:"ServiceLogsController"},"sidebar@":{templateUrl:"app/components/sidebar/sidebar.html",controller:"SidebarController"}}}).state("console",{url:"^/containers/:id/console",views:{"content@":{templateUrl:"app/components/containerConsole/containerConsole.html",controller:"ContainerConsoleController"},"sidebar@":{templateUrl:"app/components/sidebar/sidebar.html",controller:"SidebarController"}}}).state("dashboard",{parent:"root",url:"/dashboard",views:{"content@":{templateUrl:"app/components/dashboard/dashboard.html",controller:"DashboardController"},"sidebar@":{templateUrl:"app/components/sidebar/sidebar.html",controller:"SidebarController"}}}).state("actions",{abstract:!0,url:"/actions",views:{"content@":{template:'<div ui-view="content@"></div>'},"sidebar@":{template:'<div ui-view="sidebar@"></div>'}}}).state("actions.create",{abstract:!0,url:"/create",views:{"content@":{template:'<div ui-view="content@"></div>'},"sidebar@":{template:'<div ui-view="sidebar@"></div>'}}}).state("actions.create.container",{url:"/container/:from",views:{"content@":{templateUrl:"app/components/createContainer/createcontainer.html",controller:"CreateContainerController"},"sidebar@":{templateUrl:"app/components/sidebar/sidebar.html",controller:"SidebarController"}}}).state("actions.create.network",{url:"/network",views:{"content@":{templateUrl:"app/components/createNetwork/createnetwork.html",controller:"CreateNetworkController"},"sidebar@":{templateUrl:"app/components/sidebar/sidebar.html",controller:"SidebarController"}}}).state("actions.create.registry",{url:"/registry",views:{"content@":{templateUrl:"app/components/createRegistry/createregistry.html",controller:"CreateRegistryController"},"sidebar@":{templateUrl:"app/components/sidebar/sidebar.html",controller:"SidebarController"}}}).state("actions.create.secret",{url:"/secret",views:{"content@":{templateUrl:"app/components/createSecret/createsecret.html",controller:"CreateSecretController"},"sidebar@":{templateUrl:"app/components/sidebar/sidebar.html",controller:"SidebarController"}}}).state("actions.create.service",{url:"/service",views:{"content@":{templateUrl:"app/components/createService/createservice.html",controller:"CreateServiceController"},"sidebar@":{templateUrl:"app/components/sidebar/sidebar.html",controller:"SidebarController"}}}).state("actions.create.volume",{url:"/volume",views:{"content@":{templateUrl:"app/components/createVolume/createvolume.html",controller:"CreateVolumeController"},"sidebar@":{templateUrl:"app/components/sidebar/sidebar.html",controller:"SidebarController"}}}).state("init",{abstract:!0,url:"/init",views:{"content@":{template:'<div ui-view="content@"></div>'}}}).state("init.endpoint",{url:"/endpoint",views:{"content@":{templateUrl:"app/components/initEndpoint/initEndpoint.html",controller:"InitEndpointController"}}}).state("init.admin",{url:"/admin",views:{"content@":{templateUrl:"app/components/initAdmin/initAdmin.html",controller:"InitAdminController"}}}).state("docker",{url:"/docker/",views:{"content@":{templateUrl:"app/components/docker/docker.html",controller:"DockerController"},"sidebar@":{templateUrl:"app/components/sidebar/sidebar.html",controller:"SidebarController"}}}).state("endpoints",{url:"/endpoints/",views:{"content@":{templateUrl:"app/components/endpoints/endpoints.html",controller:"EndpointsController"},"sidebar@":{templateUrl:"app/components/sidebar/sidebar.html",controller:"SidebarController"}}}).state("endpoint",{url:"^/endpoints/:id",views:{"content@":{templateUrl:"app/components/endpoint/endpoint.html",controller:"EndpointController"},"sidebar@":{templateUrl:"app/components/sidebar/sidebar.html",controller:"SidebarController"}}}).state("endpoint.access",{url:"^/endpoints/:id/access",views:{"content@":{templateUrl:"app/components/endpointAccess/endpointAccess.html",controller:"EndpointAccessController"},"sidebar@":{templateUrl:"app/components/sidebar/sidebar.html",controller:"SidebarController"}}}).state("events",{url:"/events/",views:{"content@":{templateUrl:"app/components/events/events.html",controller:"EventsController"},"sidebar@":{templateUrl:"app/components/sidebar/sidebar.html",controller:"SidebarController"}}}).state("images",{url:"/images/",views:{"content@":{templateUrl:"app/components/images/images.html",controller:"ImagesController"},"sidebar@":{templateUrl:"app/components/sidebar/sidebar.html",controller:"SidebarController"}}}).state("image",{url:"^/images/:id/",views:{"content@":{templateUrl:"app/components/image/image.html",controller:"ImageController"},"sidebar@":{templateUrl:"app/components/sidebar/sidebar.html",controller:"SidebarController"}}}).state("networks",{url:"/networks/",views:{"content@":{templateUrl:"app/components/networks/networks.html",controller:"NetworksController"},"sidebar@":{templateUrl:"app/components/sidebar/sidebar.html",controller:"SidebarController"}}}).state("network",{url:"^/networks/:id/",views:{"content@":{templateUrl:"app/components/network/network.html",controller:"NetworkController"},"sidebar@":{templateUrl:"app/components/sidebar/sidebar.html",controller:"SidebarController"}}}).state("node",{url:"^/nodes/:id/",views:{"content@":{templateUrl:"app/components/node/node.html",controller:"NodeController"},"sidebar@":{templateUrl:"app/components/sidebar/sidebar.html",controller:"SidebarController"}}}).state("registries",{url:"/registries/",views:{"content@":{templateUrl:"app/components/registries/registries.html",controller:"RegistriesController"},"sidebar@":{templateUrl:"app/components/sidebar/sidebar.html",controller:"SidebarController"}}}).state("registry",{url:"^/registries/:id",views:{"content@":{templateUrl:"app/components/registry/registry.html",controller:"RegistryController"},"sidebar@":{templateUrl:"app/components/sidebar/sidebar.html",controller:"SidebarController"}}}).state("registry.access",{url:"^/registries/:id/access",views:{"content@":{templateUrl:"app/components/registryAccess/registryAccess.html",controller:"RegistryAccessController"},"sidebar@":{templateUrl:"app/components/sidebar/sidebar.html",controller:"SidebarController"}}}).state("secrets",{url:"^/secrets/",views:{"content@":{templateUrl:"app/components/secrets/secrets.html",controller:"SecretsController"},"sidebar@":{templateUrl:"app/components/sidebar/sidebar.html",controller:"SidebarController"}}}).state("secret",{url:"^/secret/:id/",views:{"content@":{templateUrl:"app/components/secret/secret.html",controller:"SecretController"},"sidebar@":{templateUrl:"app/components/sidebar/sidebar.html",controller:"SidebarController"}}}).state("services",{url:"/services/",views:{"content@":{templateUrl:"app/components/services/services.html",controller:"ServicesController"},"sidebar@":{templateUrl:"app/components/sidebar/sidebar.html",controller:"SidebarController"}}}).state("service",{url:"^/service/:id/",views:{"content@":{templateUrl:"app/components/service/service.html",controller:"ServiceController"},"sidebar@":{templateUrl:"app/components/sidebar/sidebar.html",controller:"SidebarController"}}}).state("settings",{url:"/settings/",views:{"content@":{templateUrl:"app/components/settings/settings.html",controller:"SettingsController"},"sidebar@":{templateUrl:"app/components/sidebar/sidebar.html",controller:"SidebarController"}}}).state("settings_authentication",{url:"^/settings/authentication",views:{"content@":{templateUrl:"app/components/settingsAuthentication/settingsAuthentication.html",controller:"SettingsAuthenticationController"},"sidebar@":{templateUrl:"app/components/sidebar/sidebar.html",controller:"SidebarController"}}}).state("task",{url:"^/task/:id",views:{"content@":{templateUrl:"app/components/task/task.html",controller:"TaskController"},"sidebar@":{templateUrl:"app/components/sidebar/sidebar.html",controller:"SidebarController"}}}).state("templates",{url:"/templates/",params:{key:"containers",hide_descriptions:!1},views:{"content@":{templateUrl:"app/components/templates/templates.html",controller:"TemplatesController"},"sidebar@":{templateUrl:"app/components/sidebar/sidebar.html",controller:"SidebarController"}}}).state("templates_linuxserver",{url:"^/templates/linuxserver.io",params:{key:"linuxserver.io",hide_descriptions:!0},views:{"content@":{templateUrl:"app/components/templates/templates.html",controller:"TemplatesController"},"sidebar@":{templateUrl:"app/components/sidebar/sidebar.html",controller:"SidebarController"}}}).state("volumes",{url:"/volumes/",views:{"content@":{templateUrl:"app/components/volumes/volumes.html",controller:"VolumesController"},"sidebar@":{templateUrl:"app/components/sidebar/sidebar.html",controller:"SidebarController"}}}).state("volume",{url:"^/volumes/:id",views:{"content@":{templateUrl:"app/components/volume/volume.html",controller:"VolumeController"},"sidebar@":{templateUrl:"app/components/sidebar/sidebar.html",controller:"SidebarController"}}}).state("users",{url:"/users/",views:{"content@":{templateUrl:"app/components/users/users.html",controller:"UsersController"},"sidebar@":{templateUrl:"app/components/sidebar/sidebar.html",controller:"SidebarController"}}}).state("user",{url:"^/users/:id",views:{"content@":{templateUrl:"app/components/user/user.html",controller:"UserController"},"sidebar@":{templateUrl:"app/components/sidebar/sidebar.html",controller:"SidebarController"}}}).state("userSettings",{url:"/userSettings/",views:{"content@":{templateUrl:"app/components/userSettings/userSettings.html",controller:"UserSettingsController"},"sidebar@":{templateUrl:"app/components/sidebar/sidebar.html",controller:"SidebarController"}}}).state("teams",{url:"/teams/",views:{"content@":{templateUrl:"app/components/teams/teams.html",controller:"TeamsController"},"sidebar@":{templateUrl:"app/components/sidebar/sidebar.html",controller:"SidebarController"}}}).state("team",{url:"^/teams/:id",views:{"content@":{templateUrl:"app/components/team/team.html",controller:"TeamController"},"sidebar@":{templateUrl:"app/components/sidebar/sidebar.html",controller:"SidebarController"}}}).state("swarm",{url:"/swarm/",views:{"content@":{templateUrl:"app/components/swarm/swarm.html",controller:"SwarmController"},"sidebar@":{templateUrl:"app/components/sidebar/sidebar.html",controller:"SidebarController"}}})}]).run(["$rootScope","$state","Authentication","authManager","StateManager","EndpointProvider","Notifications","Analytics",function(a,b,c,d,e,f,g,h){f.initialize(),e.initialize().then(function(b){b.application.authentication&&(d.checkAuthOnRefresh(),d.redirectWhenUnauthenticated(),c.init(),a.$on("tokenHasExpired",function(a){a.go("auth",{error:"Your session has expired"})})),b.application.analytics&&(h.offline(!1),h.registerScriptTags(),h.registerTrackers(),a.$on("$stateChangeSuccess",function(a,b,c,d,e){h.trackPage(b.url),h.pageView()}))},function(a){g.error("Failure",a,"Unable to retrieve application settings")}),a.$state=b}]).constant("API_ENDPOINT_AUTH","api/auth").constant("API_ENDPOINT_DOCKERHUB","api/dockerhub").constant("API_ENDPOINT_ENDPOINTS","api/endpoints").constant("API_ENDPOINT_REGISTRIES","api/registries").constant("API_ENDPOINT_RESOURCE_CONTROLS","api/resource_controls").constant("API_ENDPOINT_SETTINGS","api/settings").constant("API_ENDPOINT_STATUS","api/status").constant("API_ENDPOINT_USERS","api/users").constant("API_ENDPOINT_TEAMS","api/teams").constant("API_ENDPOINT_TEAM_MEMBERSHIPS","api/team_memberships").constant("API_ENDPOINT_TEMPLATES","api/templates").constant("DEFAULT_TEMPLATES_URL","https://raw.githubusercontent.com/portainer/templates/master/templates.json").constant("PAGINATION_MAX_ITEMS",10),angular.module("auth",[]).controller("AuthenticationController",["$scope","languageSwitch","$state","$stateParams","$window","$timeout","$sanitize","Authentication","Users","UserService","EndpointService","StateManager","EndpointProvider","Notifications","SettingsService",function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o){function p(a){m.endpointID()||m.setEndpointID(a.Id),l.updateEndpointState(!0).then(function(a){c.go("dashboard")}).catch(function(a){n.error("Failure",a,"Unable to connect to the Docker endpoint")})}function q(){k.endpoints().then(function(a){var b=a;b.length>0?p(b[0]):c.go("init.endpoint")}).catch(function(a){n.error("Failure",a,"Unable to retrieve endpoints")})}function r(){j.administratorExists().then(function(a){a||c.go("init.admin")}).catch(function(a){n.error("Failure",a,"Unable to verify administrator account existence")})}function s(){if(d.logout||d.error)return h.logout(),void(a.state.AuthenticationError=d.error);h.isAuthenticated()&&c.go("dashboard"),a.applicationState.application.authentication?r():q()}a.login_title=b.languageSwitch(100001),a.logo=l.getState().application.logo,a.formValues={Username:"",Password:""},a.state={AuthenticationError:""},a.authenticateUser=function(){var b=a.formValues.Username,d=a.formValues.Password;o.publicSettings().then(function(a){return 1===a.AuthenticationMethod&&(b=g(b),d=g(d)),h.login(b,d)}).then(function(){return k.endpoints()}).then(function(b){var d=b,e=h.getUserDetails();d.length>0?p(d[0]):0===d.length&&1===e.role?c.go("init.endpoint"):0===d.length&&2===e.role&&(h.logout(),a.state.AuthenticationError="User not allowed. Please contact your administrator.")}).catch(function(){a.state.AuthenticationError="Invalid credentials"})},s()}]),angular.module("container",[]).controller("ContainerController",["$q","$scope","$state","$stateParams","$filter","Container","ContainerCommit","ContainerHelper","ContainerService","ImageHelper","Network","NetworkService","Notifications","Pagination","ModalService","ResourceControlService","RegistryService","ImageService",function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){function s(d){$("#loadingViewSpinner").show();var e=b.container,f=h.configFromContainer(e.Model);i.remove(e,!0).then(function(){return q.retrieveRegistryFromRepository(e.Config.Image)}).then(function(b){return a.when(!d||r.pullImage(e.Config.Image,b,!0))}).then(function(){return i.createAndStartContainer(f)}).then(function(a){if(e.ResourceControl){var b=a.Id,c=e.ResourceControl,d=c.UserAccesses.map(function(a){return a.UserId}),f=c.TeamAccesses.map(function(a){return a.TeamId});return p.createResourceControl(c.AdministratorsOnly,d,f,b,"container",[])}return!0}).then(function(a){m.success("Container successfully re-created"),c.go("containers",{},{reload:!0})}).catch(function(a){m.error("Failure",a,"Unable to re-create container")}).finally(function(){$("#loadingViewSpinner").hide()})}b.activityTime=0,b.portBindings=[],b.config={Image:"",Registry:""},b.state={},b.state.pagination_count=n.getPaginationCount("container_networks"),b.changePaginationCount=function(){n.setPaginationCount("container_networks",b.state.pagination_count)};var t=function(){$("#loadingViewSpinner").show(),f.get({id:d.id},function(a){var c=new ContainerDetailsViewModel(a);b.container=c,b.container.edit=!1,b.container.newContainerName=e("trimcontainername")(c.Name),c.State.Running?b.activityTime=moment.duration(moment(c.State.StartedAt).utc().diff(moment().utc())).humanize():"created"===c.State.Status?b.activityTime=moment.duration(moment(c.Created).utc().diff(moment().utc())).humanize():b.activityTime=moment.duration(moment().utc().diff(moment(c.State.FinishedAt).utc())).humanize(),b.portBindings=[],c.NetworkSettings.Ports&&angular.forEach(Object.keys(c.NetworkSettings.Ports),function(a){if(c.NetworkSettings.Ports[a]){var d={};d.container=a,d.host=c.NetworkSettings.Ports[a][0].HostIp+":"+c.NetworkSettings.Ports[a][0].HostPort,b.portBindings.push(d)}}),$("#loadingViewSpinner").hide()
},function(a){$("#loadingViewSpinner").hide(),m.error("Failure",a,"Unable to retrieve container info")})};b.start=function(){$("#loadingViewSpinner").show(),f.start({id:b.container.Id},{},function(a){t(),m.success("Container started",d.id)},function(a){t(),m.error("Failure",a,"Unable to start container")})},b.stop=function(){$("#loadingViewSpinner").show(),f.stop({id:d.id},function(a){t(),m.success("Container stopped",d.id)},function(a){t(),m.error("Failure",a,"Unable to stop container")})},b.kill=function(){$("#loadingViewSpinner").show(),f.kill({id:d.id},function(a){t(),m.success("Container killed",d.id)},function(a){t(),m.error("Failure",a,"Unable to kill container")})},b.commit=function(){$("#createImageSpinner").show();var a=b.config.Image,c=b.config.Registry,e=j.createImageConfigForCommit(a,c.URL);g.commit({id:d.id,tag:e.tag,repo:e.repo},function(a){$("#createImageSpinner").hide(),t(),m.success("Container commited",d.id)},function(a){$("#createImageSpinner").hide(),t(),m.error("Failure",a,"Unable to commit container")})},b.pause=function(){$("#loadingViewSpinner").show(),f.pause({id:d.id},function(a){t(),m.success("Container paused",d.id)},function(a){t(),m.error("Failure",a,"Unable to pause container")})},b.unpause=function(){$("#loadingViewSpinner").show(),f.unpause({id:d.id},function(a){t(),m.success("Container unpaused",d.id)},function(a){t(),m.error("Failure",a,"Unable to unpause container")})},b.confirmRemove=function(){var a="You are about to remove a container.";b.container.State.Running&&(a="You are about to remove a running container."),o.confirmContainerDeletion(a,function(a){if(a){var c=!1;a[0]&&(c=!0),b.remove(c)}})},b.remove=function(a){$("#loadingViewSpinner").show(),i.remove(b.container,a).then(function(){m.success("Container successfully removed"),c.go("containers",{},{reload:!0})}).catch(function(a){m.error("Failure",a,"Unable to remove container")}).finally(function(){$("#loadingViewSpinner").hide()})},b.restart=function(){$("#loadingViewSpinner").show(),f.restart({id:d.id},function(a){t(),m.success("Container restarted",d.id)},function(a){t(),m.error("Failure",a,"Unable to restart container")})},b.renameContainer=function(){var a=b.container;f.rename({id:d.id,name:a.newContainerName},function(b){b.message?(a.newContainerName=a.Name,m.error("Unable to rename container",{},b.message)):(a.Name=a.newContainerName,m.success("Container successfully renamed",a.Name))},function(a){m.error("Failure",a,"Unable to rename container")}),b.container.edit=!1},b.containerLeaveNetwork=function(a,b){$("#loadingViewSpinner").show(),k.disconnect({id:b},{Container:d.id,Force:!1},function(b){a.message?($("#loadingViewSpinner").hide(),m.error("Error",b,"Unable to disconnect container from network")):($("#loadingViewSpinner").hide(),m.success("Container left network",d.id),c.go("container",{id:d.id},{reload:!0}))},function(a){$("#loadingViewSpinner").hide(),m.error("Failure",a,"Unable to disconnect container from network")})},b.duplicate=function(){o.confirmExperimentalFeature(function(a){a&&c.go("actions.create.container",{from:d.id},{reload:!0})})},b.confirmRemove=function(){var a="You are about to remove a container.";b.container.State.Running&&(a="You are about to remove a running container."),o.confirmContainerDeletion(a,function(a){if(a){var c=!1;a[0]&&(c=!0),b.remove(c)}})},b.recreate=function(){o.confirmExperimentalFeature(function(a){a&&o.confirmContainerRecreation(function(a){if(a){var b=!1;a[0]&&(b=!0),s(b)}})})},b.containerJoinNetwork=function(a,b){$("#joinNetworkSpinner").show(),k.connect({id:b},{Container:d.id},function(b){a.message?($("#joinNetworkSpinner").hide(),m.error("Error",b,"Unable to connect container to network")):($("#joinNetworkSpinner").hide(),m.success("Container joined network",d.id),c.go("container",{id:d.id},{reload:!0}))},function(a){$("#joinNetworkSpinner").hide(),m.error("Failure",a,"Unable to connect container to network")})};var u=b.applicationState.endpoint.mode.provider,v=b.applicationState.endpoint.apiVersion;l.networks("DOCKER_STANDALONE"===u||"DOCKER_SWARM_MODE"===u,!1,"DOCKER_SWARM_MODE"===u&&v>=1.25,"DOCKER_SWARM"===u).then(function(a){var c=a;b.availableNetworks=c}).catch(function(a){m.error("Failure",a,"Unable to retrieve networks")}),t()}]),angular.module("containerConsole",[]).controller("ContainerConsoleController",["$scope","$stateParams","Container","Image","EndpointProvider","Notifications","ContainerHelper","ContainerService","ExecService",function(a,b,c,d,e,f,g,h,i){function j(b,c,d){k=new WebSocket(b),a.state.connected=!0,k.onopen=function(b){$("#loadConsoleSpinner").hide(),l=new Terminal,l.on("data",function(a){k.send(a)}),l.open(document.getElementById("terminal-container"),!0),l.resize(d,c),l.setOption("cursorBlink",!0),l.fit(),window.onresize=function(){l.fit()},k.onmessage=function(a){l.write(a.data)},k.onerror=function(b){a.state.connected=!1},k.onclose=function(b){a.state.connected=!1}}}a.state={},a.state.loaded=!1,a.state.connected=!1,a.formValues={};var k,l;a.$on("$stateChangeStart",function(a,b,c){k&&null!==k&&k.close()}),c.get({id:b.id},function(b){a.container=b,b.message?(f.error("Error",b,"Unable to retrieve container details"),$("#loadingViewSpinner").hide()):d.get({id:b.Image},function(b){a.imageOS=b.Os,a.formValues.command="windows"===b.Os?"powershell":"bash",a.state.loaded=!0,$("#loadingViewSpinner").hide()},function(a){f.error("Failure",a,"Unable to retrieve image details"),$("#loadingViewSpinner").hide()})},function(a){f.error("Failure",a,"Unable to retrieve container details"),$("#loadingViewSpinner").hide()}),a.connect=function(){$("#loadConsoleSpinner").show();var c,d=Math.floor(($("#terminal-container").width()-20)/8.39),k=30,l=a.formValues.isCustomCommand?a.formValues.customCommand:a.formValues.command,m={id:b.id,AttachStdin:!0,AttachStdout:!0,AttachStderr:!0,Tty:!0,User:a.formValues.user,Cmd:g.commandStringToArray(l)};h.createExec(m).then(function(a){c=a.Id;var b=window.location.href.split("#")[0]+"api/websocket/exec?id="+c+"&endpointId="+e.endpointID();return b=b.indexOf("https")>-1?b.replace("https://","wss://"):b.replace("http://","ws://"),j(b,k,d),i.resizeTTY(c,k,d,2e3)}).catch(function(a){f.error("Failure",a,"Unable to exec into container")}).finally(function(){$("#loadConsoleSpinner").hide()})},a.disconnect=function(){a.state.connected=!1,null!==k&&k.close(),null!==l&&l.destroy()}}]),angular.module("containerLogs",[]).controller("ContainerLogsController",["$scope","$stateParams","$anchorScroll","ContainerLogs","Container",function(a,b,c,d,e){function f(){$("#loadingViewSpinner").show(),h(),g(),$("#loadingViewSpinner").hide()}function g(){d.get(b.id,{stdout:0,stderr:1,timestamps:a.state.displayTimestampsErr,tail:a.tailLines},function(b,c,d,e){b=b.replace(/[\r]/g,"\n"),b=b.substring(8),b=b.replace(/\n(.{8})/g,"\n"),a.stderr=b})}function h(){d.get(b.id,{stdout:1,stderr:0,timestamps:a.state.displayTimestampsOut,tail:a.tailLines},function(b,c,d,e){b=b.replace(/[\r]/g,"\n"),b=b.substring(8),b=b.replace(/\n(.{8})/g,"\n"),a.stdout=b})}a.state={},a.state.displayTimestampsOut=!1,a.state.displayTimestampsErr=!1,a.stdout="",a.stderr="",a.tailLines=2e3,$("#loadingViewSpinner").show(),e.get({id:b.id},function(b){a.container=b,$("#loadingViewSpinner").hide()},function(a){$("#loadingViewSpinner").hide(),Notifications.error("Failure",a,"Unable to retrieve container info")}),f();var i=window.setInterval(f,5e3);a.$on("$destroy",function(){clearInterval(i)}),a.toggleTimestampsOut=function(){h()},a.toggleTimestampsErr=function(){g()}}]),angular.module("containers",[]).controller("ContainersController",["$q","$scope","$filter","Container","ContainerService","ContainerHelper","SystemService","Notifications","Pagination","EntityListService","ModalService","ResourceControlService","EndpointProvider",function(a,b,c,d,e,f,g,h,j,k,l,m,n){function o(a){a.Checked?b.state.selectedItemCount++:b.state.selectedItemCount--}function p(){b.state.noStoppedItemsSelected=!0,b.state.noRunningItemsSelected=!0,b.state.noPausedItemsSelected=!0,b.containers.forEach(function(a){a.Checked&&("paused"===a.Status?b.state.noPausedItemsSelected=!1:"stopped"===a.Status||"created"===a.Status?b.state.noStoppedItemsSelected=!1:"running"===a.Status&&(b.state.noRunningItemsSelected=!1))})}function q(a){var b={},c=a.SystemStatus,d=parseInt(c[3][1],10),e=4;for(i=0;i<d;i++){var f={};f.name=_.trim(c[e][0]),f.ip=_.split(c[e][1],":")[0],b[f.name]=f.ip,e+=9}return b}function r(){var c=b.applicationState.endpoint.mode.provider;a.when("DOCKER_SWARM"!==c||g.info()).then(function(a){"DOCKER_SWARM"===c&&(b.swarm_hosts=q(a)),s({all:b.state.displayAll?1:0})}).catch(function(a){h.error("Failure",a,"Unable to retrieve cluster information")})}b.state={},b.state.pagination_count=j.getPaginationCount("containers"),b.state.displayAll=!0,b.state.displayIP=!1,b.sortType="State",b.sortReverse=!1,b.state.selectedItemCount=0,b.order=function(a){b.sortReverse=b.sortType===a&&!b.sortReverse,b.sortType=a},b.PublicURL=n.endpointPublicURL(),b.changePaginationCount=function(){j.setPaginationCount("containers",b.state.pagination_count)},b.cleanAssociatedVolumes=!1;var s=function(a){$("#loadContainersSpinner").show(),b.state.selectedItemCount=0,d.query(a,function(a){var d=a;b.containers=d.map(function(a){var d=new ContainerViewModel(a);return d.Status=c("containerstatus")(d.Status),k.rememberPreviousSelection(b.containers,d,function(a){b.selectItem(a)}),d.IP&&(b.state.displayIP=!0),"DOCKER_SWARM"===b.applicationState.endpoint.mode.provider&&(d.hostIP=b.swarm_hosts[_.split(a.Names[0],"/")[1]]),d}),p(),$("#loadContainersSpinner").hide()},function(a){$("#loadContainersSpinner").hide(),h.error("Failure",a,"Unable to retrieve containers"),b.containers=[]})},t=function(a,c,f){$("#loadContainersSpinner").show();var g=0,i=function(){0===(g-=1)&&($("#loadContainersSpinner").hide(),s({all:b.state.displayAll?1:0}))};angular.forEach(a,function(a){a.Checked&&(g+=1,c===d.start?c({id:a.Id},{},function(b){h.success("Container "+f,a.Id),i()},function(a){h.error("Failure",a,"Unable to start container"),i()}):c===d.remove?e.remove(a,b.cleanAssociatedVolumes).then(function(){h.success("Container successfully removed")}).catch(function(a){h.error("Failure",a,"Unable to remove container")}).finally(function(){i()}):c===d.pause?c({id:a.Id},function(b){b.message?h.success("Container is already paused",a.Id):h.success("Container "+f,a.Id),i()},function(a){h.error("Failure",a,"Unable to pause container"),i()}):c({id:a.Id},function(b){h.success("Container "+f,a.Id),i()},function(a){h.error("Failure",a,"An error occured"),i()}))}),0===g&&$("#loadContainersSpinner").hide()};b.selectItems=function(a){angular.forEach(b.state.filteredContainers,function(b){b.Checked!==a&&(b.Checked=a,o(b))}),p()},b.selectItem=function(a){o(a),p()},b.toggleGetAll=function(){s({all:b.state.displayAll?1:0})},b.startAction=function(){t(b.containers,d.start,"Started")},b.stopAction=function(){t(b.containers,d.stop,"Stopped")},b.restartAction=function(){t(b.containers,d.restart,"Restarted")},b.killAction=function(){t(b.containers,d.kill,"Killed")},b.pauseAction=function(){t(b.containers,d.pause,"Paused")},b.unpauseAction=function(){t(b.containers,d.unpause,"Unpaused")},b.removeAction=function(){t(b.containers,d.remove,"Removed")},b.confirmRemoveAction=function(){var a=!1;angular.forEach(b.containers,function(b){if(b.Checked&&"running"===b.State)return void(a=!0)});var c="You are about to remove one or more container.";a&&(c="You are about to remove one or more running containers."),l.confirmContainerDeletion(c,function(a){a&&(b.cleanAssociatedVolumes=!1,a[0]&&(b.cleanAssociatedVolumes=!0),b.removeAction())})},r()}]),angular.module("createContainer",[]).controller("CreateContainerController",["$q","$scope","$state","$stateParams","$filter","Container","ContainerHelper","Image","ImageHelper","Volume","NetworkService","ResourceControlService","Authentication","Notifications","ContainerService","ImageService","FormValidator","ModalService","RegistryService",function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s){function t(a){var c=a.Image,d=b.formValues.Registry,e=i.createImageConfigForContainer(c,d.URL);a.Image=e.fromImage+":"+e.tag,b.imageConfig=e}function u(a){var b={};a.HostConfig.PortBindings.forEach(function(c){if(c.containerPort){var d=c.containerPort+"/"+c.protocol,e={};if(c.hostPort&&c.hostPort.indexOf(":")>-1){var f=c.hostPort.split(":");e.HostIp=f[0],e.HostPort=f[1]}else e.HostPort=c.hostPort;b[d]=[e],a.ExposedPorts[d]={}}}),a.HostConfig.PortBindings=b}function v(a){var c=b.formValues.Console,d=!0,e=!0;"tty"===c?d=!1:"interactive"===c?e=!1:"none"===c&&(d=!1,e=!1),a.OpenStdin=d,a.Tty=e}function w(a){var b=[];a.Env.forEach(function(a){a.name&&a.value&&b.push(a.name+"="+a.value)}),a.Env=b}function x(a){var c=[],d={};b.formValues.Volumes.forEach(function(a){var b=a.name,e=a.containerPath;if(b&&e){var f=b+":"+e;d[e]={},a.readOnly&&(f+=":ro"),c.push(f)}}),a.HostConfig.Binds=c,a.Volumes=d}function y(a){var c=a.HostConfig.NetworkMode,d=b.formValues.NetworkContainer,f=d;d&&"object"==typeof d&&(f=e("trimcontainername")(d.Names[0]),"DOCKER_SWARM"===b.applicationState.endpoint.mode.provider&&(f=e("swarmcontainername")(d)));var g=c;f&&(g+=":"+f,a.Hostname=""),a.HostConfig.NetworkMode=g,a.NetworkingConfig.EndpointsConfig[g]={IPAMConfig:{IPv4Address:b.formValues.IPv4,IPv6Address:b.formValues.IPv6}},b.formValues.ExtraHosts.forEach(function(b){b.value&&a.HostConfig.ExtraHosts.push(b.value)})}function z(a){var c={};b.formValues.Labels.forEach(function(a){a.name&&a.value&&(c[a.name]=a.value)}),a.Labels=c}function A(a){var b=[];a.HostConfig.Devices.forEach(function(a){a.pathOnHost&&(""===a.pathInContainer&&(a.pathInContainer=a.pathOnHost),b.push({PathOnHost:a.pathOnHost,PathInContainer:a.pathInContainer,CgroupPermissions:"rwm"}))}),a.HostConfig.Devices=b}function B(){var a=angular.copy(b.config);return a.Cmd=g.commandStringToArray(a.Cmd),y(a),t(a),u(a),v(a),w(a),x(a),z(a),A(a),a}function C(){var c=a.defer();return f.query({all:1,filters:{name:["^/"+b.config.name+"$"]}}).$promise.then(function(a){var b=a[0];b?r.confirm({title:"Are you sure ?",message:"A container with the same name already exists. Portainer can automatically remove it and re-create one. Do you want to replace it?",buttons:{confirm:{label:"Replace",className:"btn-danger"}},callback:function(a){a?o.remove(b,!0).then(function(a){n.success("Container Removed",b.Id),c.resolve(!0)}).catch(function(a){c.reject({msg:"Unable to remove container",err:a})}):c.resolve(!1)}}):c.resolve(!0)}).catch(function(a){n.error("Failure",a,"Unable to retrieve containers")}),c.promise}function D(a){b.config.Cmd?b.config.Cmd=g.commandArrayToString(b.config.Cmd):b.config.Cmd=""}function E(a){var c=[];for(var d in b.config.HostConfig.PortBindings)if({}.hasOwnProperty.call(b.config.HostConfig.PortBindings,d)){var e="";b.config.HostConfig.PortBindings[d][0].HostIp&&(e=b.config.HostConfig.PortBindings[d][0].HostIp+":"),e+=b.config.HostConfig.PortBindings[d][0].HostPort;var f={hostPort:e,containerPort:d.split("/")[0],protocol:d.split("/")[1]};c.push(f)}b.config.HostConfig.PortBindings=c}function F(a){for(var c in a.Mounts)if({}.hasOwnProperty.call(a.Mounts,c)){var d=a.Mounts[c],e={type:d.Type,name:d.Name||d.Source,containerPath:d.Destination,readOnly:!1===d.RW};b.formValues.Volumes.push(e)}}function G(a){if(b.config.NetworkingConfig={EndpointsConfig:{}},"default"===a.HostConfig.NetworkMode&&(b.config.HostConfig.NetworkMode="bridge",_.find(b.availableNetworks,{Name:"bridge"})||(b.config.HostConfig.NetworkMode="nat")),0===b.config.HostConfig.NetworkMode.indexOf("container:")){var c=b.config.HostConfig.NetworkMode.split(/^container:/)[1];b.config.HostConfig.NetworkMode="container";for(var d in b.runningContainers)b.runningContainers[d].Names&&b.runningContainers[d].Names[0]==="/"+c&&(b.formValues.NetworkContainer=b.runningContainers[d])}b.fromContainerMultipleNetworks=Object.keys(a.NetworkSettings.Networks).length>=2,a.NetworkSettings.Networks[b.config.HostConfig.NetworkMode]&&a.NetworkSettings.Networks[b.config.HostConfig.NetworkMode].IPAMConfig&&(a.NetworkSettings.Networks[b.config.HostConfig.NetworkMode].IPAMConfig.IPv4Address&&(b.formValues.IPv4=a.NetworkSettings.Networks[b.config.HostConfig.NetworkMode].IPAMConfig.IPv4Address),a.NetworkSettings.Networks[b.config.HostConfig.NetworkMode].IPAMConfig.IPv6Address&&(b.formValues.IPv6=a.NetworkSettings.Networks[b.config.HostConfig.NetworkMode].IPAMConfig.IPv6Address)),b.config.NetworkingConfig.EndpointsConfig[b.config.HostConfig.NetworkMode]=a.NetworkSettings.Networks[b.config.HostConfig.NetworkMode];for(var e in b.config.HostConfig.ExtraHosts)({}).hasOwnProperty.call(b.config.HostConfig.ExtraHosts,e)&&(b.formValues.ExtraHosts.push({value:b.config.HostConfig.ExtraHosts[e]}),b.config.HostConfig.ExtraHosts=[])}function H(a){var c=[];for(var d in b.config.Env)if({}.hasOwnProperty.call(b.config.Env,d)){var e=b.config.Env[d].split(/\=(.+)/);c.push({name:e[0],value:e[1]})}b.config.Env=c}function I(a){for(var c in b.config.Labels)({}).hasOwnProperty.call(b.config.Labels,c)&&b.formValues.Labels.push({name:c,value:b.config.Labels[c]})}function J(a){b.config.OpenStdin&&b.config.Tty?b.formValues.Console="both":!b.config.OpenStdin&&b.config.Tty?b.formValues.Console="tty":b.config.OpenStdin&&!b.config.Tty?b.formValues.Console="interactive":b.config.OpenStdin||b.config.Tty||(b.formValues.Console="none")}function K(a){var c=[];for(var d in b.config.HostConfig.Devices)if({}.hasOwnProperty.call(b.config.HostConfig.Devices,d)){var e=b.config.HostConfig.Devices[d];c.push({pathOnHost:e.PathOnHost,pathInContainer:e.PathInContainer})}b.config.HostConfig.Devices=c}function L(a){var c=i.extractImageAndRegistryFromRepository(b.config.Image);s.retrieveRegistryFromRepository(b.config.Image).then(function(a){a&&(b.config.Image=c.image,b.formValues.Registry=a)}).catch(function(a){n.error("Failure",a,"Unable to retrive registry")})}function M(){f.get({id:d.from}).$promise.then(function(a){var c=new ContainerDetailsViewModel(a);c.ResourceControl||(b.formValues.AccessControlData.AccessControlEnabled=!1),b.fromContainer=c,b.config=g.configFromContainer(c.Model),D(a),E(a),F(a),G(a),H(a),I(a),J(a),K(a),L(a)}).catch(function(a){n.error("Failure",a,"Unable to retrieve container")})}function N(){j.query({},function(a){b.availableVolumes=a.Volumes},function(a){n.error("Failure",a,"Unable to retrieve volumes")});var a=b.applicationState.endpoint.mode.provider,c=b.applicationState.endpoint.apiVersion;k.networks("DOCKER_STANDALONE"===a||"DOCKER_SWARM_MODE"===a,!1,"DOCKER_SWARM_MODE"===a&&c>=1.25,"DOCKER_SWARM"===a).then(function(a){var c=a;c.push({Name:"container"}),b.availableNetworks=c,_.find(c,{Name:"nat"})&&(b.config.HostConfig.NetworkMode="nat")}).catch(function(a){n.error("Failure",a,"Unable to retrieve networks")}),f.query({},function(a){var c=a;b.runningContainers=c,""!==d.from?M():(b.fromContainer={},b.formValues.Registry={})},function(a){n.error("Failure",a,"Unable to retrieve running containers")})}function O(a,c){b.state.formValidationError="";var d="";return!(d=q.validateAccessControl(a,c))||(b.state.formValidationError=d,!1)}function P(d,e){a.when(!b.formValues.alwaysPull||p.pullImage(b.config.Image,b.formValues.Registry,!0)).finally(function(){o.createAndStartContainer(d).then(function(a){var b=a.Id,c=m.getUserDetails().ID;return l.applyResourceControl("container",b,c,e,[])}).then(function(){n.success("Container successfully created"),c.go("containers",{},{reload:!0})}).catch(function(a){n.error("Failure",a,"Unable to create container")}).finally(function(){$("#createContainerSpinner").hide()})})}b.formValues={alwaysPull:!0,Console:"none",Volumes:[],NetworkContainer:"",Labels:[],ExtraHosts:[],IPv4:"",IPv6:"",AccessControlData:new AccessControlFormData},b.state={formValidationError:""},b.config={Image:"",Env:[],Cmd:"",ExposedPorts:{},HostConfig:{RestartPolicy:{Name:"no"},PortBindings:[],PublishAllPorts:!1,Binds:[],NetworkMode:"bridge",Privileged:!1,ExtraHosts:[],Devices:[]},NetworkingConfig:{EndpointsConfig:{}},Labels:{}},b.addVolume=function(){b.formValues.Volumes.push({name:"",containerPath:"",readOnly:!1,type:"volume"})},b.removeVolume=function(a){b.formValues.Volumes.splice(a,1)},b.addEnvironmentVariable=function(){b.config.Env.push({name:"",value:""})},b.removeEnvironmentVariable=function(a){b.config.Env.splice(a,1)},b.addPortBinding=function(){b.config.HostConfig.PortBindings.push({hostPort:"",containerPort:"",protocol:"tcp"})},b.removePortBinding=function(a){b.config.HostConfig.PortBindings.splice(a,1)},b.addLabel=function(){b.formValues.Labels.push({name:"",value:""})},b.removeLabel=function(a){b.formValues.Labels.splice(a,1)},b.addExtraHost=function(){b.formValues.ExtraHosts.push({value:""})},b.removeExtraHost=function(a){b.formValues.ExtraHosts.splice(a,1)},b.addDevice=function(){b.config.HostConfig.Devices.push({pathOnHost:"",pathInContainer:""})},b.removeDevice=function(a){b.config.HostConfig.Devices.splice(a,1)},b.fromContainerMultipleNetworks=!1,b.create=function(){C().then(function(a){if(!a)return!1;$("#createContainerSpinner").show();var c=b.formValues.AccessControlData;if(!O(c,1===m.getUserDetails().role))return void $("#createContainerSpinner").hide();P(B(),c)}).catch(function(a){n.error("Failure",a,"Unable to create container")})},N()}]),angular.module("createNetwork",[]).controller("CreateNetworkController",["$scope","$state","Notifications","Network","LabelHelper",function(a,b,c,d,e){function f(a){$("#createNetworkSpinner").show(),d.create(a,function(a){a.message?($("#createNetworkSpinner").hide(),c.error("Unable to create network",{},a.message)):(c.success("Network created",a.Id),$("#createNetworkSpinner").hide(),b.go("networks",{},{reload:!0}))},function(a){$("#createNetworkSpinner").hide(),c.error("Failure",a,"Unable to create network")})}function g(b){if(a.formValues.Subnet){var c={};c.Subnet=a.formValues.Subnet,a.formValues.Gateway&&(c.Gateway=a.formValues.Gateway),b.IPAM.Config.push(c)}}function h(b){var c={};a.formValues.DriverOptions.forEach(function(a){c[a.name]=a.value}),b.Options=c}function i(b){b.Labels=e.fromKeyValueToLabelHash(a.formValues.Labels)}function j(){var b=angular.copy(a.config);return g(b),h(b),i(b),b}a.formValues={DriverOptions:[],Subnet:"",Gateway:"",Labels:[]},a.config={Driver:"bridge",CheckDuplicate:!0,Internal:!1,IPAM:{Driver:"default",Config:[]},Labels:{}},a.addDriverOption=function(){a.formValues.DriverOptions.push({name:"",value:""})},a.removeDriverOption=function(b){a.formValues.DriverOptions.splice(b,1)},a.addLabel=function(){a.formValues.Labels.push({key:"",value:""})},a.removeLabel=function(b){a.formValues.Labels.splice(b,1)},a.create=function(){f(j())}}]),angular.module("createRegistry",[]).controller("CreateRegistryController",["$scope","$state","RegistryService","Notifications",function(a,b,c,d){a.state={RegistryType:"quay"},a.formValues={Name:"Quay",URL:"quay.io",Authentication:!0,Username:"",Password:""},a.selectQuayRegistry=function(){a.formValues.Name="Quay",a.formValues.URL="quay.io",a.formValues.Authentication=!0},a.selectCustomRegistry=function(){a.formValues.Name="",a.formValues.URL="",a.formValues.Authentication=!1},a.addRegistry=function(){$("#createRegistrySpinner").show();var e=a.formValues.Name,f=a.formValues.URL.replace(/^https?\:\/\//i,""),g=a.formValues.Authentication,h=a.formValues.Username,i=a.formValues.Password;c.createRegistry(e,f,g,h,i).then(function(a){d.success("Registry successfully created"),b.go("registries")}).catch(function(a){d.error("Failure",a,"Unable to create registry")}).finally(function(){$("#createRegistrySpinner").hide()})}}]),angular.module("createSecret",[]).controller("CreateSecretController",["$scope","$state","Notifications","SecretService","LabelHelper",function(a,b,c,d,e){function f(b){b.Labels=e.fromKeyValueToLabelHash(a.formValues.Labels)}function g(b){a.formValues.encodeSecret?b.Data=btoa(unescape(encodeURIComponent(a.formValues.Data))):b.Data=a.formValues.Data}function h(){var b={};return b.Name=a.formValues.Name,g(b),f(b),b}function i(a){$("#createSecretSpinner").show(),d.create(a).then(function(a){c.success("Secret successfully created"),b.go("secrets",{},{reload:!0})}).catch(function(a){c.error("Failure",a,"Unable to create secret")}).finally(function(){$("#createSecretSpinner").hide()})}a.formValues={Name:"",Data:"",Labels:[],encodeSecret:!0},a.addLabel=function(){a.formValues.Labels.push({key:"",value:""})},a.removeLabel=function(b){a.formValues.Labels.splice(b,1)},a.create=function(){i(h())}}]),angular.module("createService",[]).controller("CreateServiceController",["$q","$scope","$state","Service","ServiceHelper","SecretHelper","SecretService","VolumeService","NetworkService","ImageHelper","LabelHelper","Authentication","ResourceControlService","Notifications","FormValidator","RegistryService","HttpRequestHelper",function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q){function r(a,b){var c=j.createImageConfigForContainer(b.Image,b.Registry.URL);a.TaskTemplate.ContainerSpec.Image=c.fromImage+":"+c.tag}function s(a,b){var c=[];b.Ports.forEach(function(a){var b={Protocol:a.Protocol,PublishMode:a.PublishMode};a.TargetPort&&(b.TargetPort=+a.TargetPort,a.PublishedPort&&(b.PublishedPort=+a.PublishedPort),c.push(b))}),a.EndpointSpec.Ports=c}function t(a,b){"replicated"===b.Mode?a.Mode.Replicated={Replicas:b.Replicas}:a.Mode.Global={}}function u(a){return[].concat.apply([],a.split("'").map(function(a,b){return b%2?a:a.split(" ")})).filter(Boolean)}function v(a,b){b.EntryPoint&&(a.TaskTemplate.ContainerSpec.Command=u(b.EntryPoint)),b.Command&&(a.TaskTemplate.ContainerSpec.Args=u(b.Command)),b.User&&(a.TaskTemplate.ContainerSpec.User=b.User),b.WorkingDir&&(a.TaskTemplate.ContainerSpec.Dir=b.WorkingDir)}function w(a,b){var c=[];b.Env.forEach(function(a){a.name&&c.push(a.name+"="+a.value)}),a.TaskTemplate.ContainerSpec.Env=c}function x(a,b){a.Labels=k.fromKeyValueToLabelHash(b.Labels),a.TaskTemplate.ContainerSpec.Labels=k.fromKeyValueToLabelHash(b.ContainerLabels)}function y(a,b){b.Volumes.forEach(function(b){b.Source&&b.Target&&a.TaskTemplate.ContainerSpec.Mounts.push(b)})}function z(a,b){var c=[];b.Network&&c.push({Target:b.Network}),b.ExtraNetworks.forEach(function(a){c.push({Target:a.Name})}),a.Networks=_.uniqWith(c,_.isEqual)}function A(a,b){a.UpdateConfig={Parallelism:b.Parallelism||0,Delay:b.UpdateDelay||0,FailureAction:b.FailureAction,Order:b.UpdateOrder}}function B(a,b){a.TaskTemplate.Placement.Constraints=e.translateKeyValueToPlacementConstraints(b.PlacementConstraints),a.TaskTemplate.Placement.Preferences=e.translateKeyValueToPlacementPreferences(b.PlacementPreferences)}function C(a,b){if(b.Secrets){var c=[];angular.forEach(b.Secrets,function(a){if(a.model){var b=f.secretConfig(a.model);b.File.Name=b.SecretName,c.push(b)}}),a.TaskTemplate.ContainerSpec.Secrets=c}}function D(){var a=b.formValues,c={Name:a.Name,TaskTemplate:{ContainerSpec:{Mounts:[]},Placement:{}},Mode:{},EndpointSpec:{}};return t(c,a),r(c,a),s(c,a),v(c,a),w(c,a),x(c,a),y(c,a),z(c,a),A(c,a),C(c,a),B(c,a),c}function E(a,e){var f=b.formValues.Registry,g=f.Authentication?p.encodedCredentials(f):"";q.setRegistryAuthenticationHeader(g),d.create(a).$promise.then(function(a){var b=a.ID,c=l.getUserDetails().ID;return m.applyResourceControl("service",b,c,e,[])}).then(function(){n.success("Service successfully created"),c.go("services",{},{reload:!0})}).catch(function(a){n.error("Failure",a,"Unable to create service")}).finally(function(){$("#createServiceSpinner").hide()})}function F(a,c){b.state.formValidationError="";var d="";return!(d=o.validateAccessControl(a,c))||(b.state.formValidationError=d,!1)}function G(){$("#loadingViewSpinner").show();var c=b.applicationState.endpoint.apiVersion;a.all({volumes:h.volumes(),secrets:c>=1.25?g.secrets():[],networks:i.networks(!0,!0,!1,!1)}).then(function(a){b.availableVolumes=a.volumes,b.availableNetworks=a.networks,b.availableSecrets=a.secrets}).catch(function(a){n.error("Failure",a,"Unable to initialize view")}).finally(function(){$("#loadingViewSpinner").hide()})}b.formValues={Name:"",Image:"",Registry:{},Mode:"replicated",Replicas:1,Command:"",EntryPoint:"",WorkingDir:"",User:"",Env:[],Labels:[],ContainerLabels:[],Volumes:[],Network:"",ExtraNetworks:[],Ports:[],Parallelism:1,PlacementConstraints:[],PlacementPreferences:[],UpdateDelay:0,UpdateOrder:"stop-first",FailureAction:"pause",Secrets:[],AccessControlData:new AccessControlFormData},b.state={formValidationError:""},b.addPortBinding=function(){b.formValues.Ports.push({PublishedPort:"",TargetPort:"",Protocol:"tcp",PublishMode:"ingress"})},b.removePortBinding=function(a){b.formValues.Ports.splice(a,1)},b.addExtraNetwork=function(){b.formValues.ExtraNetworks.push({Name:""})},b.removeExtraNetwork=function(a){b.formValues.ExtraNetworks.splice(a,1)},b.addVolume=function(){b.formValues.Volumes.push({Source:"",Target:"",ReadOnly:!1,Type:"volume"})},b.removeVolume=function(a){b.formValues.Volumes.splice(a,1)},b.addSecret=function(){b.formValues.Secrets.push({})},b.removeSecret=function(a){b.formValues.Secrets.splice(a,1)},b.addEnvironmentVariable=function(){b.formValues.Env.push({name:"",value:""})},b.removeEnvironmentVariable=function(a){b.formValues.Env.splice(a,1)},b.addPlacementConstraint=function(){b.formValues.PlacementConstraints.push({key:"",operator:"==",value:""})},b.removePlacementConstraint=function(a){b.formValues.PlacementConstraints.splice(a,1)},b.addPlacementPreference=function(){b.formValues.PlacementPreferences.push({strategy:"spread",value:""})},b.removePlacementPreference=function(a){b.formValues.PlacementPreferences.splice(a,1)},b.addLabel=function(){b.formValues.Labels.push({key:"",value:""})},b.removeLabel=function(a){b.formValues.Labels.splice(a,1)},b.addContainerLabel=function(){b.formValues.ContainerLabels.push({key:"",value:""})},b.removeContainerLabel=function(a){b.formValues.ContainerLabels.splice(a,1)},b.create=function(){$("#createServiceSpinner").show();var a=b.formValues.AccessControlData;if(!F(a,1===l.getUserDetails().role))return void $("#createServiceSpinner").hide();E(D(),a)},G()}]),angular.module("createVolume",[]).controller("CreateVolumeController",["$q","$scope","$state","VolumeService","PluginService","ResourceControlService","Authentication","Notifications","FormValidator",function(a,b,c,d,e,f,g,h,i){function j(a,c){b.state.formValidationError="";var d="";return!(d=i.validateAccessControl(a,c))||(b.state.formValidationError=d,!1)}function k(){$("#loadingViewSpinner").show();var a=b.applicationState.endpoint.mode.provider,c=b.applicationState.endpoint.apiVersion;"DOCKER_SWARM"!==a&&e.volumePlugins(c<1.25||"VMWARE_VIC"===a).then(function(a){b.availableVolumeDrivers=a}).catch(function(a){h.error("Failure",a,"Unable to retrieve volume drivers")}).finally(function(){$("#loadingViewSpinner").hide()})}b.formValues={Driver:"local",DriverOptions:[],AccessControlData:new AccessControlFormData},b.state={formValidationError:""},b.availableVolumeDrivers=[],b.addDriverOption=function(){b.formValues.DriverOptions.push({name:"",value:""})},b.removeDriverOption=function(a){b.formValues.DriverOptions.splice(a,1)},b.create=function(){$("#createVolumeSpinner").show();var a=b.formValues.Name,e=b.formValues.Driver,i=b.formValues.DriverOptions,k=d.createVolumeConfiguration(a,e,i),l=b.formValues.AccessControlData,m=g.getUserDetails(),n=1===m.role;if(!j(l,n))return void $("#createVolumeSpinner").hide();d.createVolume(k).then(function(a){var b=a.Id,c=m.ID;return f.applyResourceControl("volume",b,c,l,[])}).then(function(a){h.success("Volume successfully created"),c.go("volumes",{},{reload:!0})}).catch(function(a){h.error("Failure",a,"An error occured during volume creation")}).finally(function(){$("#createVolumeSpinner").hide()})},k()}]),angular.module("dashboard",[]).controller("DashboardController",["$scope","$q","Container","ContainerHelper","Image","Network","Volume","SystemService","Notifications",function(a,b,c,d,e,f,g,h,i){
function j(b){for(var c=0,d=0,e=b,f=0;f<e.length;f++){var g=e[f];-1!==g.Status.indexOf("Up")?c+=1:-1!==g.Status.indexOf("Exit")&&(d+=1)}a.containerData.running=c,a.containerData.stopped=d,a.containerData.total=e.length}function k(b){for(var c=b,d=0,e=0;e<c.length;e++){d+=c[e].VirtualSize}a.imageData.total=c.length,a.imageData.size=d}function l(b){var c=b.Volumes;c&&(a.volumeData.total=c.length)}function m(b){var c=b;a.networkData.total=c.length}function n(b){var c=b;a.infoData=c}function o(){$("#loadingViewSpinner").show(),b.all([c.query({all:1}).$promise,e.query({}).$promise,g.query({}).$promise,f.query({}).$promise,h.info()]).then(function(a){j(a[0]),k(a[1]),l(a[2]),m(a[3]),n(a[4]),$("#loadingViewSpinner").hide()},function(a){$("#loadingViewSpinner").hide(),i.error("Failure",a,"Unable to load dashboard data")})}a.containerData={total:0},a.imageData={total:0},a.networkData={total:0},a.volumeData={total:0},o()}]),angular.module("docker",[]).controller("DockerController",["$q","$scope","SystemService","Notifications",function(a,b,c,d){function e(){$("#loadingViewSpinner").show(),a.all({version:c.version(),info:c.info()}).then(function(a){b.version=a.version,b.info=a.info}).catch(function(a){d.error("Failure",a,"Unable to retrieve engine details")}).finally(function(){$("#loadingViewSpinner").hide()})}b.info={},b.version={},e()}]),angular.module("endpoint",[]).controller("EndpointController",["$scope","$state","$stateParams","$filter","EndpointService","Notifications",function(a,b,c,d,e,f){function g(b){$("#loadingViewSpinner").show(),e.endpoint(c.id).then(function(b){$("#loadingViewSpinner").hide(),a.endpoint=b,0===b.URL.indexOf("unix://")?a.endpointType="local":a.endpointType="remote",a.endpoint.URL=d("stripprotocol")(b.URL),a.formValues.TLSCACert=b.TLSCACert,a.formValues.TLSCert=b.TLSCert,a.formValues.TLSKey=b.TLSKey},function(a){$("#loadingViewSpinner").hide(),f.error("Failure",a,"Unable to retrieve endpoint details")})}a.applicationState.application.endpointManagement||b.go("endpoints"),a.state={error:"",uploadInProgress:!1},a.formValues={TLSCACert:null,TLSCert:null,TLSKey:null},a.updateEndpoint=function(){var c=a.endpoint.Id,d={name:a.endpoint.Name,URL:a.endpoint.URL,PublicURL:a.endpoint.PublicURL,TLS:a.endpoint.TLS,TLSCACert:a.formValues.TLSCACert!==a.endpoint.TLSCACert?a.formValues.TLSCACert:null,TLSCert:a.formValues.TLSCert!==a.endpoint.TLSCert?a.formValues.TLSCert:null,TLSKey:a.formValues.TLSKey!==a.endpoint.TLSKey?a.formValues.TLSKey:null,type:a.endpointType};e.updateEndpoint(c,d).then(function(c){f.success("Endpoint updated",a.endpoint.Name),b.go("endpoints")},function(b){a.state.error=b.msg},function(b){b.upload&&(a.state.uploadInProgress=b.upload)})},g(c.id)}]),angular.module("endpointAccess",[]).controller("EndpointAccessController",["$scope","$stateParams","EndpointService","Notifications",function(a,b,c,d){function e(){$("#loadingViewSpinner").show(),c.endpoint(b.id).then(function(b){a.endpoint=b}).catch(function(a){d.error("Failure",a,"Unable to retrieve endpoint details")}).finally(function(){$("#loadingViewSpinner").hide()})}a.updateAccess=function(a,d){return c.updateAccess(b.id,a,d)},e()}]),angular.module("endpoints",[]).controller("EndpointsController",["$scope","$state","EndpointService","EndpointProvider","Notifications","Pagination",function(a,b,c,d,e,f){function g(){$("#loadEndpointsSpinner").show(),c.endpoints().then(function(b){a.endpoints=b}).catch(function(b){e.error("Failure",b,"Unable to retrieve endpoints"),a.endpoints=[]}).finally(function(){$("#loadEndpointsSpinner").hide()})}a.state={error:"",uploadInProgress:!1,selectedItemCount:0,pagination_count:f.getPaginationCount("endpoints")},a.sortType="Name",a.sortReverse=!0,a.formValues={Name:"",URL:"",PublicURL:"",TLS:!1,TLSCACert:null,TLSCert:null,TLSKey:null},a.order=function(b){a.sortReverse=a.sortType===b&&!a.sortReverse,a.sortType=b},a.changePaginationCount=function(){f.setPaginationCount("endpoints",a.state.pagination_count)},a.selectItems=function(b){angular.forEach(a.state.filteredEndpoints,function(c){c.Checked!==b&&(c.Checked=b,a.selectItem(c))})},a.selectItem=function(b){b.Checked?a.state.selectedItemCount++:a.state.selectedItemCount--},a.addEndpoint=function(){a.state.error="";var d=a.formValues.Name,f=a.formValues.URL,g=a.formValues.PublicURL;""===g&&(g=f.split(":")[0]);var h=a.formValues.TLS,i=a.formValues.TLSCACert,j=a.formValues.TLSCert,k=a.formValues.TLSKey;c.createRemoteEndpoint(d,f,g,h,i,j,k,!1).then(function(a){e.success("Endpoint created",d),b.reload()},function(b){a.state.uploadInProgress=!1,a.state.error=b.msg},function(b){b.upload&&(a.state.uploadInProgress=b.upload)})},a.removeAction=function(){$("#loadEndpointsSpinner").show();var b=0,d=function(){0===(b-=1)&&$("#loadEndpointsSpinner").hide()};angular.forEach(a.endpoints,function(f){f.Checked&&(b+=1,c.deleteEndpoint(f.Id).then(function(b){e.success("Endpoint deleted",f.Name);var c=a.endpoints.indexOf(f);a.endpoints.splice(c,1),d()},function(a){e.error("Failure",a,"Unable to remove endpoint"),d()}))})},g()}]),angular.module("events",[]).controller("EventsController",["$scope","Notifications","SystemService","Pagination",function(a,b,c,d){function e(){var d=moment().subtract(24,"hour").unix(),e=moment().unix();$("#loadEventsSpinner").show(),c.events(d,e).then(function(b){a.events=b}).catch(function(a){b.error("Failure",a,"Unable to load events")}).finally(function(){$("#loadEventsSpinner").hide()})}a.state={},a.state.pagination_count=d.getPaginationCount("events"),a.sortType="Time",a.sortReverse=!0,a.order=function(b){a.sortReverse=a.sortType===b&&!a.sortReverse,a.sortType=b},a.changePaginationCount=function(){d.setPaginationCount("events",a.state.pagination_count)},e()}]),angular.module("image",[]).controller("ImageController",["$q","$scope","$stateParams","$state","$timeout","ImageService","RegistryService","Notifications",function(a,b,c,d,e,f,g,h){function i(){$("#loadingViewSpinner").show();var e=b.applicationState.endpoint.mode.provider;a.all({image:f.image(c.id),history:"VMWARE_VIC"!==e?f.history(c.id):[]}).then(function(a){b.image=a.image,b.history=a.history}).catch(function(a){h.error("Failure",a,"Unable to retrieve image details"),d.go("images")}).finally(function(){$("#loadingViewSpinner").hide()})}b.formValues={Image:"",Registry:""},b.sortType="Size",b.sortReverse=!0,b.order=function(a){b.sortReverse=b.sortType===a&&!b.sortReverse,b.sortType=a},b.toggleLayerCommand=function(a){$("#layer-command-expander"+a+" span").toggleClass("glyphicon-plus-sign glyphicon-minus-sign"),$("#layer-command-"+a+"-short").toggle(),$("#layer-command-"+a+"-full").toggle()},b.tagImage=function(){$("#loadingViewSpinner").show();var a=b.formValues.Image,e=b.formValues.Registry;f.tagImage(c.id,a,e.URL).then(function(a){h.success("Image successfully tagged"),d.go("image",{id:c.id},{reload:!0})}).catch(function(a){h.error("Failure",a,"Unable to tag image")}).finally(function(){$("#loadingViewSpinner").hide()})},b.pushTag=function(a){$("#loadingViewSpinner").show(),g.retrieveRegistryFromRepository(a).then(function(b){var c=b;return f.pushImage(a,c)}).then(function(b){h.success("Image successfully pushed",a)}).catch(function(a){h.error("Failure",a,"Unable to push image to repository")}).finally(function(){$("#loadingViewSpinner").hide()})},b.pullTag=function(a){$("#loadingViewSpinner").show(),g.retrieveRegistryFromRepository(a).then(function(b){var c=b;return f.pullImage(a,c,!1)}).then(function(b){h.success("Image successfully pulled",a)}).catch(function(a){h.error("Failure",a,"Unable to pull image")}).finally(function(){$("#loadingViewSpinner").hide()})},b.removeTag=function(a){$("#loadingViewSpinner").show(),f.deleteImage(a,!1).then(function(){1===b.image.RepoTags.length?(h.success("Image successfully deleted",a),d.go("images",{},{reload:!0})):(h.success("Tag successfully deleted",a),d.go("image",{id:c.id},{reload:!0}))}).catch(function(a){h.error("Failure",a,"Unable to remove image")}).finally(function(){$("#loadingViewSpinner").hide()})},b.removeImage=function(a){$("#loadingViewSpinner").show(),f.deleteImage(a,!1).then(function(){h.success("Image successfully deleted",a),d.go("images",{},{reload:!0})}).catch(function(a){h.error("Failure",a,"Unable to remove image")}).finally(function(){$("#loadingViewSpinner").hide()})},i()}]),angular.module("images",[]).controller("ImagesController",["$scope","$state","ImageService","Notifications","Pagination","ModalService",function(a,b,c,d,e,f){function g(){$("#loadImagesSpinner").show();a.applicationState.endpoint.mode.provider,a.applicationState.endpoint.apiVersion;c.images(!0).then(function(b){a.images=b}).catch(function(b){d.error("Failure",b,"Unable to retrieve images"),a.images=[]}).finally(function(){$("#loadImagesSpinner").hide()})}a.state={},a.state.pagination_count=e.getPaginationCount("images"),a.sortType="RepoTags",a.sortReverse=!0,a.state.selectedItemCount=0,a.formValues={Image:"",Registry:""},a.order=function(b){a.sortReverse=a.sortType===b&&!a.sortReverse,a.sortType=b},a.changePaginationCount=function(){e.setPaginationCount("images",a.state.pagination_count)},a.selectItems=function(b){angular.forEach(a.state.filteredImages,function(c){c.Checked!==b&&(c.Checked=b,a.selectItem(c))})},a.selectItem=function(b){b.Checked?a.state.selectedItemCount++:a.state.selectedItemCount--},a.pullImage=function(){$("#pullImageSpinner").show();var e=a.formValues.Image,f=a.formValues.Registry;c.pullImage(e,f,!1).then(function(a){d.success("Image successfully pulled",e),b.reload()}).catch(function(a){d.error("Failure",a,"Unable to pull image")}).finally(function(){$("#pullImageSpinner").hide()})},a.confirmRemovalAction=function(b){f.confirmImageForceRemoval(function(c){c&&a.removeAction(b)})},a.removeAction=function(b){b=!!b,$("#loadImagesSpinner").show();var e=0,f=function(){0===(e-=1)&&$("#loadImagesSpinner").hide()};angular.forEach(a.images,function(g){g.Checked&&(e+=1,c.deleteImage(g.Id,b).then(function(b){d.success("Image deleted",g.Id);var c=a.images.indexOf(g);a.images.splice(c,1)}).catch(function(a){d.error("Failure",a,"Unable to remove image")}).finally(function(){f()}))})},g()}]),angular.module("initAdmin",[]).controller("InitAdminController",["$scope","$state","$sanitize","Notifications","Authentication","StateManager","UserService",function(a,b,c,d,e,f,g){a.logo=f.getState().application.logo,a.formValues={Username:"admin",Password:"",ConfirmPassword:""},a.createAdminUser=function(){$("#createResourceSpinner").show();var f=c(a.formValues.Username),h=c(a.formValues.Password);g.initAdministrator(f,h).then(function(){return e.login(f,h)}).then(function(){b.go("init.endpoint")}).catch(function(a){d.error("Failure",a,"Unable to create administrator user")}).finally(function(){$("#createResourceSpinner").hide()})}}]),angular.module("initEndpoint",[]).controller("InitEndpointController",["$scope","$state","EndpointService","StateManager","EndpointProvider","Notifications",function(a,b,c,d,e,f){a.logo=d.getState().application.logo,a.state={uploadInProgress:!1},a.formValues={EndpointType:"remote",Name:"",URL:"",TLS:!1,TLSCACert:null,TLSCert:null,TLSKey:null},_.isEmpty(a.applicationState.endpoint)||b.go("dashboard"),a.createLocalEndpoint=function(){$("#createResourceSpinner").show(),c.createLocalEndpoint("local","unix:///var/run/docker.sock",!1,!0).then(function(a){var b=a.Id;return e.setEndpointID(b),d.updateEndpointState(!1)}).then(function(a){b.go("dashboard")}).catch(function(a){f.error("Failure",a,"Unable to connect to the Docker endpoint")}).finally(function(){$("#createResourceSpinner").hide()})},a.createRemoteEndpoint=function(){$("#createResourceSpinner").show();var g=a.formValues.Name,h=a.formValues.URL,i=h.split(":")[0],j=a.formValues.TLS,k=a.formValues.TLSCACert,l=a.formValues.TLSCert,m=a.formValues.TLSKey;c.createRemoteEndpoint(g,h,i,j,k,l,m).then(function(a){var b=a.Id;return e.setEndpointID(b),d.updateEndpointState(!1)}).then(function(a){b.go("dashboard")}).catch(function(a){f.error("Failure",a,"Unable to connect to the Docker endpoint")}).finally(function(){$("#createResourceSpinner").hide()})}}]),angular.module("languageSwitch").controller("LanguageSwitchingCtrl",["$scope","$translate",function(a,b){a.switching=function(a){b.use(a),window.localStorage.lang=a,window.location.reload()},a.cur_lang=b.use()}]),angular.module("main",[]).controller("MainController",["$scope","$cookieStore","StateManager",function(a,b,c){a.getWidth=function(){return window.innerWidth},a.applicationState=c.getState(),a.$watch(a.getWidth,function(c,d){c>=992?angular.isDefined(b.get("toggle"))?a.toggle=!!b.get("toggle"):a.toggle=!0:a.toggle=!1}),a.toggleSidebar=function(){a.toggle=!a.toggle,b.put("toggle",a.toggle)},window.onresize=function(){a.$apply()}}]),angular.module("network",[]).controller("NetworkController",["$scope","$state","$stateParams","$filter","Network","Container","ContainerHelper","Notifications",function(a,b,c,d,e,f,g,h){function i(b,c){var e=[];c.forEach(function(a){var c=b.Containers[a.Id];c.Id=a.Id,c.Name||(c.Name=d("trimcontainername")(a.Names[0])),e.push(c)}),a.containersInNetwork=e}function j(b){var d=a.applicationState.endpoint.apiVersion;b.Containers&&(d<1.24?f.query({},function(a){var c=a.filter(function(a){if(a.HostConfig.NetworkMode===b.Name)return a});i(b,c),$("#loadingViewSpinner").hide()},function(a){$("#loadingViewSpinner").hide(),h.error("Failure",a,"Unable to retrieve containers in network")}):f.query({filters:{network:[c.id]}},function(a){i(b,a),$("#loadingViewSpinner").hide()},function(a){$("#loadingViewSpinner").hide(),h.error("Failure",a,"Unable to retrieve containers in network")}))}function k(){$("#loadingViewSpinner").show(),e.get({id:c.id}).$promise.then(function(b){a.network=b,"VMWARE_VIC"!==a.applicationState.endpoint.mode.provider&&j(b)}).catch(function(a){$("#loadingViewSpinner").hide(),h.error("Failure",a,"Unable to retrieve network info")}).finally(function(){$("#loadingViewSpinner").hide()})}a.removeNetwork=function(a){$("#loadingViewSpinner").show(),e.remove({id:c.id},function(a){a.message?($("#loadingViewSpinner").hide(),h.error("Error",a,"Unable to remove network")):($("#loadingViewSpinner").hide(),h.success("Network removed",c.id),b.go("networks",{}))},function(a){$("#loadingViewSpinner").hide(),h.error("Failure",a,"Unable to remove network")})},a.containerLeaveNetwork=function(a,d){$("#loadingViewSpinner").show(),e.disconnect({id:c.id},{Container:d,Force:!1},function(d){d.message?($("#loadingViewSpinner").hide(),h.error("Error",d,"Unable to disconnect container from network")):($("#loadingViewSpinner").hide(),h.success("Container left network",c.id),b.go("network",{id:a.Id},{reload:!0}))},function(a){$("#loadingViewSpinner").hide(),h.error("Failure",a,"Unable to disconnect container from network")})},k()}]),angular.module("networks",[]).controller("NetworksController",["$scope","$state","Network","Notifications","Pagination",function(a,b,c,d,e){function f(){var b=angular.copy(a.config);return"DOCKER_SWARM"!==a.applicationState.endpoint.mode.provider&&"DOCKER_SWARM_MODE"!==a.applicationState.endpoint.mode.provider||(b.Driver="overlay",b.IPAM={Driver:"default"}),b}function g(){$("#loadNetworksSpinner").show(),c.query({},function(b){a.networks=b,$("#loadNetworksSpinner").hide()},function(b){$("#loadNetworksSpinner").hide(),d.error("Failure",b,"Unable to retrieve networks"),a.networks=[]})}a.state={},a.state.pagination_count=e.getPaginationCount("networks"),a.state.selectedItemCount=0,a.state.advancedSettings=!1,a.sortType="Name",a.sortReverse=!1,a.config={Name:""},a.changePaginationCount=function(){e.setPaginationCount("networks",a.state.pagination_count)},a.createNetwork=function(){$("#createNetworkSpinner").show();var a=f();c.create(a,function(a){a.message?($("#createNetworkSpinner").hide(),d.error("Unable to create network",{},a.message)):(d.success("Network created",a.Id),$("#createNetworkSpinner").hide(),b.reload())},function(a){$("#createNetworkSpinner").hide(),d.error("Failure",a,"Unable to create network")})},a.order=function(b){a.sortReverse=a.sortType===b&&!a.sortReverse,a.sortType=b},a.selectItems=function(b){angular.forEach(a.state.filteredNetworks,function(c){c.Checked!==b&&(c.Checked=b,a.selectItem(c))})},a.selectItem=function(b){b.Checked?a.state.selectedItemCount++:a.state.selectedItemCount--},a.removeAction=function(){$("#loadNetworksSpinner").show();var b=0,e=function(){0===(b-=1)&&$("#loadNetworksSpinner").hide()};angular.forEach(a.networks,function(f){f.Checked&&(b+=1,c.remove({id:f.Id},function(b){if(b.message)d.error("Error",b,"Unable to remove network");else{d.success("Network removed",f.Id);var c=a.networks.indexOf(f);a.networks.splice(c,1)}e()},function(a){d.error("Failure",a,"Unable to remove network"),e()}))})},g()}]),angular.module("node",[]).controller("NodeController",["$scope","$state","$stateParams","LabelHelper","Node","NodeHelper","Task","Pagination","Notifications",function(a,b,c,d,f,g,h,i,j){function k(){a.loading=!0,"DOCKER_SWARM_MODE"===a.applicationState.endpoint.mode.provider?f.get({id:c.id},function(b){if(b.message)j.error("Failure",e,"Unable to inspect the node");else{var c=new NodeViewModel(b);m=angular.copy(c),a.node=c,l(b)}a.loading=!1}):a.loading=!1}function l(b){b&&h.query({filters:{node:[b.ID]}},function(b){a.tasks=b.map(function(a){return new TaskViewModel(a)})},function(a){j.error("Failure",a,"Unable to retrieve tasks associated to the node")})}a.state={},a.state.pagination_count=i.getPaginationCount("node_tasks"),a.loading=!0,a.tasks=[],a.sortType="Status",a.sortReverse=!1;var m={},n=[];a.order=function(b){a.sortReverse=a.sortType===b&&!a.sortReverse,a.sortType=b},a.changePaginationCount=function(){i.setPaginationCount("node_tasks",a.state.pagination_count)},a.updateNodeAttribute=function(a,b){n.push(b)},a.addLabel=function(b){b.Labels.push({key:"",value:"",originalValue:"",originalKey:""}),a.updateNodeAttribute(b,"Labels")},a.removeLabel=function(b,c){null!==b.Labels.splice(c,1)&&a.updateNodeAttribute(b,"Labels")},a.updateLabel=function(b,c){c.value===c.originalValue&&c.key===c.originalKey||a.updateNodeAttribute(b,"Labels")},a.hasChanges=function(a,b){b||(b=Object.keys(m));var c=!1;return b.forEach(function(b){c=c||n.indexOf(b)>=0&&a[b]!==m[b]}),c},a.cancelChanges=function(a){n.forEach(function(b){a[b]=m[b]}),n=[]},a.updateNode=function(a){var c=g.nodeToConfig(a.Model);c.Name=a.Name,c.Availability=a.Availability,c.Role=a.Role,c.Labels=d.fromKeyValueToLabelHash(a.Labels),f.update({id:a.Id,version:a.Version},c,function(c){$("#loadServicesSpinner").hide(),j.success("Node successfully updated","Node updated"),b.go("node",{id:a.Id},{reload:!0})},function(a){$("#loadServicesSpinner").hide(),j.error("Failure",a,"Failed to update node")})},k()}]),angular.module("registries",[]).controller("RegistriesController",["$q","$scope","$state","RegistryService","DockerHubService","ModalService","Notifications","Pagination",function(a,b,c,d,e,f,g,h){function i(){$("#loadingViewSpinner").show();var a=0,c=function(){0===(a-=1)&&$("#loadingViewSpinner").hide()},e=b.registries;angular.forEach(e,function(b){b.Checked&&(a+=1,d.deleteRegistry(b.Id).then(function(a){var c=e.indexOf(b);e.splice(c,1),g.success("Registry deleted",b.Name)}).catch(function(a){g.error("Failure",a,"Unable to remove registry")}).finally(function(){c()}))})}function j(){$("#loadingViewSpinner").show(),a.all({registries:d.registries(),dockerhub:e.dockerhub()}).then(function(a){b.registries=a.registries,b.dockerhub=a.dockerhub}).catch(function(a){b.registries=[],g.error("Failure",a,"Unable to retrieve registries")}).finally(function(){$("#loadingViewSpinner").hide()})}b.state={selectedItemCount:0,pagination_count:h.getPaginationCount("registries")},b.sortType="Name",b.sortReverse=!0,b.updateDockerHub=function(){$("#updateDockerhubSpinner").show();var a=b.dockerhub;e.update(a).then(function(a){g.success("DockerHub registry updated")}).catch(function(a){g.error("Failure",a,"Unable to update DockerHub details")}).finally(function(){$("#updateDockerhubSpinner").hide()})},b.order=function(a){b.sortReverse=b.sortType===a&&!b.sortReverse,b.sortType=a},b.changePaginationCount=function(){h.setPaginationCount("endpoints",b.state.pagination_count)},b.selectItems=function(a){angular.forEach(b.state.filteredRegistries,function(c){c.Checked!==a&&(c.Checked=a,b.selectItem(c))})},b.selectItem=function(a){a.Checked?b.state.selectedItemCount++:b.state.selectedItemCount--},b.removeAction=function(){f.confirmDeletion("Do you want to remove the selected registries?",function(a){a&&i()})},j()}]),angular.module("registry",[]).controller("RegistryController",["$scope","$state","$stateParams","$filter","RegistryService","Notifications",function(a,b,c,d,e,f){function g(){$("#loadingViewSpinner").show();var b=c.id;e.registry(b).then(function(b){a.registry=b}).catch(function(a){f.error("Failure",a,"Unable to retrieve registry details")}).finally(function(){$("#loadingViewSpinner").hide()})}a.updateRegistry=function(){$("#updateRegistrySpinner").show();var c=a.registry;e.updateRegistry(c).then(function(a){f.success("Registry successfully updated"),b.go("registries")}).catch(function(a){f.error("Failure",a,"Unable to update registry")}).finally(function(){$("#updateRegistrySpinner").hide()})},g()}]),angular.module("registryAccess",[]).controller("RegistryAccessController",["$scope","$stateParams","RegistryService","Notifications",function(a,b,c,d){function e(){$("#loadingViewSpinner").show(),c.registry(b.id).then(function(b){a.registry=b}).catch(function(a){d.error("Failure",a,"Unable to retrieve registry details")}).finally(function(){$("#loadingViewSpinner").hide()})}a.updateAccess=function(a,d){return c.updateAccess(b.id,a,d)},e()}]),angular.module("secret",[]).controller("SecretController",["$scope","$stateParams","$state","SecretService","Notifications",function(a,b,c,d,e){function f(){$("#loadingViewSpinner").show(),d.secret(b.id).then(function(b){a.secret=b}).catch(function(a){e.error("Failure",a,"Unable to retrieve secret details")}).finally(function(){$("#loadingViewSpinner").hide()})}a.removeSecret=function(a){$("#loadingViewSpinner").show(),d.remove(a).then(function(a){e.success("Secret successfully removed"),c.go("secrets",{})}).catch(function(a){e.error("Failure",a,"Unable to remove secret")}).finally(function(){$("#loadingViewSpinner").hide()})},f()}]),angular.module("secrets",[]).controller("SecretsController",["$scope","$stateParams","$state","SecretService","Notifications","Pagination",function(a,b,c,d,e,f){function g(){$("#loadingViewSpinner").show(),d.secrets().then(function(b){a.secrets=b}).catch(function(b){a.secrets=[],e.error("Failure",b,"Unable to retrieve secrets")}).finally(function(){$("#loadingViewSpinner").hide()})}a.state={},a.state.selectedItemCount=0,a.state.pagination_count=f.getPaginationCount("secrets"),a.sortType="Name",a.sortReverse=!1,a.order=function(b){a.sortReverse=a.sortType===b&&!a.sortReverse,a.sortType=b},a.selectItems=function(b){angular.forEach(a.state.filteredSecrets,function(c){c.Checked!==b&&(c.Checked=b,a.selectItem(c))})},a.selectItem=function(b){b.Checked?a.state.selectedItemCount++:a.state.selectedItemCount--},a.removeAction=function(){$("#loadingViewSpinner").show();var b=0,c=function(){0===(b-=1)&&$("#loadingViewSpinner").hide()};angular.forEach(a.secrets,function(f){f.Checked&&(b+=1,d.remove(f.Id).then(function(){e.success("Secret deleted",f.Id);var b=a.secrets.indexOf(f);a.secrets.splice(b,1)}).catch(function(a){e.error("Failure",a,"Unable to remove secret")}).finally(function(){c()}))})},g()}]),angular.module("service",[]).controller("ServiceController",["$q","$scope","$stateParams","$state","$location","$timeout","$anchorScroll","ServiceService","SecretService","SecretHelper","Service","ServiceHelper","LabelHelper","TaskService","NodeService","Notifications","Pagination","ModalService",function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){function s(){$("#loadingViewSpinner").show(),h.remove(b.service).then(function(a){p.success("Service successfully deleted"),d.go("services",{})}).catch(function(a){p.error("Failure",a,"Unable to remove service")}).finally(function(){$("#loadingViewSpinner").hide()})}function t(a){a.ServiceSecrets=a.Secrets?a.Secrets.map(j.flattenSecret):[],a.EnvironmentVariables=l.translateEnvironmentVariables(a.Env),a.ServiceLabels=m.fromLabelHashToKeyValue(a.Labels),a.ServiceContainerLabels=m.fromLabelHashToKeyValue(a.ContainerLabels),a.ServiceMounts=angular.copy(a.Mounts),a.ServiceConstraints=l.translateConstraintsToKeyValue(a.Constraints),a.ServicePreferences=l.translatePreferencesToKeyValue(a.Preferences)}function u(){$("#loadingViewSpinner").show();var d=b.applicationState.endpoint.apiVersion;h.service(c.id).then(function(c){var e=c;return b.isUpdating=b.lastVersion>=e.Version,b.isUpdating||(b.lastVersion=e.Version),t(e),b.service=e,w=angular.copy(e),a.all({tasks:n.serviceTasks(e.Name),nodes:o.nodes(),secrets:d>=1.25?i.secrets():[]})}).then(function(a){b.tasks=a.tasks,b.nodes=a.nodes,b.secrets=a.secrets,f(function(){g()})}).catch(function(a){b.secrets=[],p.error("Failure",a,"Unable to retrieve service details")}).finally(function(){$("#loadingViewSpinner").hide()})}function v(a,b){x.push(b),a.hasChanges=!0}b.state={},b.state.pagination_count=q.getPaginationCount("service_tasks"),b.tasks=[],b.sortType="Updated",b.sortReverse=!0,b.lastVersion=0;var w={},x=[];b.order=function(a){b.sortReverse=b.sortType===a&&!b.sortReverse,b.sortType=a},b.changePaginationCount=function(){q.setPaginationCount("service_tasks",b.state.pagination_count)},b.renameService=function(a){updateServiceAttribute(a,"Name",a.newServiceName||a.name),a.EditName=!1},b.changeServiceImage=function(a){updateServiceAttribute(a,"Image",a.newServiceImage||a.image),a.EditImage=!1},b.scaleService=function(a){var b=null===a.newServiceReplicas||isNaN(a.newServiceReplicas)?a.Replicas:a.newServiceReplicas;updateServiceAttribute(a,"Replicas",b),a.EditReplicas=!1},b.goToItem=function(a){e.hash()!==a?e.hash(a):g()},b.addEnvironmentVariable=function(a){a.EnvironmentVariables.push({key:"",value:"",originalValue:""}),v(a,"EnvironmentVariables",a.EnvironmentVariables)},b.removeEnvironmentVariable=function(a,b){null!==a.EnvironmentVariables.splice(b,1)&&v(a,"EnvironmentVariables",a.EnvironmentVariables)},b.updateEnvironmentVariable=function(a,b){b.value===b.originalValue&&b.key===b.originalKey||v(a,"EnvironmentVariables",a.EnvironmentVariables)},b.addSecret=function(a,b){b&&0===a.ServiceSecrets.filter(function(a){return a.Id===b.Id}).length&&(a.ServiceSecrets.push({Id:b.Id,Name:b.Name,FileName:b.Name,Uid:"0",Gid:"0",Mode:444}),v(a,"ServiceSecrets",a.ServiceSecrets))},b.removeSecret=function(a,b){null!==a.ServiceSecrets.splice(b,1)&&v(a,"ServiceSecrets",a.ServiceSecrets)},b.addLabel=function(a){a.ServiceLabels.push({key:"",value:"",originalValue:""}),v(a,"ServiceLabels",a.ServiceLabels)},b.removeLabel=function(a,b){null!==a.ServiceLabels.splice(b,1)&&v(a,"ServiceLabels",a.ServiceLabels)},b.updateLabel=function(a,b){b.value===b.originalValue&&b.key===b.originalKey||v(a,"ServiceLabels",a.ServiceLabels)},b.addContainerLabel=function(a){a.ServiceContainerLabels.push({key:"",value:"",originalValue:""}),v(a,"ServiceContainerLabels",a.ServiceContainerLabels)},b.removeContainerLabel=function(a,b){null!==a.ServiceContainerLabels.splice(b,1)&&v(a,"ServiceContainerLabels",a.ServiceContainerLabels)},b.updateContainerLabel=function(a,b){b.value===b.originalValue&&b.key===b.originalKey||v(a,"ServiceContainerLabels",a.ServiceContainerLabels)},b.addMount=function(a){a.ServiceMounts.push({Type:"volume",Source:"",Target:"",ReadOnly:!1}),v(a,"ServiceMounts",a.ServiceMounts)},b.removeMount=function(a,b){null!==a.ServiceMounts.splice(b,1)&&v(a,"ServiceMounts",a.ServiceMounts)},b.updateMount=function(a,b){v(a,"ServiceMounts",a.ServiceMounts)},b.addPlacementConstraint=function(a){a.ServiceConstraints.push({key:"",operator:"==",value:""}),v(a,"ServiceConstraints",a.ServiceConstraints)},b.removePlacementConstraint=function(a,b){null!==a.ServiceConstraints.splice(b,1)&&v(a,"ServiceConstraints",a.ServiceConstraints)},b.updatePlacementConstraint=function(a,b){v(a,"ServiceConstraints",a.ServiceConstraints)},b.addPlacementPreference=function(a){a.ServicePreferences.push({strategy:"spread",value:""}),v(a,"ServicePreferences",a.ServicePreferences)},b.removePlacementPreference=function(a,b){null!==a.ServicePreferences.splice(b,1)&&v(a,"ServicePreferences",a.ServicePreferences)},b.updatePlacementPreference=function(a,b){v(a,"ServicePreferences",a.ServicePreferences)},b.addPublishedPort=function(a){a.Ports||(a.Ports=[]),a.Ports.push({PublishedPort:"",TargetPort:"",Protocol:"tcp",PublishMode:"ingress"})},b.updatePublishedPort=function(a,b){v(a,"Ports",a.Ports)},b.removePortPublishedBinding=function(a,b){null!==a.Ports.splice(b,1)&&v(a,"Ports",a.Ports)},b.cancelChanges=function(a,b){b?b.forEach(function(a){var b=x.indexOf(a);b>=0&&x.splice(b,1)}):(b=Object.keys(a),x=[]),b.forEach(function(b){a[b]=w[b]}),a.hasChanges=!1},b.hasChanges=function(a,b){var c=!1;return b.forEach(function(a){c=c||x.indexOf(a)>=0}),c},b.updateService=function(a){$("#loadingViewSpinner").show();var c=l.serviceToConfig(a.Model);c.Name=a.Name,c.Labels=m.fromKeyValueToLabelHash(a.ServiceLabels),c.TaskTemplate.ContainerSpec.Env=l.translateEnvironmentVariablesToEnv(a.EnvironmentVariables),c.TaskTemplate.ContainerSpec.Labels=m.fromKeyValueToLabelHash(a.ServiceContainerLabels),c.TaskTemplate.ContainerSpec.Image=a.Image,c.TaskTemplate.ContainerSpec.Secrets=a.ServiceSecrets?a.ServiceSecrets.map(j.secretConfig):[],"replicated"===a.Mode&&(c.Mode.Replicated.Replicas=a.Replicas),c.TaskTemplate.ContainerSpec.Mounts=a.ServiceMounts,void 0===c.TaskTemplate.Placement&&(c.TaskTemplate.Placement={}),c.TaskTemplate.Placement.Constraints=l.translateKeyValueToPlacementConstraints(a.ServiceConstraints),c.TaskTemplate.Placement.Preferences=l.translateKeyValueToPlacementPreferences(a.ServicePreferences),c.TaskTemplate.Resources={Limits:{NanoCPUs:a.LimitNanoCPUs,MemoryBytes:a.LimitMemoryBytes},Reservations:{NanoCPUs:a.ReservationNanoCPUs,MemoryBytes:a.ReservationMemoryBytes}},c.UpdateConfig={Parallelism:a.UpdateParallelism,Delay:a.UpdateDelay,FailureAction:a.UpdateFailureAction,Order:a.UpdateOrder},c.TaskTemplate.RestartPolicy={Condition:a.RestartCondition,Delay:a.RestartDelay,MaxAttempts:a.RestartMaxAttempts,Window:a.RestartWindow},a.Ports&&a.Ports.forEach(function(a){null!==a.PublishedPort&&""!==a.PublishedPort||delete a.PublishedPort}),c.EndpointSpec={Mode:c.EndpointSpec.Mode||"vip",Ports:a.Ports},k.update({id:a.Id,version:a.Version},c,function(a){$("#loadingViewSpinner").hide(),p.success("Service successfully updated","Service updated"),b.cancelChanges({}),u()},function(a){$("#loadingViewSpinner").hide(),p.error("Failure",a,"Unable to update service")})},b.removeService=function(){r.confirmDeletion("Do you want to remove this service? All the containers associated to this service will be removed too.",function(a){a&&s()})},b.updateServiceAttribute=function(a,b){a[b]===w[b]&&b in w||(a.hasChanges=!0),x.push(b)},u()}]),angular.module("serviceLogs",[]).controller("ServiceLogsController",["$scope","$stateParams","$anchorScroll","ServiceLogs","Service",function(a,b,c,d,e){function f(){$("#loadingViewSpinner").show(),h(),g(),$("#loadingViewSpinner").hide()}function g(){d.get(b.id,{stdout:0,stderr:1,timestamps:a.state.displayTimestampsErr,tail:a.tailLines},function(b,c,d,e){b=b.replace(/[\r]/g,"\n"),b=b.substring(8),b=b.replace(/\n(.{8})/g,"\n"),a.stderr=b})}function h(){d.get(b.id,{stdout:1,stderr:0,timestamps:a.state.displayTimestampsOut,tail:a.tailLines},function(b,c,d,e){b=b.replace(/[\r]/g,"\n"),b=b.substring(8),b=b.replace(/\n(.{8})/g,"\n"),a.stdout=b})}function i(){$("#loadingViewSpinner").show(),e.get({id:b.id},function(b){a.service=b,$("#loadingViewSpinner").hide()},function(a){Notifications.error("Failure",a,"Unable to retrieve service info"),
$("#loadingViewSpinner").hide()})}function j(){i(),f();var b=window.setInterval(f,5e3);a.$on("$destroy",function(){clearInterval(b)}),a.toggleTimestampsOut=function(){h()},a.toggleTimestampsErr=function(){g()}}a.state={},a.state.displayTimestampsOut=!1,a.state.displayTimestampsErr=!1,a.stdout="",a.stderr="",a.tailLines=2e3,j()}]),angular.module("services",[]).controller("ServicesController",["$q","$scope","$stateParams","$state","Service","ServiceService","ServiceHelper","Notifications","Pagination","Task","Node","NodeHelper","ModalService","ResourceControlService",function(a,b,c,d,e,f,g,h,i,j,k,l,m,n){function o(){$("#loadServicesSpinner").show();var a=0,c=function(){0===(a-=1)&&$("#loadServicesSpinner").hide()};angular.forEach(b.services,function(d){d.Checked&&(a+=1,f.remove(d).then(function(a){h.success("Service successfully deleted");var c=b.services.indexOf(d);b.services.splice(c,1)}).catch(function(a){h.error("Failure",a,"Unable to remove service")}).finally(function(){c()}))})}function p(){$("#loadServicesSpinner").show(),a.all({services:e.query({}).$promise,tasks:j.query({filters:{"desired-state":["running"]}}).$promise,nodes:k.query({}).$promise}).then(function(a){b.swarmManagerIP=l.getManagerIP(a.nodes),b.services=a.services.map(function(b){var c=a.tasks.filter(function(a){return a.ServiceID===b.ID&&"running"===a.Status.State}),d=a.nodes.filter(function(a){return"active"===a.Spec.Availability&&"ready"===a.Status.State});return new ServiceViewModel(b,c,d)})}).catch(function(a){b.services=[],h.error("Failure",a,"Unable to retrieve services")}).finally(function(){$("#loadServicesSpinner").hide()})}b.state={},b.state.selectedItemCount=0,b.state.pagination_count=i.getPaginationCount("services"),b.sortType="Name",b.sortReverse=!1,b.changePaginationCount=function(){i.setPaginationCount("services",b.state.pagination_count)},b.order=function(a){b.sortReverse=b.sortType===a&&!b.sortReverse,b.sortType=a},b.selectItem=function(a){a.Checked?b.state.selectedItemCount++:b.state.selectedItemCount--},b.scaleService=function(a){$("#loadServicesSpinner").show();var b=g.serviceToConfig(a.Model);b.Mode.Replicated.Replicas=a.Replicas,e.update({id:a.Id,version:a.Version},b,function(b){$("#loadServicesSpinner").hide(),h.success("Service successfully scaled","New replica count: "+a.Replicas),d.reload()},function(b){$("#loadServicesSpinner").hide(),a.Scale=!1,a.Replicas=a.ReplicaCount,h.error("Failure",b,"Unable to scale service")})},b.removeAction=function(){m.confirmDeletion("Do you want to remove the selected service(s)? All the containers associated to the selected service(s) will be removed too.",function(a){a&&o()})},p()}]),angular.module("settings",[]).controller("SettingsController",["$scope","$state","Notifications","SettingsService","StateManager","DEFAULT_TEMPLATES_URL",function(a,b,c,d,e,f){function g(){a.formValues.labelName="",a.formValues.labelValue=""}function h(a,b){$("#loadingViewSpinner").show(),d.update(a).then(function(d){c.success("Settings updated"),e.updateLogo(a.LogoURL),e.updateExternalContributions(a.DisplayExternalContributors),b&&g()}).catch(function(a){c.error("Failure",a,"Unable to update settings")}).finally(function(){$("#loadingViewSpinner").hide()})}function i(){$("#loadingViewSpinner").show(),d.settings().then(function(b){var c=b;a.settings=c,""!==c.LogoURL&&(a.formValues.customLogo=!0),c.TemplatesURL!==f&&(a.formValues.customTemplates=!0),a.formValues.externalContributions=!c.DisplayExternalContributors}).catch(function(a){c.error("Failure",a,"Unable to retrieve application settings")}).finally(function(){$("#loadingViewSpinner").hide()})}a.formValues={customLogo:!1,customTemplates:!1,externalContributions:!1,labelName:"",labelValue:""},a.removeFilteredContainerLabel=function(b){var c=a.settings;c.BlackListedLabels.splice(b,1),h(c,!1)},a.addFilteredContainerLabel=function(){var b=a.settings,c={name:a.formValues.labelName,value:a.formValues.labelValue};b.BlackListedLabels.push(c),h(b,!0)},a.saveApplicationSettings=function(){var b=a.settings;a.formValues.customLogo||(b.LogoURL=""),a.formValues.customTemplates||(b.TemplatesURL=f),b.DisplayExternalContributors=!a.formValues.externalContributions,h(b,!1)},i()}]),angular.module("settingsAuthentication",[]).controller("SettingsAuthenticationController",["$q","$scope","Notifications","SettingsService","FileUploadService",function(a,b,c,d,e){function f(){$("#loadingViewSpinner").show(),d.settings().then(function(a){var c=a;b.settings=c,b.LDAPSettings=c.LDAPSettings,b.formValues.TLSCACert=c.LDAPSettings.TLSConfig.TLSCACert}).catch(function(a){c.error("Failure",a,"Unable to retrieve application settings")}).finally(function(){$("#loadingViewSpinner").hide()})}b.state={successfulConnectivityCheck:!1,failedConnectivityCheck:!1,uploadInProgress:!1},b.formValues={TLSCACert:""},b.addSearchConfiguration=function(){b.LDAPSettings.SearchSettings.push({BaseDN:"",UserNameAttribute:"",Filter:""})},b.removeSearchConfiguration=function(a){b.LDAPSettings.SearchSettings.splice(a,1)},b.LDAPConnectivityCheck=function(){$("#connectivityCheckSpinner").show();var f=b.settings,g=b.formValues.TLSCACert!==f.LDAPSettings.TLSConfig.TLSCACert?b.formValues.TLSCACert:null,h=(b.LDAPSettings.TLSConfig.TLS||b.LDAPSettings.StartTLS)&&!b.LDAPSettings.TLSConfig.TLSSkipVerify;b.state.uploadInProgress=h,a.when(!h||e.uploadLDAPTLSFiles(g,null,null)).then(function(a){return d.checkLDAPConnectivity(f)}).then(function(a){b.state.failedConnectivityCheck=!1,b.state.successfulConnectivityCheck=!0,c.success("Connection to LDAP successful")}).catch(function(a){b.state.failedConnectivityCheck=!0,b.state.successfulConnectivityCheck=!1,c.error("Failure",a,"Connection to LDAP failed")}).finally(function(){b.state.uploadInProgress=!1,$("#connectivityCheckSpinner").hide()})},b.saveSettings=function(){$("#updateSettingsSpinner").show();var f=b.settings,g=b.formValues.TLSCACert!==f.LDAPSettings.TLSConfig.TLSCACert?b.formValues.TLSCACert:null,h=(b.LDAPSettings.TLSConfig.TLS||b.LDAPSettings.StartTLS)&&!b.LDAPSettings.TLSConfig.TLSSkipVerify;b.state.uploadInProgress=h,a.when(!h||e.uploadLDAPTLSFiles(g,null,null)).then(function(a){return d.update(f)}).then(function(a){c.success("Authentication settings updated")}).catch(function(a){c.error("Failure",a,"Unable to update authentication settings")}).finally(function(){b.state.uploadInProgress=!1,$("#updateSettingsSpinner").hide()})},f()}]),angular.module("sidebar",[]).controller("SidebarController",["$q","$scope","$state","Settings","EndpointService","StateManager","EndpointProvider","Notifications","Authentication","UserService",function(a,b,c,d,e,f,g,h,i,j){function k(a){var c=g.endpointID();angular.forEach(a,function(a){a.Id===c&&(b.activeEndpoint=a,g.setEndpointPublicURL(a.PublicURL))})}function l(a){var c=!1;angular.forEach(a,function(a){1===a.Role&&(c=!0)}),b.isTeamLeader=c}function m(){e.endpoints().then(function(c){var d=c;if(b.endpoints=_.sortBy(d,["Name"]),k(d),f.getState().application.authentication){var e=i.getUserDetails(),g=1===e.role;return b.isAdmin=g,a.when(g?[]:j.userMemberships(e.ID))}}).then(function(a){l(a)}).catch(function(a){h.error("Failure",a,"Unable to retrieve endpoints")})}b.uiVersion=f.getState().application.version,b.displayExternalContributors=f.getState().application.displayExternalContributors,b.logo=f.getState().application.logo,b.endpoints=[],b.switchEndpoint=function(a){var b=g.endpointID(),d=g.endpointPublicURL();g.setEndpointID(a.Id),g.setEndpointPublicURL(a.PublicURL),f.updateEndpointState(!0).then(function(){c.go("dashboard")}).catch(function(a){h.error("Failure",a,"Unable to connect to the Docker endpoint"),g.setEndpointID(b),g.setEndpointPublicURL(d),f.updateEndpointState(!0).then(function(){})})},m()}]),angular.module("stats",[]).controller("StatsController",["Pagination","$scope","Notifications","$timeout","Container","ContainerTop","$stateParams","humansizeFilter","$sce","$document",function(a,b,c,d,e,f,g,h,i,j){b.ps_args="",b.state={},b.state.pagination_count=a.getPaginationCount("stats_processes"),b.sortType="CMD",b.sortReverse=!1,b.order=function(a){b.sortReverse=b.sortType===a&&!b.sortReverse,b.sortType=a},b.changePaginationCount=function(){a.setPaginationCount("stats_processes",b.state.pagination_count)},b.getTop=function(){f.get(g.id,{ps_args:b.ps_args},function(a){b.containerTop=a})};var k,l=!1;j.ready(function(){function a(){e.stats({id:g.id},function(a){if(-1!==Object.keys(a).map(function(b){return a[b]}).join("").indexOf("no such id"))return void c.error("Unable to retrieve stats",{},"Is this container running?");b.data=a,f(a),j(a),m(a),o()},function(){c.error("Unable to retrieve stats",{},"Is this container running?"),o()})}function f(a){C.addData([n(a)],new Date(a.read).toLocaleTimeString()),C.removeData()}function j(a){D.addData([a.memory_stats.usage],new Date(a.read).toLocaleTimeString()),D.removeData()}function m(a){if(a.networks&&(b.networkName=Object.keys(a.networks)[0],a.network=a.networks[b.networkName]),a.network){var c=0,d=0;0===F&&0===G||(c=a.network.rx_bytes-F,d=a.network.tx_bytes-G),F=a.network.rx_bytes,G=a.network.tx_bytes,E.addData([c,d],new Date(a.read).toLocaleTimeString()),E.removeData()}}function n(a){var b=a.precpu_stats,c=a.cpu_stats,d=0,e=c.cpu_usage.total_usage-b.cpu_usage.total_usage,f=c.system_cpu_usage-b.system_cpu_usage;return f>0&&e>0&&(d=e/f*c.cpu_usage.percpu_usage.length*100),d}function o(){l||(k=d(a,5e3))}for(var p=[],q=[],r=[],s=[],t=[],u=[],v=[],w=0;w<20;w++)p.push(""),q.push(0),r.push(""),s.push(0),t.push(""),u.push(0),v.push(0);var x={fillColor:"rgba(151,187,205,0.5)",strokeColor:"rgba(151,187,205,1)",pointColor:"rgba(151,187,205,1)",pointStrokeColor:"#fff",data:q},y={fillColor:"rgba(151,187,205,0.5)",strokeColor:"rgba(151,187,205,1)",pointColor:"rgba(151,187,205,1)",pointStrokeColor:"#fff",data:s},z={label:"Rx Bytes",fillColor:"rgba(151,187,205,0.5)",strokeColor:"rgba(151,187,205,1)",pointColor:"rgba(151,187,205,1)",pointStrokeColor:"#fff",data:v},A={label:"Tx Bytes",fillColor:"rgba(255,180,174,0.5)",strokeColor:"rgba(255,180,174,1)",pointColor:"rgba(255,180,174,1)",pointStrokeColor:"#fff",data:u},B=[{color:"rgba(151,187,205,0.5)",title:"Rx Data"},{color:"rgba(255,180,174,0.5)",title:"Tx Data"}];legend($("#network-legend").get(0),B),Chart.defaults.global.animationSteps=30;var C=new Chart($("#cpu-stats-chart").get(0).getContext("2d")).Line({labels:p,datasets:[x]},{responsive:!0}),D=new Chart($("#memory-stats-chart").get(0).getContext("2d")).Line({labels:r,datasets:[y]},{scaleLabel:function(a){return h(parseInt(a.value,10),2)},responsive:!0}),E=new Chart($("#network-stats-chart").get(0).getContext("2d")).Line({labels:t,datasets:[z,A]},{scaleLabel:function(a){return h(parseInt(a.value,10),2)},responsive:!0});b.networkLegend=i.trustAsHtml(E.generateLegend()),b.$on("$destroy",function(){l=!0,d.cancel(k)}),a();var F=0,G=0}),e.get({id:g.id},function(a){b.container=a},function(a){c.error("Failure",a,"Unable to retrieve container info")}),"VMWARE_VIC"!==b.applicationState.endpoint.mode.provider&&b.getTop()}]),angular.module("swarm",[]).controller("SwarmController",["$q","$scope","SystemService","NodeService","Pagination","Notifications",function(a,b,c,d,e,f){function g(a){var c=a.SystemStatus;b.swarm[c[1][0]]=c[1][1],b.swarm[c[2][0]]=c[2][1];var d="primary"===c[0][1]?c[3][1]:c[4][1],e=parseInt(d,10);b.swarm[c[3][0]]=e,b.swarm.Status=[],h(c,e)}function h(a,b){var c="primary"===a[0][1]?4:5;for(i=0;i<b;i++)j(a,c),c+=9}function j(a,c){var d={};d.name=a[c][0],d.ip=a[c][1],d.Id=a[c+1][1],d.status=a[c+2][1],d.containers=a[c+3][1],d.cpu=a[c+4][1].split("/")[1],d.memory=a[c+5][1].split("/")[1],d.labels=a[c+6][1],d.version=a[c+8][1],b.swarm.Status.push(d)}function k(a){var c=0,d=0;angular.forEach(a,function(a){c+=a.CPUs,d+=a.Memory}),b.totalCPU=c/1e9,b.totalMemory=d}function l(){$("#loadingViewSpinner").show();var e=b.applicationState.endpoint.mode.provider;a.all({version:c.version(),info:c.info(),nodes:"DOCKER_SWARM_MODE"!==e||d.nodes()}).then(function(a){if(b.docker=a.version,b.info=a.info,"DOCKER_SWARM_MODE"===e){var c=a.nodes;k(c),b.nodes=c}else g(a.info)}).catch(function(a){f.error("Failure",a,"Unable to retrieve cluster details")}).finally(function(){$("#loadingViewSpinner").hide()})}b.state={},b.state.pagination_count=e.getPaginationCount("swarm_nodes"),b.sortType="Spec.Role",b.sortReverse=!1,b.info={},b.docker={},b.swarm={},b.totalCPU=0,b.totalMemory=0,b.order=function(a){b.sortReverse=b.sortType===a&&!b.sortReverse,b.sortType=a},b.changePaginationCount=function(){e.setPaginationCount("swarm_nodes",b.state.pagination_count)},l()}]),angular.module("task",[]).controller("TaskController",["$scope","$stateParams","TaskService","Service","Notifications",function(a,b,c,d,e){function f(){$("#loadingViewSpinner").show(),c.task(b.id).then(function(b){var c=b;return a.task=c,d.get({id:c.ServiceId}).$promise}).then(function(b){var c=new ServiceViewModel(b);a.service=c}).catch(function(a){e.error("Failure",a,"Unable to retrieve task details")}).finally(function(){$("#loadingViewSpinner").hide()})}f()}]),angular.module("team",[]).controller("TeamController",["$q","$scope","$state","$stateParams","TeamService","UserService","TeamMembershipService","ModalService","Notifications","Pagination","Authentication",function(a,b,c,d,e,f,g,h,i,j,k){function l(){$("#loadingViewSpinner").show(),e.deleteTeam(b.team.Id).then(function(a){i.success("Team successfully deleted",b.team.Name),c.go("teams")}).catch(function(a){i.error("Failure",a,"Unable to remove team")}).finally(function(){$("#loadingViewSpinner").hide()})}function m(a,b){for(var c=0,d=b.length;c<d;c++)if(b[c].Id===a)return void b.splice(c,1)}function n(a,c){for(var d=0;d<a.length;d++){for(var e=a[d],f=!1,g=0;g<c.length;g++){var h=c[g];if(e.Id===h.UserId){f=!0,1===h.Role?(e.TeamRole="Leader",b.leaderCount++):e.TeamRole="Member",e.MembershipId=h.Id,b.teamMembers.push(e);break}}f||b.users.push(e)}}function o(){$("#loadingViewSpinner").show(),b.isAdmin=1===k.getUserDetails().role,a.all({team:e.team(d.id),users:f.users(!1),memberships:e.userMemberships(d.id)}).then(function(a){var c=a.users;b.team=a.team,n(c,a.memberships)}).catch(function(a){i.error("Failure",a,"Unable to retrieve team details")}).finally(function(){$("#loadingViewSpinner").hide()})}b.state={pagination_count_users:j.getPaginationCount("team_available_users"),pagination_count_members:j.getPaginationCount("team_members")},b.sortTypeUsers="Username",b.sortReverseUsers=!0,b.users=[],b.teamMembers=[],b.leaderCount=0,b.orderUsers=function(a){b.sortReverseUsers=b.sortTypeUsers===a&&!b.sortReverseUsers,b.sortTypeUsers=a},b.changePaginationCountUsers=function(){j.setPaginationCount("team_available_users",b.state.pagination_count_users)},b.sortTypeGroupMembers="TeamRole",b.sortReverseGroupMembers=!1,b.orderGroupMembers=function(a){b.sortReverseGroupMembers=b.sortTypeGroupMembers===a&&!b.sortReverseGroupMembers,b.sortTypeGroupMembers=a},b.changePaginationCountGroupMembers=function(){j.setPaginationCount("team_members",b.state.pagination_count_members)},b.deleteTeam=function(){h.confirmDeletion("Do you want to delete this team? Users in this team will not be deleted.",function(a){a&&l()})},b.promoteToLeader=function(a){$("#loadingViewSpinner").show(),g.updateMembership(a.MembershipId,a.Id,b.team.Id,1).then(function(c){b.leaderCount++,a.TeamRole="Leader",i.success("User is now team leader",a.Username)}).catch(function(a){i.error("Failure",a,"Unable to update user role")}).finally(function(){$("#loadingViewSpinner").hide()})},b.demoteToMember=function(a){$("#loadingViewSpinner").show(),g.updateMembership(a.MembershipId,a.Id,b.team.Id,2).then(function(c){a.TeamRole="Member",b.leaderCount--,i.success("User is now team member",a.Username)}).catch(function(a){i.error("Failure",a,"Unable to update user role")}).finally(function(){$("#loadingViewSpinner").hide()})},b.addAllUsers=function(){$("#loadingViewSpinner").show();var c=[];angular.forEach(b.users,function(a){c.push(g.createMembership(a.Id,b.team.Id,2))}),a.all(c).then(function(a){for(var c=b.users,d=0;d<c.length;d++){var e=c[d];e.MembershipId=a[d].Id,e.TeamRole="Member"}b.teamMembers=b.teamMembers.concat(c),b.users=[],i.success("All users successfully added")}).catch(function(a){i.error("Failure",a,"Unable to update team members")}).finally(function(){$("#loadingViewSpinner").hide()})},b.addUser=function(a){$("#loadingViewSpinner").show(),g.createMembership(a.Id,b.team.Id,2).then(function(c){m(a.Id,b.users),a.TeamRole="Member",a.MembershipId=c.Id,b.teamMembers.push(a),i.success("User added to team",a.Username)}).catch(function(a){i.error("Failure",a,"Unable to update team members")}).finally(function(){$("#loadingViewSpinner").hide()})},b.removeAllUsers=function(){$("#loadingViewSpinner").show();var c=[];angular.forEach(b.teamMembers,function(a){c.push(g.deleteMembership(a.MembershipId))}),a.all(c).then(function(a){b.users=b.users.concat(b.teamMembers),b.teamMembers=[],i.success("All users successfully removed")}).catch(function(a){i.error("Failure",a,"Unable to update team members")}).finally(function(){$("#loadingViewSpinner").hide()})},b.removeUser=function(a){$("#loadingViewSpinner").show(),g.deleteMembership(a.MembershipId).then(function(){m(a.Id,b.teamMembers),b.users.push(a),i.success("User removed from team",a.Username)}).catch(function(a){i.error("Failure",a,"Unable to update team members")}).finally(function(){$("#loadingViewSpinner").hide()})},o()}]),angular.module("teams",[]).controller("TeamsController",["$q","$scope","$state","TeamService","UserService","TeamMembershipService","ModalService","Notifications","Pagination","Authentication",function(a,b,c,d,e,f,g,h,i,j){function k(){$("#loadingViewSpinner").show();var a=0,c=function(){0===(a-=1)&&$("#loadingViewSpinner").hide()};angular.forEach(b.teams,function(e){e.Checked&&(a+=1,d.deleteTeam(e.Id).then(function(a){var c=b.teams.indexOf(e);b.teams.splice(c,1),h.success("Team successfully deleted",e.Name)}).catch(function(a){h.error("Failure",a,"Unable to remove team")}).finally(function(){c()}))})}function l(){$("#loadingViewSpinner").show();var c=j.getUserDetails(),f=1===c.role;b.isAdmin=f,a.all({users:e.users(!1),teams:f?d.teams():e.userLeadingTeams(c.ID)}).then(function(a){b.teams=a.teams,b.users=a.users}).catch(function(a){b.teams=[],b.users=[],h.error("Failure",a,"Unable to retrieve teams")}).finally(function(){$("#loadingViewSpinner").hide()})}b.state={userGroupGroupCreationError:"",selectedItemCount:0,validName:!1,pagination_count:i.getPaginationCount("teams")},b.sortType="Name",b.sortReverse=!1,b.formValues={Name:"",Leaders:[]},b.order=function(a){b.sortReverse=b.sortType===a&&!b.sortReverse,b.sortType=a},b.changePaginationCount=function(){i.setPaginationCount("teams",b.state.pagination_count)},b.selectItems=function(a){angular.forEach(b.state.filteredTeams,function(c){c.Checked!==a&&(c.Checked=a,b.selectItem(c))})},b.selectItem=function(a){a.Checked?b.state.selectedItemCount++:b.state.selectedItemCount--},b.checkNameValidity=function(){for(var a=!0,c=0;c<b.teams.length;c++)if(b.formValues.Name===b.teams[c].Name){a=!1;break}b.state.validName=a,b.state.teamCreationError=a?"":"Team name already existing"},b.addTeam=function(){$("#createTeamSpinner").show(),b.state.teamCreationError="";var a=b.formValues.Name,e=[];angular.forEach(b.formValues.Leaders,function(a){e.push(a.Id)}),d.createTeam(a,e).then(function(b){h.success("Team successfully created",a),c.reload()}).catch(function(a){h.error("Failure",a,"Unable to create team")}).finally(function(){$("#createTeamSpinner").hide()})},b.removeAction=function(){g.confirmDeletion("Do you want to delete the selected team(s)? Users in the team(s) will not be deleted.",function(a){a&&k()})},l()}]),angular.module("templates",[]).controller("TemplatesController",["$scope","$q","$state","$stateParams","$anchorScroll","$filter","ContainerService","ContainerHelper","ImageService","NetworkService","TemplateService","TemplateHelper","VolumeService","Notifications","Pagination","ResourceControlService","Authentication","FormValidator",function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r){function s(b,c){a.state.formValidationError="";var d="";return!(d=r.validateAccessControl(b,c))||(a.state.formValidationError=d,!1)}function t(b,c,d){$("#template_"+b).toggleClass("template-container--selected");var f=d[c];a.state.selectedTemplate=f,f.Network?a.formValues.network=_.find(a.availableNetworks,function(a){return a.Name===f.Network}):a.formValues.network=_.find(a.availableNetworks,function(a){return"bridge"===a.Name}),e("view-top")}function u(b){var c=a.formValues.network,d=a.formValues.name,e=v(c);return k.createTemplateConfiguration(b,d,c,e)}function v(b){var c=a.applicationState.endpoint.mode.provider,d="BY_CONTAINER_IP";return"DOCKER_SWARM"===c&&"global"===b.Scope?d="BY_SWARM_CONTAINER_NAME":"bridge"!==b.Name&&(d="BY_CONTAINER_NAME"),d}function w(){var c=d.key,e=a.applicationState.endpoint.mode.provider,f=a.applicationState.endpoint.apiVersion;b.all({templates:k.getTemplates(c),containers:g.containers(0),volumes:m.getVolumes(),networks:j.networks("DOCKER_STANDALONE"===e||"DOCKER_SWARM_MODE"===e,!1,"DOCKER_SWARM_MODE"===e&&f>=1.25,"DOCKER_SWARM"===e)}).then(function(b){a.templates=b.templates;var c=[];angular.forEach(a.templates,function(a){c=c.concat(a.Categories)}),a.availableCategories=_.sortBy(_.uniq(c)),a.runningContainers=b.containers,a.availableVolumes=b.volumes.Volumes;var d=b.networks;a.availableNetworks=d,a.globalNetworkCount=d.length}).catch(function(b){a.templates=[],n.error("Failure",b,"An error occured during apps initialization.")}).finally(function(){$("#loadTemplatesSpinner").hide()})}a.state={selectedTemplate:null,showAdvancedOptions:!1,hideDescriptions:d.hide_descriptions,formValidationError:"",filters:{Categories:"!",Platform:"!"}},a.formValues={network:"",name:"",AccessControlData:new AccessControlFormData},a.addVolume=function(){a.state.selectedTemplate.Volumes.push({containerPath:"",name:"",readOnly:!1,type:"auto"})},a.removeVolume=function(b){a.state.selectedTemplate.Volumes.splice(b,1)},a.addPortBinding=function(){a.state.selectedTemplate.Ports.push({hostPort:"",containerPort:"",protocol:"tcp"})},a.removePortBinding=function(b){a.state.selectedTemplate.Ports.splice(b,1)},a.createTemplate=function(){$("#createContainerSpinner").show();var b=q.getUserDetails(),d=a.formValues.AccessControlData,e=1===b.role;if(!s(d,e))return void $("#createContainerSpinner").hide();var f=a.state.selectedTemplate,h=u(f),j=l.determineRequiredGeneratedVolumeCount(f.Volumes),o=[];m.createXAutoGeneratedLocalVolumes(j).then(function(a){return angular.forEach(a,function(a){var b=a.Id;o.push(b)}),k.updateContainerConfigurationWithVolumes(h,f,a),i.pullImage(f.Image,{URL:f.Registry},!0)}).then(function(a){return g.createAndStartContainer(h)}).then(function(a){var c=a.Id,e=b.ID;return p.applyResourceControl("container",c,e,d,o)}).then(function(){n.success("Container successfully created"),c.go("containers",{},{reload:!0})}).catch(function(a){n.error("Failure",a,a.msg)}).finally(function(){$("#createContainerSpinner").hide()})},a.unselectTemplate=function(){var b=a.state.selectedTemplate.index;$("#template_"+b).toggleClass("template-container--selected"),a.state.selectedTemplate=null},a.selectTemplate=function(b,c){a.state.selectedTemplate&&a.state.selectedTemplate.index!==b&&a.unselectTemplate();var d=f("filter")(a.templates,a.state.filters,!0);d[c]===a.state.selectedTemplate?a.unselectTemplate():t(b,c,d)},w()}]),angular.module("user",[]).controller("UserController",["$q","$scope","$state","$stateParams","UserService","ModalService","Notifications","SettingsService",function(a,b,c,d,e,f,g,h){function i(){$("#loadingViewSpinner").show(),e.deleteUser(b.user.Id).then(function(a){g.success("User successfully deleted",b.user.Username),c.go("users")}).catch(function(a){g.error("Failure",a,"Unable to remove user")}).finally(function(){$("#loadingViewSpinner").hide()})}function j(){$("#loadingViewSpinner").show(),a.all({user:e.user(d.id),settings:h.publicSettings()}).then(function(a){var c=a.user;b.user=c,b.formValues.Administrator=1===c.Role,b.AuthenticationMethod=a.settings.AuthenticationMethod}).catch(function(a){g.error("Failure",a,"Unable to retrieve user information")}).finally(function(){$("#loadingViewSpinner").hide()})}b.state={updatePasswordError:""},b.formValues={newPassword:"",confirmPassword:"",Administrator:!1},b.deleteUser=function(){f.confirmDeletion("Do you want to remove this user? This user will not be able to login into Portainer anymore.",function(a){a&&i()})},b.updatePermissions=function(){$("#loadingViewSpinner").show();var a=b.formValues.Administrator?1:2;e.updateUser(b.user.Id,void 0,a).then(function(d){var e=1===a?"administrator":"user";g.success("Permissions successfully updated",b.user.Username+" is now "+e),c.reload()}).catch(function(a){g.error("Failure",a,"Unable to update user permissions")}).finally(function(){$("#loadingViewSpinner").hide()})},b.updatePassword=function(){$("#loadingViewSpinner").show(),e.updateUser(b.user.Id,b.formValues.newPassword,void 0).then(function(a){g.success("Password successfully updated"),c.reload()}).catch(function(a){g.error("Failure",a,"Unable to update user password")}).finally(function(){$("#loadingViewSpinner").hide()})},j()}]),angular.module("userSettings",[]).controller("UserSettingsController",["$scope","$state","$sanitize","Authentication","UserService","Notifications","SettingsService",function(a,b,c,d,e,f,g){function h(){g.publicSettings().then(function(b){a.AuthenticationMethod=b.AuthenticationMethod}).catch(function(a){f.error("Failure",a,"Unable to retrieve application settings")}).finally(function(){$("#loadingViewSpinner").hide()})}a.formValues={currentPassword:"",newPassword:"",confirmPassword:""},a.updatePassword=function(){a.invalidPassword=!1;var g=d.getUserDetails().ID,h=c(a.formValues.currentPassword),i=c(a.formValues.newPassword);e.updateUserPassword(g,h,i).then(function(){f.success("Success","Password successfully updated"),b.reload()}).catch(function(b){b.invalidPassword?a.invalidPassword=!0:f.error("Failure",b,b.msg)})},h()}]),angular.module("users",[]).controller("UsersController",["$q","$scope","$state","$sanitize","UserService","TeamService","TeamMembershipService","ModalService","Notifications","Pagination","Authentication","SettingsService",function(a,b,c,d,e,f,g,h,i,j,k,l){function m(){$("#loadUsersSpinner").show();var a=0,c=function(){0===(a-=1)&&$("#loadUsersSpinner").hide()};angular.forEach(b.users,function(d){d.Checked&&(a+=1,e.deleteUser(d.Id).then(function(a){var c=b.users.indexOf(d);b.users.splice(c,1),i.success("User successfully deleted",d.Username)}).catch(function(a){i.error("Failure",a,"Unable to remove user")}).finally(function(){c()}))})}function n(a,b){for(var c=0;c<a.length;c++){var d=a[c];d.isTeamLeader=!1;for(var e=0;e<b.length;e++){var f=b[e];if(d.Id===f.UserId&&1===f.Role){d.isTeamLeader=!0,d.RoleName="team leader";break}}}}function o(){$("#loadUsersSpinner").show();var c=k.getUserDetails(),d=1===c.role;b.isAdmin=d,a.all({users:e.users(!0),teams:d?f.teams():e.userLeadingTeams(c.ID),memberships:g.memberships(),settings:l.publicSettings()}).then(function(a){var c=a.users;n(c,a.memberships),b.users=c,b.teams=a.teams,b.AuthenticationMethod=a.settings.AuthenticationMethod}).catch(function(a){i.error("Failure",a,"Unable to retrieve users and teams"),b.users=[],b.teams=[]}).finally(function(){$("#loadUsersSpinner").hide()})}b.state={userCreationError:"",selectedItemCount:0,validUsername:!1,pagination_count:j.getPaginationCount("users")},b.sortType="RoleName",b.sortReverse=!1,b.formValues={Username:"",Password:"",ConfirmPassword:"",Administrator:!1,Teams:[]},b.order=function(a){b.sortReverse=b.sortType===a&&!b.sortReverse,b.sortType=a},b.changePaginationCount=function(){j.setPaginationCount("endpoints",b.state.pagination_count)},b.selectItems=function(a){angular.forEach(b.state.filteredUsers,function(c){c.Checked!==a&&(c.Checked=a,b.selectItem(c))})},b.selectItem=function(a){a.Checked?b.state.selectedItemCount++:b.state.selectedItemCount--},b.checkUsernameValidity=function(){for(var a=!0,c=0;c<b.users.length;c++)if(b.formValues.Username===b.users[c].Username){a=!1;break}b.state.validUsername=a,b.state.userCreationError=a?"":"Username already taken"},b.addUser=function(){$("#createUserSpinner").show(),b.state.userCreationError="";var a=d(b.formValues.Username),f=d(b.formValues.Password),g=b.formValues.Administrator?1:2,h=[];angular.forEach(b.formValues.Teams,function(a){h.push(a.Id)}),e.createUser(a,f,g,h).then(function(b){i.success("User successfully created",a),c.reload()}).catch(function(a){i.error("Failure",a,"Unable to create user")}).finally(function(){$("#createUserSpinner").hide()})},b.removeAction=function(){h.confirmDeletion("Do you want to remove the selected users? They will not be able to login into Portainer anymore.",function(a){a&&m()})},o()}]),angular.module("volume",[]).controller("VolumeController",["$scope","$state","$stateParams","VolumeService","Notifications",function(a,b,c,d,e){function f(){$("#loadingViewSpinner").show(),d.volume(c.id).then(function(b){var c=b;a.volume=c}).catch(function(a){e.error("Failure",a,"Unable to retrieve volume details")}).finally(function(){$("#loadingViewSpinner").hide()})}a.removeVolume=function(){$("#loadingViewSpinner").show(),d.remove(a.volume).then(function(a){e.success("Volume successfully removed",c.id),b.go("volumes",{})}).catch(function(a){e.error("Failure",a,"Unable to remove volume")}).finally(function(){$("#loadingViewSpinner").hide()})},f()}]),angular.module("volumes",[]).controller("VolumesController",["$q","$scope","VolumeService","Notifications","Pagination",function(a,b,c,d,e){function f(){$("#loadVolumesSpinner").show(),a.all({attached:c.volumes({filters:{dangling:["false"]}}),dangling:c.volumes({filters:{dangling:["true"]}})}).then(function(a){b.volumes=a.attached.map(function(a){return a.dangling=!1,a}).concat(a.dangling.map(function(a){return a.dangling=!0,a}))}).catch(function(a){d.error("Failure",a,"Unable to retrieve volumes")}).finally(function(){$("#loadVolumesSpinner").hide()})}b.state={},b.state.pagination_count=e.getPaginationCount("volumes"),b.state.selectedItemCount=0,b.sortType="Id",b.sortReverse=!1,b.changePaginationCount=function(){e.setPaginationCount("volumes",b.state.pagination_count)},b.order=function(a){b.sortReverse=b.sortType===a&&!b.sortReverse,b.sortType=a},b.selectItems=function(a){angular.forEach(b.state.filteredVolumes,function(c){c.Checked!==a&&(c.Checked=a,b.selectItem(c))})},b.selectItem=function(a){a.Checked?b.state.selectedItemCount++:b.state.selectedItemCount--},b.removeAction=function(){$("#loadVolumesSpinner").show();var a=0,e=function(){0===(a-=1)&&$("#loadVolumesSpinner").hide()};angular.forEach(b.volumes,function(f){f.Checked&&(a+=1,c.remove(f).then(function(){d.success("Volume deleted",f.Id);var a=b.volumes.indexOf(f);b.volumes.splice(a,1)}).catch(function(a){d.error("Failure",a,"Unable to remove volume")}).finally(function(){e()}))})},f()}]),angular.module("portainer").component("porAccessControlForm",{templateUrl:"app/directives/accessControlForm/porAccessControlForm.html",controller:"porAccessControlFormController",bindings:{formData:"=",resourceControl:"<"}}),angular.module("portainer").controller("porAccessControlFormController",["$q","UserService","TeamService","Notifications","Authentication","ResourceControlService",function(a,b,c,d,e,f){function g(a,b){b&&"private"===a.Ownership?j.formData.Ownership="restricted":j.formData.Ownership=a.Ownership}function h(a,b){angular.forEach(j.availableUsers,function(b){_.find(a,{Id:b.Id})&&(b.selected=!0)}),angular.forEach(j.availableTeams,function(a){_.find(b,{Id:a.Id})&&(a.selected=!0)})}function i(){$("#loadingViewSpinner").show();var i=e.getUserDetails(),k=1===i.role;j.isAdmin=k,k&&(j.formData.Ownership="administrators"),a.all({availableTeams:c.teams(),
availableUsers:k?b.users(!1):[]}).then(function(b){j.availableUsers=b.availableUsers;var c=b.availableTeams;return j.availableTeams=c,k||1!==c.length||(j.formData.AuthorizedTeams=c),a.when(j.resourceControl&&f.retrieveOwnershipDetails(j.resourceControl))}).then(function(a){if(a){var b=a.authorizedUsers,c=a.authorizedTeams;g(j.resourceControl,k),h(b,c)}}).catch(function(a){d.error("Failure",a,"Unable to retrieve access control information")}).finally(function(){$("#loadingViewSpinner").hide()})}var j=this;j.availableTeams=[],j.availableUsers=[],i()}]),angular.module("portainer").component("porAccessControlPanel",{templateUrl:"app/directives/accessControlPanel/porAccessControlPanel.html",controller:"porAccessControlPanelController",bindings:{resourceId:"<",resourceControl:"=",resourceType:"<"}}),angular.module("portainer").controller("porAccessControlPanelController",["$q","$state","UserService","TeamService","ResourceControlService","Notifications","Authentication","ModalService","FormValidator",function(a,b,c,d,e,f,g,h,i){function j(){n.state.formValidationError="";var a="",b={AccessControlEnabled:"public"!==n.formValues.Ownership,Ownership:n.formValues.Ownership,AuthorizedUsers:n.formValues.Ownership_Users,AuthorizedTeams:n.formValues.Ownership_Teams},c=n.isAdmin;return!(a=i.validateAccessControl(b,c))||(n.state.formValidationError=a,!1)}function k(){var a=[];angular.forEach(n.formValues.Ownership_Users,function(b){a.push(b.Id)});var b=[];angular.forEach(n.formValues.Ownership_Teams,function(a){b.push(a.Id)});var c="administrators"===n.formValues.Ownership;return{ownership:n.formValues.Ownership,authorizedUserIds:c?[]:a,authorizedTeamIds:c?[]:b,administratorsOnly:c}}function l(){$("#loadingViewSpinner").show();var a=n.resourceId,c=k();e.applyResourceControlChange(n.resourceType,a,n.resourceControl,c).then(function(a){f.success("Access control successfully updated"),b.reload()}).catch(function(a){f.error("Failure",a,"Unable to update access control")}).finally(function(){$("#loadingViewSpinner").hide()})}function m(){$("#loadingViewSpinner").show();var b=g.getUserDetails(),h=1===b.role,i=b.ID;n.isAdmin=h;var j=n.resourceControl;n.formValues.Ownership=h&&j?"private"===j.Ownership?"restricted":j.Ownership:"public",e.retrieveOwnershipDetails(j).then(function(a){return n.authorizedUsers=a.authorizedUsers,n.authorizedTeams=a.authorizedTeams,e.retrieveUserPermissionsOnResource(i,h,j)}).then(function(b){return n.state.canEditOwnership=b.isPartOfRestrictedUsers||b.isLeaderOfAnyRestrictedTeams,n.state.canChangeOwnershipToTeam=b.isPartOfRestrictedUsers,a.all({availableUsers:h?c.users(!1):[],availableTeams:h||b.isPartOfRestrictedUsers?d.teams():[]})}).then(function(a){n.availableUsers=a.availableUsers,angular.forEach(n.availableUsers,function(a){_.find(n.authorizedUsers,{Id:a.Id})&&(a.selected=!0)}),n.availableTeams=a.availableTeams,angular.forEach(a.availableTeams,function(a){_.find(n.authorizedTeams,{Id:a.Id})&&(a.selected=!0)}),1===a.availableTeams.length&&n.formValues.Ownership_Teams.push(a.availableTeams[0]),n.state.displayAccessControlPanel=!0}).catch(function(a){f.error("Failure",a,"Unable to retrieve access control information")}).finally(function(){$("#loadingViewSpinner").hide()})}var n=this;n.state={displayAccessControlPanel:!1,canEditOwnership:!1,editOwnership:!1,formValidationError:""},n.formValues={Ownership:"public",Ownership_Users:[],Ownership_Teams:[]},n.authorizedUsers=[],n.availableUsers=[],n.authorizedTeams=[],n.availableTeams=[],n.confirmUpdateOwnership=function(a){j()&&h.confirmAccessControlUpdate(function(a){a&&l()})},m()}]),angular.module("portainer").component("porAccessManagement",{templateUrl:"app/directives/accessManagement/porAccessManagement.html",controller:"porAccessManagementController",bindings:{accessControlledEntity:"<",updateAccess:"&"}}),angular.module("portainer").controller("porAccessManagementController",["AccessService","Pagination","Notifications",function(a,b,c){function d(a,b,c){angular.forEach(a,function(a){"user"===a.Type?b.push(a.Id):"team"===a.Type&&c.push(a.Id)})}function e(a,b){var c=[],e=[];return a&&d(a,c,e),b&&d(b,c,e),{userIDs:c,teamIDs:e}}function f(a,b){_.remove(b,function(b){return b.Id===a.Id&&b.Type===a.Type})}function g(a,b){_.remove(b,function(b){return b===a})}function h(){var b=i.accessControlledEntity;a.accesses(b.AuthorizedUsers,b.AuthorizedTeams).then(function(a){i.accesses=a.accesses,i.authorizedAccesses=a.authorizedAccesses}).catch(function(a){i.accesses=[],i.authorizedAccesses=[],c.error("Failure",a,"Unable to retrieve accesses")})}var i=this;i.state={pagination_count_accesses:b.getPaginationCount("access_management_accesses"),pagination_count_authorizedAccesses:b.getPaginationCount("access_management_AuthorizedAccesses"),sortAccessesBy:"Type",sortAccessesReverse:!1,sortAuthorizedAccessesBy:"Type",sortAuthorizedAccessesReverse:!1},i.orderAccesses=function(a){i.state.sortAccessesReverse=i.state.sortAccessesBy===a&&!i.state.sortAccessesReverse,i.state.sortAccessesBy=a},i.orderAuthorizedAccesses=function(a){i.state.sortAuthorizedAccessesReverse=i.state.sortAuthorizedAccessesBy===a&&!i.state.sortAuthorizedAccessesReverse,i.state.sortAuthorizedAccessesBy=a},i.changePaginationCountAuthorizedAccesses=function(){b.setPaginationCount("access_management_AuthorizedAccesses",i.state.pagination_count_authorizedAccesses)},i.changePaginationCountAccesses=function(){b.setPaginationCount("access_management_accesses",i.state.pagination_count_accesses)},i.authorizeAccess=function(a){var b=e(null,i.authorizedAccesses),d=b.userIDs,g=b.teamIDs;"user"===a.Type?d.push(a.Id):"team"===a.Type&&g.push(a.Id),i.updateAccess({userAccesses:d,teamAccesses:g}).then(function(b){f(a,i.accesses),i.authorizedAccesses.push(a),c.success("Accesses successfully updated")}).catch(function(a){c.error("Failure",a,"Unable to update accesses")})},i.unauthorizeAccess=function(a){var b=e(null,i.authorizedAccesses),d=b.userIDs,h=b.teamIDs;"user"===a.Type?g(a.Id,d):"team"===a.Type&&g(a.Id,h),i.updateAccess({userAccesses:d,teamAccesses:h}).then(function(b){f(a,i.authorizedAccesses),i.accesses.push(a),c.success("Accesses successfully updated")}).catch(function(a){c.error("Failure",a,"Unable to update accesses")})},i.unauthorizeAllAccesses=function(){i.updateAccess({userAccesses:[],teamAccesses:[]}).then(function(a){i.accesses=i.accesses.concat(i.authorizedAccesses),i.authorizedAccesses=[],c.success("Accesses successfully updated")}).catch(function(a){c.error("Failure",a,"Unable to update accesses")})},i.authorizeAllAccesses=function(){var a=e(i.accesses,i.authorizedAccesses),b=a.userIDs,d=a.teamIDs;i.updateAccess({userAccesses:b,teamAccesses:d}).then(function(a){i.authorizedAccesses=i.authorizedAccesses.concat(i.accesses),i.accesses=[],c.success("Accesses successfully updated")}).catch(function(a){c.error("Failure",a,"Unable to update accesses")})},h()}]),angular.module("portainer").directive("rdHeaderContent",["Authentication",function(a){return{requires:"^rdHeader",transclude:!0,link:function(b,c,d){b.username=a.getUserDetails().username},template:'<div class="breadcrumb-links"><div class="pull-left" ng-transclude></div><div class="pull-right" ng-if="username"><a ui-sref="userSettings" style="margin-right: 5px;"><u><i class="fa fa-wrench" aria-hidden="true"></i> my account </u></a><a ui-sref="auth({logout: true})" class="text-danger" style="margin-right: 25px;"><u><i class="fa fa-sign-out" aria-hidden="true"></i> log out</u></a></div></div>',restrict:"E"}}]),angular.module("portainer").directive("rdHeaderTitle",["Authentication",function(a){return{requires:"^rdHeader",scope:{title:"@"},link:function(b,c,d){b.username=a.getUserDetails().username},transclude:!0,template:'<div class="page white-space-normal">{{title}}<span class="header_title_content" ng-transclude></span><span class="pull-right user-box" ng-if="username"><i class="fa fa-user-circle-o" aria-hidden="true"></i> {{username}}</span></div>',restrict:"E"}}]),angular.module("portainer").directive("rdHeader",function(){return{scope:{ngModel:"="},transclude:!0,template:'<div class="row header"><div class="col-xs-12"><div class="meta" ng-transclude></div></div></div>',restrict:"EA"}}),angular.module("portainer").component("porImageRegistry",{templateUrl:"app/directives/imageRegistry/porImageRegistry.html",controller:"porImageRegistryController",bindings:{image:"=",registry:"="}}),angular.module("portainer").controller("porImageRegistryController",["$q","RegistryService","DockerHubService","Notifications",function(a,b,c,d){function e(){a.all({registries:b.registries(),dockerhub:c.dockerhub()}).then(function(a){var b=a.dockerhub,c=a.registries;f.availableRegistries=[b].concat(c),f.registry.Id?f.registry=_.find(f.availableRegistries,{Id:f.registry.Id}):f.registry=b}).catch(function(a){d.error("Failure",a,"Unable to retrieve registries")})}var f=this;e()}]),angular.module("portainer").directive("rdLoading",function(){return{restrict:"AE",template:'<div class="loading"><div class="double-bounce1"></div><div class="double-bounce2"></div></div>'}}),angular.module("portainer").directive("rdTemplateWidget",function(){return{scope:{ngModel:"="},transclude:!0,template:'<div class="widget template-widget" id="template-widget" ng-transclude></div>',restrict:"EA"}}),angular.module("portainer").directive("portainerTooltip",[function(){return{scope:{message:"@",position:"@"},template:'<span class="interactive" tooltip-append-to-body="true" tooltip-placement="{{position}}" tooltip-class="portainer-tooltip" uib-tooltip="{{message}}"><i class="fa fa-question-circle tooltip-icon" aria-hidden="true"></i></span>',restrict:"E"}}]),angular.module("portainer").directive("rdWidgetBody",function(){return{requires:"^rdWidget",scope:{loading:"@?",classes:"@?"},transclude:!0,template:'<div class="widget-body" ng-class="classes"><rd-loading ng-show="loading"></rd-loading><div ng-hide="loading" class="widget-content" ng-transclude></div></div>',restrict:"E"}}),angular.module("portainer").directive("rdWidgetCustomHeader",function(){return{requires:"^rdWidget",scope:{title:"=",icon:"="},transclude:!0,template:'<div class="widget-header"><div class="row"><span class="pull-left"><img class="custom-header-ico" ng-src="{{icon}}"></img> <span class="text-muted"> {{title}} </span> </span><span class="pull-right col-xs-6 col-sm-4" ng-transclude></span></div></div>',restrict:"E"}}),angular.module("portainer").directive("rdWidgetFooter",function(){return{requires:"^rdWidget",transclude:!0,template:'<div class="widget-footer" ng-transclude></div>',restrict:"E"}}),angular.module("portainer").directive("rdWidgetHeader",function(){return{requires:"^rdWidget",scope:{title:"@",icon:"@",classes:"@?"},transclude:!0,template:'<div class="widget-header"><div class="row"><span ng-class="classes" class="pull-left"><i class="fa" ng-class="icon"></i> {{title}} </span><span ng-class="classes" class="pull-right" ng-transclude></span></div></div>',restrict:"E"}}),angular.module("portainer").directive("rdWidgetTaskbar",function(){return{requires:"^rdWidget",scope:{classes:"@?"},transclude:!0,template:'<div class="widget-header"><div class="row"><div ng-class="classes" ng-transclude></div></div></div>',restrict:"E"}}),angular.module("portainer").directive("rdWidget",function(){return{scope:{ngModel:"="},transclude:!0,template:'<div class="widget" ng-transclude></div>',restrict:"EA"}}),angular.module("portainer.filters",[]).filter("truncate",function(){"use strict";return function(a,b,c){return isNaN(b)&&(b=10),void 0===c&&(c="..."),a.length<=b||a.length-c.length<=b?a:String(a).substring(0,b-c.length)+c}}).filter("truncatelr",function(){"use strict";return function(a,b,c,d){return b=isNaN(b)?50:b,c=isNaN(c)?25:c,d=isNaN(d)?25:d,a.length<=b?a:a.substring(0,c)+"[...]"+a.substring(a.length-d,a.length)}}).filter("taskstatusbadge",function(){"use strict";return function(a){var b=_.toLower(a);return includeString(b,["new","allocated","assigned","accepted"])?"info":includeString(b,["pending"])?"warning":includeString(b,["shutdown","failed","rejected"])?"danger":includeString(b,["complete"])?"primary":"success"}}).filter("containerstatusbadge",function(){"use strict";return function(a){var b=_.toLower(a);return includeString(b,["paused","starting"])?"warning":includeString(b,["created"])?"info":includeString(b,["stopped","unhealthy","dead"])?"danger":"success"}}).filter("containerstatus",function(){"use strict";return function(a){var b=_.toLower(a);return includeString(b,["paused"])?"paused":includeString(b,["dead"])?"dead":includeString(b,["created"])?"created":includeString(b,["exited"])?"stopped":includeString(b,["(healthy)"])?"healthy":includeString(b,["(unhealthy)"])?"unhealthy":includeString(b,["(health: starting)"])?"starting":"running"}}).filter("nodestatusbadge",function(){"use strict";return function(a){return"down"===a||"Unhealthy"===a?"danger":"success"}}).filter("trimcontainername",function(){"use strict";return function(a){return a?0===a.indexOf("/")?a.replace("/",""):a:""}}).filter("capitalize",function(){"use strict";return function(a){return _.capitalize(a)}}).filter("getstatetext",function(){"use strict";return function(a){return void 0===a?"":a.Dead?"Dead":a.Ghost&&a.Running?"Ghost":a.Running&&a.Paused?"Running (Paused)":a.Running?"Running":"created"===a.Status?"Created":"Stopped"}}).filter("stripprotocol",function(){"use strict";return function(a){return a.replace(/.*?:\/\//g,"")}}).filter("getstatelabel",function(){"use strict";return function(a){return void 0===a?"label-default":a.Ghost&&a.Running?"label-important":a.Running?"label-success":"label-default"}}).filter("humansize",function(){"use strict";return function(a,b){if(b||(b=1),a||0===a)return filesize(a,{base:10,round:b})}}).filter("containername",function(){"use strict";return function(a){var b=a.Names[0];return b.substring(1,b.length)}}).filter("swarmcontainername",function(){"use strict";return function(a){return _.split(a.Names[0],"/")[2]}}).filter("swarmversion",function(){"use strict";return function(a){return _.split(a,"/")[1]}}).filter("swarmhostname",function(){"use strict";return function(a){return _.split(a.Names[0],"/")[1]}}).filter("repotags",function(){"use strict";return function(a){if(a.RepoTags&&a.RepoTags.length>0){return"<none>:<none>"===a.RepoTags[0]?[]:a.RepoTags}return[]}}).filter("getisodatefromtimestamp",function(){"use strict";return function(a){return moment.unix(a).format("YYYY-MM-DD HH:mm:ss")}}).filter("getisodate",function(){"use strict";return function(a){return moment(a).format("YYYY-MM-DD HH:mm:ss")}}).filter("command",function(){"use strict";return function(a){if(a)return a.join(" ")}}).filter("key",function(){"use strict";return function(a,b){return a.slice(0,a.indexOf(b))}}).filter("value",function(){"use strict";return function(a,b){return a.slice(a.indexOf(b)+1)}}).filter("emptyobject",function(){"use strict";return function(a){return _.isEmpty(a)}}).filter("ipaddress",function(){"use strict";return function(a){return a.slice(0,a.indexOf("/"))}}).filter("arraytostr",function(){"use strict";return function(a,b){return a?_.join(a,b):""}}).filter("hideshasum",function(){"use strict";return function(a){return a?a.split("@sha")[0]:""}}).filter("ownershipicon",function(){"use strict";return function(a){switch(a){case"private":case"administrators":return"fa fa-eye-slash";case"restricted":return"fa fa-users";default:return"fa fa-eye"}}}).filter("tasknodename",function(){"use strict";return function(a,b){var c=_.find(b,{Id:a});return c?c.Hostname:""}}).filter("imagelayercommand",function(){"use strict";return function(a){return a.replace("/bin/sh -c #(nop) ","").replace("/bin/sh -c ","RUN ")}}),angular.module("portainer.helpers").factory("ContainerHelper",[function(){"use strict";var a={};return a.commandStringToArray=function(a){return splitargs(a)},a.commandArrayToString=function(a){return a.map(function(a){return"'"+a+"'"}).join(" ")},a.configFromContainer=function(a){var b=a.Config;b.HostConfig=a.HostConfig,b.name=a.Name.replace(/^\//g,"");var c=b.HostConfig.NetworkMode;b.NetworkingConfig={EndpointsConfig:{}},b.NetworkingConfig.EndpointsConfig=a.NetworkSettings.Networks,-1!==c.indexOf("container:")&&(delete b.Hostname,delete b.ExposedPorts);var d=[],e={};for(var f in a.Mounts)if({}.hasOwnProperty.call(a.Mounts,f)){var g=a.Mounts[f],h=(g.Type,g.Name||g.Source,g.Destination,g.RW,g.Name||g.Source),i=g.Destination;if(h&&i){var j=h+":"+i;e[i]={},!1===g.RW&&(j+=":ro"),d.push(j)}}return b.HostConfig.Binds=d,b.Volumes=e,b},a}]),angular.module("portainer.helpers").factory("ImageHelper",[function(){"use strict";function a(a,b){var c=a.split(":"),d=c[0],e=c[1]?c[1]:"latest";return b&&(d=b+"/"+c[0]),{image:d,tag:e}}var b={};return b.extractImageAndRegistryFromRepository=function(a){var b=_.countBy(a)["/"],c=null,d=a;return b>=1&&(c=a.substr(0,a.indexOf("/")),_.countBy(c)["."]>0?d=a.substr(a.indexOf("/")+1):c=null),{registry:c,image:d}},b.createImageConfigForCommit=function(b,c){var d=a(b,c);return{repo:d.image,tag:d.tag}},b.createImageConfigForContainer=function(b,c){var d=a(b,c);return{fromImage:d.image,tag:d.tag}},b}]),angular.module("portainer.helpers").factory("InfoHelper",[function(){"use strict";return{determineEndpointMode:function(a){var b={provider:"",role:""};return _.startsWith(a.ServerVersion,"swarm")?(b.provider="DOCKER_SWARM","primary"===a.SystemStatus[0][1]?b.role="PRIMARY":b.role="REPLICA"):!a.Swarm||_.isEmpty(a.Swarm.NodeID)?"vSphere Integrated Containers"===a.ID?b.provider="VMWARE_VIC":b.provider="DOCKER_STANDALONE":(b.provider="DOCKER_SWARM_MODE",a.Swarm.ControlAvailable?b.role="MANAGER":b.role="WORKER"),b}}}]),angular.module("portainer.helpers").factory("LabelHelper",[function(){"use strict";return{fromLabelHashToKeyValue:function(a){return a?Object.keys(a).map(function(b){return{key:b,value:a[b],originalKey:b,originalValue:a[b],added:!0}}):[]},fromKeyValueToLabelHash:function(a){var b={};return a&&a.forEach(function(a){b[a.key]=a.value}),b}}}]),angular.module("portainer.helpers").factory("NodeHelper",[function(){"use strict";return{nodeToConfig:function(a){return{Name:a.Spec.Name,Role:a.Spec.Role,Labels:a.Spec.Labels,Availability:a.Spec.Availability}},getManagerIP:function(a){var b;for(var c in a)void 0!==a[c].ManagerStatus&&"reachable"===a[c].ManagerStatus.Reachability&&(b=a[c].ManagerStatus.Addr.split(":")[0]);return b}}}]),angular.module("portainer.helpers").factory("RegistryHelper",[function(){"use strict";var a={};return a.getRegistryByURL=function(a,b){for(var c=0;c<a.length;c++)if(a[c].URL===b)return a[c];return null},a}]),angular.module("portainer.helpers").factory("ResourceControlHelper",[function(){"use strict";var a={};return a.retrieveAuthorizedUsers=function(a,b){var c=[];return angular.forEach(a.UserAccesses,function(a){var d=_.find(b,{Id:a.UserId});d&&c.push(d)}),c},a.retrieveAuthorizedTeams=function(a,b){var c=[];return angular.forEach(a.TeamAccesses,function(a){var d=_.find(b,{Id:a.TeamId});d&&c.push(d)}),c},a.isLeaderOfAnyRestrictedTeams=function(a,b){for(var c=!1,d=0;d<a.length;d++){var e=a[d];if(_.find(b.TeamAccesses,{TeamId:e.TeamId})&&1===e.Role){c=!0;break}}return c},a}]),angular.module("portainer.helpers").factory("SecretHelper",[function(){"use strict";return{flattenSecret:function(a){return a?{Id:a.SecretID,Name:a.SecretName,FileName:a.File.Name,Uid:a.File.UID,Gid:a.File.GID,Mode:a.File.Mode}:{}},secretConfig:function(a){return a?{SecretID:a.Id,SecretName:a.Name,File:{Name:a.FileName,UID:"0",GID:"0",Mode:444}}:{}}}}]),angular.module("portainer.helpers").factory("ServiceHelper",[function(){"use strict";return{serviceToConfig:function(a){return{Name:a.Spec.Name,Labels:a.Spec.Labels,TaskTemplate:a.Spec.TaskTemplate,Mode:a.Spec.Mode,UpdateConfig:a.Spec.UpdateConfig,Networks:a.Spec.Networks,EndpointSpec:a.Spec.EndpointSpec}},translateKeyValueToPlacementPreferences:function(a){if(a){var b=[];return a.forEach(function(a){if(a.strategy&&""!==a.strategy&&a.value&&""!==a.value)switch(a.strategy.toLowerCase()){case"spread":b.push({Spread:{SpreadDescriptor:a.value}})}}),b}return[]},translateKeyValueToPlacementConstraints:function(a){if(a){var b=[];return a.forEach(function(a){a.key&&""!==a.key&&a.value&&""!==a.value&&b.push(a.key+a.operator+a.value)}),b}return[]},translateEnvironmentVariables:function(a){if(a){var b=[];return a.forEach(function(a){var c=a.indexOf("="),d=[a.slice(0,c),a.slice(c+1)],e=d.length>1?d[1]:"";b.push({key:d[0],value:e,originalKey:d[0],originalValue:e,added:!0})}),b}return[]},translateEnvironmentVariablesToEnv:function(a){if(a){var b=[];return a.forEach(function(a){a.key&&""!==a.key&&b.push(a.key+"="+a.value)}),b}return[]},translatePreferencesToKeyValue:function(a){if(a){var b=[];return a.forEach(function(a){a.Spread&&b.push({strategy:"Spread",value:a.Spread.SpreadDescriptor})}),b}return[]},translateConstraintsToKeyValue:function(a){function b(a){var b=a.indexOf("==");return b>=0?[b,"=="]:[a.indexOf("!="),"!="]}if(a){var c=[];return a.forEach(function(a){var d=b(a),e=a.slice(0,d[0]),f=d[1],g=a.slice(d[0]+2);c.push({key:e,value:g,operator:f,originalKey:e,originalValue:g})}),c}return[]}}}]),angular.module("portainer.helpers").factory("TemplateHelper",["$filter",function(a){"use strict";var b={};return b.getDefaultContainerConfiguration=function(){return{Env:[],OpenStdin:!1,Tty:!1,ExposedPorts:{},HostConfig:{RestartPolicy:{Name:"no"},PortBindings:{},Binds:[],Privileged:!1},Volumes:{}}},b.portArrayToPortConfiguration=function(a){var b={bindings:{},exposedPorts:{}};return a.forEach(function(a){if(a.containerPort){var c=a.containerPort+"/"+a.protocol,d={};if(a.hostPort&&(d.HostPort=a.hostPort,a.hostPort.indexOf(":")>-1)){var e=a.hostPort.split(":");d.HostIp=e[0],d.HostPort=e[1]}b.bindings[c]=[d],b.exposedPorts[c]={}}}),b},b.EnvToStringArray=function(b,c){var d=[];return b.forEach(function(b){if(b.value||b.set){var e=b.set?b.set:b.value;if(b.type&&"container"===b.type)if("BY_CONTAINER_IP"===c){var f=b.value;e=f.NetworkSettings.Networks[Object.keys(f.NetworkSettings.Networks)[0]].IPAddress}else"BY_CONTAINER_NAME"===c?e=a("containername")(b.value):"BY_SWARM_CONTAINER_NAME"===c&&(e=a("swarmcontainername")(b.value));d.push(b.name+"="+e)}}),d},b.getConsoleConfiguration=function(a){var b={openStdin:!1,tty:!1};return!0===a&&(b.openStdin=!0,b.tty=!0),b},b.createVolumeBindings=function(a,b){a.forEach(function(a){if(a.containerPath){var c;"auto"===a.type?c=b.pop().Id+":"+a.containerPath:"auto"!==a.type&&a.name&&(c=a.name+":"+a.containerPath),a.readOnly&&(c+=":ro"),a.binding=c}})},b.determineRequiredGeneratedVolumeCount=function(a){var b=0;return a.forEach(function(a){"auto"===a.type&&++b}),b},b.filterLinuxServerIOTemplates=function(a){return a.filter(function(a){var b=!1;return a.Categories&&angular.forEach(a.Categories,function(a){_.startsWith(a,"Network")&&(b=!0)}),b}).map(function(a,b){return a.index=b,a})},b}]),angular.module("portainer.helpers").factory("UserHelper",[function(){"use strict";var a={};return a.filterNonAdministratorUsers=function(a){return a.filter(function(a){if(1!==a.Role)return a})},a}]),angular.module("portainer.helpers").factory("VolumeHelper",[function(){"use strict";var a={};return a.createDriverOptions=function(a){var b={};return a.forEach(function(a){b[a.name]=a.value}),b},a}]),angular.module("portainer.rest").factory("Auth",["$resource","API_ENDPOINT_AUTH",function(a,b){"use strict";return a(b,{},{login:{method:"POST"}})}]),angular.module("portainer.rest").factory("DockerHub",["$resource","API_ENDPOINT_DOCKERHUB",function(a,b){"use strict";return a(b,{},{get:{method:"GET"},update:{method:"PUT"}})}]),angular.module("portainer.rest").factory("Endpoints",["$resource","API_ENDPOINT_ENDPOINTS",function(a,b){"use strict";return a(b+"/:id/:action",{},{create:{method:"POST"},query:{method:"GET",isArray:!0},get:{method:"GET",params:{id:"@id"}},update:{method:"PUT",params:{id:"@id"}},updateAccess:{method:"PUT",params:{id:"@id",action:"access"}},remove:{method:"DELETE",params:{id:"@id"}}})}]),angular.module("portainer.rest").factory("Registries",["$resource","API_ENDPOINT_REGISTRIES",function(a,b){"use strict";return a(b+"/:id/:action",{},{create:{method:"POST"},query:{method:"GET",isArray:!0},get:{method:"GET",params:{id:"@id"}},update:{method:"PUT",params:{id:"@id"}},updateAccess:{method:"PUT",params:{id:"@id",action:"access"}},remove:{method:"DELETE",params:{id:"@id"}}})}]),angular.module("portainer.rest").factory("ResourceControl",["$resource","API_ENDPOINT_RESOURCE_CONTROLS",function(a,b){"use strict";return a(b+"/:id",{},{create:{method:"POST"},get:{method:"GET",params:{id:"@id"}},update:{method:"PUT",params:{id:"@id"}},remove:{method:"DELETE",params:{id:"@id"}}})}]),angular.module("portainer.rest").factory("Settings",["$resource","API_ENDPOINT_SETTINGS",function(a,b){"use strict";return a(b+"/:subResource/:action",{},{get:{method:"GET"},update:{method:"PUT"},publicSettings:{method:"GET",params:{subResource:"public"}},checkLDAPConnectivity:{method:"PUT",params:{subResource:"authentication",action:"checkLDAP"}}})}]),angular.module("portainer.rest").factory("Status",["$resource","API_ENDPOINT_STATUS",function(a,b){"use strict";return a(b,{},{get:{method:"GET"}})}]),angular.module("portainer.rest").factory("Teams",["$resource","API_ENDPOINT_TEAMS",function(a,b){"use strict";return a(b+"/:id/:entity/:entityId",{},{create:{method:"POST"},query:{method:"GET",isArray:!0},get:{method:"GET",params:{id:"@id"}},update:{method:"PUT",params:{id:"@id"}},remove:{method:"DELETE",params:{id:"@id"}},queryMemberships:{method:"GET",isArray:!0,params:{id:"@id",entity:"memberships"}}})}]),angular.module("portainer.rest").factory("TeamMemberships",["$resource","API_ENDPOINT_TEAM_MEMBERSHIPS",function(a,b){"use strict";return a(b+"/:id/:action",{},{create:{method:"POST"},query:{method:"GET",isArray:!0},update:{method:"PUT",params:{id:"@id"}},remove:{method:"DELETE",params:{id:"@id"}}})}]),angular.module("portainer.rest").factory("Template",["$resource","API_ENDPOINT_TEMPLATES",function(a,b){return a(b,{},{get:{method:"GET",isArray:!0}})}]),angular.module("portainer.rest").factory("Users",["$resource","API_ENDPOINT_USERS",function(a,b){"use strict";return a(b+"/:id/:entity/:entityId",{},{create:{method:"POST"},query:{method:"GET",isArray:!0},get:{method:"GET",params:{id:"@id"}},update:{method:"PUT",params:{id:"@id"}},remove:{method:"DELETE",params:{id:"@id"}},queryMemberships:{method:"GET",isArray:!0,params:{id:"@id",entity:"memberships"}},checkPassword:{method:"POST",params:{id:"@id",entity:"passwd"}},checkAdminUser:{method:"GET",params:{id:"admin",entity:"check"},isArray:!0},initAdminUser:{method:"POST",params:{id:"admin",entity:"init"}}})}]),angular.module("portainer.rest").factory("Container",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(a,b,c){"use strict";return a(b+"/:endpointId/docker/containers/:id/:action",{name:"@name",endpointId:c.endpointID},{query:{method:"GET",params:{all:0,action:"json",filters:"@filters"},isArray:!0},get:{method:"GET",params:{action:"json"}},stop:{method:"POST",params:{id:"@id",t:5,action:"stop"}},restart:{method:"POST",params:{id:"@id",t:5,action:"restart"}},kill:{method:"POST",params:{id:"@id",action:"kill"}},pause:{method:"POST",params:{id:"@id",action:"pause"}},unpause:{method:"POST",params:{id:"@id",action:"unpause"}},stats:{method:"GET",params:{id:"@id",stream:!1,action:"stats"},timeout:5e3},start:{method:"POST",params:{id:"@id",action:"start"},transformResponse:genericHandler},create:{method:"POST",params:{action:"create"},transformResponse:genericHandler},remove:{method:"DELETE",params:{id:"@id",v:"@v",force:"@force"},transformResponse:genericHandler},rename:{method:"POST",params:{id:"@id",action:"rename",name:"@name"},transformResponse:genericHandler},exec:{method:"POST",params:{id:"@id",action:"exec"},transformResponse:genericHandler}})}]),angular.module("portainer.rest").factory("ContainerCommit",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(a,b,c){"use strict";return a(b+"/:endpointId/docker/commit",{endpointId:c.endpointID},{commit:{method:"POST",params:{container:"@id",repo:"@repo",tag:"@tag"}}})}]),angular.module("portainer.rest").factory("ContainerLogs",["$http","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(a,b,c){"use strict";return{get:function(d,e,f){a({method:"GET",url:b+"/"+c.endpointID()+"/docker/containers/"+d+"/logs",params:{stdout:e.stdout||0,stderr:e.stderr||0,timestamps:e.timestamps||0,tail:e.tail||"all"}}).success(f).error(function(a,b,c,d){console.log(a)})}}}]),angular.module("portainer.rest").factory("ContainerTop",["$http","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(a,b,c){"use strict";return{get:function(d,e,f,g){a({method:"GET",url:b+"/"+c.endpointID()+"/docker/containers/"+d+"/top",params:{ps_args:e.ps_args}}).success(f).error(function(a,b,c,d){console.log(a)})}}}]),angular.module("portainer.rest").factory("Exec",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(a,b,c){"use strict";return a(b+"/:endpointId/docker/exec/:id/:action",{endpointId:c.endpointID},{resize:{method:"POST",params:{id:"@id",action:"resize",h:"@height",w:"@width"},transformResponse:genericHandler}})}]),angular.module("portainer.rest").factory("Image",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider","HttpRequestHelper",function(a,b,c,d){"use strict";return a(b+"/:endpointId/docker/images/:id/:action",{endpointId:c.endpointID},{query:{method:"GET",params:{all:0,action:"json"},isArray:!0},get:{method:"GET",params:{action:"json"}},search:{method:"GET",params:{action:"search"}},history:{method:"GET",params:{action:"history"},isArray:!0},insert:{method:"POST",params:{id:"@id",action:"insert"}},tag:{method:"POST",params:{id:"@id",action:"tag",force:0,repo:"@repo",tag:"@tag"}},inspect:{method:"GET",params:{id:"@id",action:"json"}},push:{method:"POST",params:{action:"push",id:"@tag"},isArray:!0,transformResponse:jsonObjectsToArrayHandler,headers:{"X-Registry-Auth":d.registryAuthenticationHeader}},create:{method:"POST",params:{action:"create",fromImage:"@fromImage",tag:"@tag"},isArray:!0,transformResponse:jsonObjectsToArrayHandler,headers:{"X-Registry-Auth":d.registryAuthenticationHeader}},remove:{method:"DELETE",params:{id:"@id",force:"@force"},isArray:!0,transformResponse:deleteImageHandler}})}]),angular.module("portainer.rest").factory("Network",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(a,b,c){"use strict";return a(b+"/:endpointId/docker/networks/:id/:action",{id:"@id",endpointId:c.endpointID},{query:{method:"GET",isArray:!0},get:{method:"GET"},create:{method:"POST",params:{action:"create"},transformResponse:genericHandler},remove:{method:"DELETE",transformResponse:genericHandler},connect:{method:"POST",params:{action:"connect"}},disconnect:{method:"POST",params:{action:"disconnect"}}})}]),angular.module("portainer.rest").factory("Node",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(a,b,c){"use strict";return a(b+"/:endpointId/docker/nodes/:id/:action",{endpointId:c.endpointID},{query:{method:"GET",isArray:!0},get:{method:"GET",params:{id:"@id"}},update:{method:"POST",params:{id:"@id",action:"update",version:"@version"}},remove:{method:"DELETE",params:{id:"@id"}}})}]),angular.module("portainer.rest").factory("Plugin",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(a,b,c){"use strict";return a(b+"/:endpointId/docker/plugins/:id/:action",{endpointId:c.endpointID},{query:{method:"GET",isArray:!0}})}]),angular.module("portainer.rest").factory("Secret",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(a,b,c){"use strict";return a(b+"/:endpointId/docker/secrets/:id/:action",{endpointId:c.endpointID},{get:{method:"GET",params:{id:"@id"}},query:{method:"GET",isArray:!0},create:{method:"POST",params:{action:"create"}},remove:{method:"DELETE",params:{id:"@id"}}})}]),
angular.module("portainer.rest").factory("Service",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider","HttpRequestHelper",function(a,b,c,d){"use strict";return a(b+"/:endpointId/docker/services/:id/:action",{endpointId:c.endpointID},{get:{method:"GET",params:{id:"@id"}},query:{method:"GET",isArray:!0},create:{method:"POST",params:{action:"create"},headers:{"X-Registry-Auth":d.registryAuthenticationHeader}},update:{method:"POST",params:{id:"@id",action:"update",version:"@version"}},remove:{method:"DELETE",params:{id:"@id"}}})}]),angular.module("portainer.rest").factory("ServiceLogs",["$http","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(a,b,c){"use strict";return{get:function(d,e,f){a({method:"GET",url:b+"/"+c.endpointID()+"/docker/services/"+d+"/logs",params:{stdout:e.stdout||0,stderr:e.stderr||0,timestamps:e.timestamps||0,tail:e.tail||"all"}}).success(f).error(function(a,b,c,d){console.log(a)})}}}]),angular.module("portainer.rest").factory("Swarm",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(a,b,c){"use strict";return a(b+"/:endpointId/docker/swarm",{endpointId:c.endpointID},{get:{method:"GET"}})}]),angular.module("portainer.rest").factory("System",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(a,b,c){"use strict";return a(b+"/:endpointId/docker/:action/:subAction",{name:"@name",endpointId:c.endpointID},{info:{method:"GET",params:{action:"info"}},version:{method:"GET",params:{action:"version"}},events:{method:"GET",params:{action:"events",since:"@since",until:"@until"},isArray:!0,transformResponse:jsonObjectsToArrayHandler},auth:{method:"POST",params:{action:"auth"}},dataUsage:{method:"GET",params:{action:"system",subAction:"df"}}})}]),angular.module("portainer.rest").factory("Task",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(a,b,c){"use strict";return a(b+"/:endpointId/docker/tasks/:id",{endpointId:c.endpointID},{get:{method:"GET",params:{id:"@id"}},query:{method:"GET",isArray:!0,params:{filters:"@filters"}}})}]),angular.module("portainer.rest").factory("Volume",["$resource","API_ENDPOINT_ENDPOINTS","EndpointProvider",function(a,b,c){"use strict";return a(b+"/:endpointId/docker/volumes/:id/:action",{endpointId:c.endpointID},{query:{method:"GET"},get:{method:"GET",params:{id:"@id"}},create:{method:"POST",params:{action:"create"},transformResponse:genericHandler},remove:{method:"DELETE",transformResponse:genericHandler,params:{id:"@id"}}})}]),angular.module("portainer.services").factory("AccessService",["$q","UserService","TeamService",function(a,b,c){"use strict";function d(a,b,c,d){var e=[],f=[];return angular.forEach(a,function(a){_.includes(c,a.Id)?f.push(a):e.push(a)}),angular.forEach(b,function(a){_.includes(d,a.Id)?f.push(a):e.push(a)}),{accesses:e,authorizedAccesses:f}}var e={};return e.accesses=function(e,f){var g=a.defer();return a.all({users:b.users(!1),teams:c.teams()}).then(function(a){var b=a.users.map(function(a){return new UserAccessViewModel(a)}),c=a.teams.map(function(a){return new TeamAccessViewModel(a)}),h=d(b,c,e,f);g.resolve(h)}).catch(function(a){g.reject({msg:"Unable to retrieve users and teams",err:a})}),g.promise},e}]),angular.module("portainer.services").factory("DockerHubService",["$q","DockerHub",function(a,b){"use strict";var c={};return c.dockerhub=function(){var c=a.defer();return b.get().$promise.then(function(a){var b=new DockerHubViewModel(a);c.resolve(b)}).catch(function(a){c.reject({msg:"Unable to retrieve DockerHub details",err:a})}),c.promise},c.update=function(a){return b.update({},a).$promise},c}]),angular.module("portainer.services").factory("EndpointService",["$q","Endpoints","FileUploadService",function(a,b,c){"use strict";var d={};return d.endpoint=function(a){return b.get({id:a}).$promise},d.endpoints=function(){return b.query({}).$promise},d.updateAccess=function(a,c,d){return b.updateAccess({id:a},{authorizedUsers:c,authorizedTeams:d}).$promise},d.updateEndpoint=function(d,e){var f={name:e.name,PublicURL:e.PublicURL,TLS:e.TLS,authorizedUsers:e.authorizedUsers};e.type&&e.URL&&(f.URL="local"===e.type?"unix://"+e.URL:"tcp://"+e.URL);var g=a.defer();return c.uploadTLSFilesForEndpoint(d,e.TLSCACert,e.TLSCert,e.TLSKey).then(function(){return g.notify({upload:!1}),b.update({id:d},f).$promise}).then(function(a){g.resolve(a)}).catch(function(a){g.notify({upload:!1}),g.reject({msg:"Unable to update endpoint",err:a})}),g.promise},d.deleteEndpoint=function(a){return b.remove({id:a}).$promise},d.createLocalEndpoint=function(a,c,d,e){var f={Name:"local",URL:"unix:///var/run/docker.sock",TLS:!1};return b.create({},f).$promise},d.createRemoteEndpoint=function(d,e,f,g,h,i,j){var k={Name:d,URL:"tcp://"+e,PublicURL:f,TLS:g},l=a.defer();return b.create({},k).$promise.then(function(a){var b=a.Id;g?(l.notify({upload:!0}),c.uploadTLSFilesForEndpoint(b,h,i,j).then(function(){l.notify({upload:!1}),l.resolve(a)})):l.resolve(a)}).catch(function(a){l.notify({upload:!1}),l.reject({msg:"Unable to upload TLS certs",err:a})}),l.promise},d}]),angular.module("portainer.services").factory("RegistryService",["$q","Registries","DockerHubService","RegistryHelper","ImageHelper",function(a,b,c,d,e){"use strict";var f={};return f.registries=function(){var c=a.defer();return b.query().$promise.then(function(a){var b=a.map(function(a){return new RegistryViewModel(a)});c.resolve(b)}).catch(function(a){c.reject({msg:"Unable to retrieve registries",err:a})}),c.promise},f.registry=function(c){var d=a.defer();return b.get({id:c}).$promise.then(function(a){var b=new RegistryViewModel(a);d.resolve(b)}).catch(function(a){d.reject({msg:"Unable to retrieve registry details",err:a})}),d.promise},f.encodedCredentials=function(a){var b={username:a.Username,password:a.Password,serveraddress:a.URL};return btoa(JSON.stringify(b))},f.updateAccess=function(a,c,d){return b.updateAccess({id:a},{authorizedUsers:c,authorizedTeams:d}).$promise},f.deleteRegistry=function(a){return b.remove({id:a}).$promise},f.updateRegistry=function(a){return b.update({id:a.Id},a).$promise},f.createRegistry=function(a,c,d,e,f){var g={Name:a,URL:c,Authentication:d};return d&&(g.Username=e,g.Password=f),b.create({},g).$promise},f.retrieveRegistryFromRepository=function(b){var g=a.defer(),h=e.extractImageAndRegistryFromRepository(b);return a.when(h.registry?f.registries():c.dockerhub()).then(function(a){var b=a;h.registry&&(b=d.getRegistryByURL(a,h.registry)),g.resolve(b)}).catch(function(a){g.reject({msg:"Unable to retrieve the registry associated to the repository",err:a})}),g.promise},f}]),angular.module("portainer.services").factory("ResourceControlService",["$q","ResourceControl","UserService","TeamService","ResourceControlHelper",function(a,b,c,d,e){"use strict";var f={};return f.createResourceControl=function(a,c,d,e,f,g){var h={Type:f,AdministratorsOnly:a,ResourceID:e,Users:c,Teams:d,SubResourceIDs:g};return b.create({},h).$promise},f.deleteResourceControl=function(a){return b.remove({id:a}).$promise},f.updateResourceControl=function(a,c,d,e){var f={AdministratorsOnly:a,Users:c,Teams:d};return b.update({id:e},f).$promise},f.applyResourceControl=function(a,b,c,d,e){if(d.AccessControlEnabled){var g=[],h=[],i=!1;switch(d.Ownership){case"administrators":i=!0;break;case"private":g.push(c);break;case"restricted":angular.forEach(d.AuthorizedUsers,function(a){g.push(a.Id)}),angular.forEach(d.AuthorizedTeams,function(a){h.push(a.Id)})}return f.createResourceControl(i,g,h,b,a,e)}},f.applyResourceControlChange=function(a,b,c,d){return c?"public"===d.ownership?f.deleteResourceControl(c.Id):f.updateResourceControl(d.administratorsOnly,d.authorizedUserIds,d.authorizedTeamIds,c.Id):f.createResourceControl(d.administratorsOnly,d.authorizedUserIds,d.authorizedTeamIds,b,a)},f.retrieveOwnershipDetails=function(b){var f=a.defer();return b?(a.all({users:b.UserAccesses.length>0?c.users(!1):[],teams:b.TeamAccesses.length>0?d.teams():[]}).then(function(a){var c=e.retrieveAuthorizedUsers(b,a.users),d=e.retrieveAuthorizedTeams(b,a.teams);f.resolve({authorizedUsers:c,authorizedTeams:d})}).catch(function(a){f.reject({msg:"Unable to retrieve user and team information",err:a})}),f.promise):(f.resolve({authorizedUsers:[],authorizedTeams:[]}),f.promise)},f.retrieveUserPermissionsOnResource=function(b,d,f){var g=a.defer();if(!f||d)return g.resolve({isPartOfRestrictedUsers:!1,isLeaderOfAnyRestrictedTeams:!1}),g.promise;if(_.find(f.UserAccesses,{UserId:b}))g.resolve({isPartOfRestrictedUsers:!0,isLeaderOfAnyRestrictedTeams:!1});else{var h=!1;c.userMemberships(b).then(function(a){var b=a;h=e.isLeaderOfAnyRestrictedTeams(b,f),g.resolve({isPartOfRestrictedUsers:!1,isLeaderOfAnyRestrictedTeams:h})}).catch(function(a){g.reject({msg:"Unable to retrieve user memberships",err:a})})}return g.promise},f}]),angular.module("portainer.services").factory("SettingsService",["$q","Settings",function(a,b){"use strict";var c={};return c.settings=function(){var c=a.defer();return b.get().$promise.then(function(a){var b=new SettingsViewModel(a);c.resolve(b)}).catch(function(a){c.reject({msg:"Unable to retrieve application settings",err:a})}),c.promise},c.update=function(a){return b.update({},a).$promise},c.publicSettings=function(){var c=a.defer();return b.publicSettings().$promise.then(function(a){var b=new SettingsViewModel(a);c.resolve(b)}).catch(function(a){c.reject({msg:"Unable to retrieve application settings",err:a})}),c.promise},c.checkLDAPConnectivity=function(a){return b.checkLDAPConnectivity({},a).$promise},c}]),angular.module("portainer.services").factory("StatusService",["$q","Status",function(a,b){"use strict";var c={};return c.status=function(){var c=a.defer();return b.get().$promise.then(function(a){var b=new StatusViewModel(a);c.resolve(b)}).catch(function(a){c.reject({msg:"Unable to retrieve application status",err:a})}),c.promise},c}]),angular.module("portainer.services").factory("TeamMembershipService",["$q","TeamMemberships",function(a,b){"use strict";var c={};return c.memberships=function(){var c=a.defer();return b.query().$promise.then(function(a){var b=a.map(function(a){return new TeamMembershipModel(a)});c.resolve(b)}).catch(function(a){c.reject({msg:"Unable to retrieve team memberships",err:a})}),c.promise},c.createMembership=function(a,c,d){var e={UserID:a,TeamID:c,Role:d};return b.create({},e).$promise},c.deleteMembership=function(a){return b.remove({id:a}).$promise},c.updateMembership=function(a,c,d,e){var f={UserID:c,TeamID:d,Role:e};return b.update({id:a},f).$promise},c}]),angular.module("portainer.services").factory("TeamService",["$q","Teams","TeamMembershipService",function(a,b,c){"use strict";var d={};return d.teams=function(){var c=a.defer();return b.query().$promise.then(function(a){var b=a.map(function(a){return new TeamViewModel(a)});c.resolve(b)}).catch(function(a){c.reject({msg:"Unable to retrieve teams",err:a})}),c.promise},d.team=function(c){var d=a.defer();return b.get({id:c}).$promise.then(function(a){var b=new TeamViewModel(a);d.resolve(b)}).catch(function(a){d.reject({msg:"Unable to retrieve team details",err:a})}),d.promise},d.createTeam=function(d,e){var f=a.defer(),g={Name:d};return b.create({},g).$promise.then(function(b){var d=b.Id,g=[];angular.forEach(e,function(a){g.push(c.createMembership(a,d,1))}),a.all(g).then(function(){f.resolve()})}).catch(function(a){f.reject({msg:"Unable to create team",err:a})}),f.promise},d.deleteTeam=function(a){return b.remove({id:a}).$promise},d.updateTeam=function(a,c,d,e){var f={Name:c};return b.update({id:a},f).$promise},d.userMemberships=function(c){var d=a.defer();return b.queryMemberships({id:c}).$promise.then(function(a){var b=a.map(function(a){return new TeamMembershipModel(a)});d.resolve(b)}).catch(function(a){d.reject({msg:"Unable to retrieve user memberships for the team",err:a})}),d.promise},d}]),angular.module("portainer.services").factory("UserService",["$q","Users","UserHelper","TeamService","TeamMembershipService",function(a,b,c,d,e){"use strict";var f={};return f.users=function(d){var e=a.defer();return b.query({}).$promise.then(function(a){var b=a.map(function(a){return new UserViewModel(a)});d||(b=c.filterNonAdministratorUsers(b)),e.resolve(b)}).catch(function(a){e.reject({msg:"Unable to retrieve users",err:a})}),e.promise},f.user=function(c){var d=a.defer();return b.get({id:c}).$promise.then(function(a){var b=new UserViewModel(a);d.resolve(b)}).catch(function(a){d.reject({msg:"Unable to retrieve user details",err:a})}),d.promise},f.createUser=function(c,d,f,g){var h=a.defer();return b.create({},{username:c,password:d,role:f}).$promise.then(function(b){var c=b.Id,d=[];angular.forEach(g,function(a){d.push(e.createMembership(c,a,2))}),a.all(d).then(function(){h.resolve()})}).catch(function(a){h.reject({msg:"Unable to create user",err:a})}),h.promise},f.deleteUser=function(a){return b.remove({id:a}).$promise},f.updateUser=function(a,c,d){var e={password:c,role:d};return b.update({id:a},e).$promise},f.updateUserPassword=function(c,d,e){var g=a.defer();return b.checkPassword({id:c},{password:d}).$promise.then(function(a){if(a.valid)return f.updateUser(c,e,void 0);g.reject({invalidPassword:!0})}).then(function(a){g.resolve()}).catch(function(a){g.reject({msg:"Unable to update user password",err:a})}),g.promise},f.userMemberships=function(c){var d=a.defer();return b.queryMemberships({id:c}).$promise.then(function(a){var b=a.map(function(a){return new TeamMembershipModel(a)});d.resolve(b)}).catch(function(a){d.reject({msg:"Unable to retrieve user memberships",err:a})}),d.promise},f.userLeadingTeams=function(b){var c=a.defer();return a.all({teams:d.teams(),memberships:f.userMemberships(b)}).then(function(a){var b=a.memberships,d=a.teams.filter(function(a){var c=_.find(b,{TeamId:a.Id});if(c&&1===c.Role)return a});c.resolve(d)}).catch(function(a){c.reject({msg:"Unable to retrieve user teams",err:a})}),c.promise},f.initAdministrator=function(a,c){return b.initAdminUser({Username:a,Password:c}).$promise},f.administratorExists=function(){var c=a.defer();return b.checkAdminUser({}).$promise.then(function(a){c.resolve(!0)}).catch(function(a){404===a.status&&c.resolve(!1),c.reject({msg:"Unable to verify administrator account existence",err:a})}),c.promise},f}]),angular.module("portainer.services").factory("Authentication",["$q","Auth","jwtHelper","LocalStorage","StateManager","EndpointProvider",function(a,b,c,d,e,f){"use strict";var g={};return{init:function(){var a=d.getJWT();if(a){var b=c.decodeToken(a);g.username=b.username,g.ID=b.id,g.role=b.role}},login:function(e,f){return a(function(a,h){b.login({username:e,password:f}).$promise.then(function(b){d.storeJWT(b.jwt);var f=c.decodeToken(b.jwt);g.username=e,g.ID=f.id,g.role=f.role,a()},function(){h()})})},logout:function(){e.clean(),f.clean(),d.clean()},isAuthenticated:function(){var a=d.getJWT();return a&&!c.isTokenExpired(a)},getUserDetails:function(){return g}}}]),angular.module("portainer.services").factory("ContainerService",["$q","Container","ResourceControlService",function(a,b,c){"use strict";var d={};return d.containers=function(c){var d=a.defer();return b.query({all:c}).$promise.then(function(a){var b=a;d.resolve(b)}).catch(function(a){d.reject({msg:"Unable to retriever containers",err:a})}),d.promise},d.createContainer=function(c){var d=a.defer();return b.create(c).$promise.then(function(a){a.message?d.reject({msg:a.message}):d.resolve(a)}).catch(function(a){d.reject({msg:"Unable to create container",err:a})}),d.promise},d.startContainer=function(c){var d=a.defer();return b.start({id:c},{}).$promise.then(function(a){a.message?d.reject({msg:a.message}):d.resolve(a)}).catch(function(a){d.reject({msg:"Unable to start container",err:a})}),d.promise},d.createAndStartContainer=function(b){var c,e=a.defer();return d.createContainer(b).then(function(a){return c=a.Id,d.startContainer(c)}).then(function(){e.resolve({Id:c})}).catch(function(a){e.reject(a)}),e.promise},d.remove=function(d,e){var f=a.defer();return b.remove({id:d.Id,v:e?1:0,force:!0}).$promise.then(function(a){if(a.message&&f.reject({msg:a.message,err:a.message}),d.ResourceControl&&1===d.ResourceControl.Type)return c.deleteResourceControl(d.ResourceControl.Id)}).then(function(){f.resolve()}).catch(function(a){f.reject({msg:"Unable to remove container",err:a})}),f.promise},d.createExec=function(c){var d=a.defer();return b.exec(c).$promise.then(function(a){a.message?d.reject({msg:a.message,err:a.message}):d.resolve(a)}).catch(function(a){d.reject(a)}),d.promise},d}]),angular.module("portainer.services").factory("ExecService",["$q","$timeout","Exec",function(a,b,c){"use strict";var d={};return d.resizeTTY=function(d,e,f,g){var h=a.defer();return b(function(){c.resize({id:d,height:e,width:f}).$promise.then(function(a){a.message?h.reject({msg:"Unable to exec into container",err:a.message}):h.resolve(a)}).catch(function(a){h.reject({msg:"Unable to exec into container",err:a})})},g),h.promise},d}]),angular.module("portainer.services").factory("ImageService",["$q","Image","ImageHelper","RegistryService","HttpRequestHelper","ContainerService",function(a,b,c,d,e,f){"use strict";function g(c){var d=a.defer();return b.create({},c).$promise.finally(function(){d.resolve()}),d.promise}function h(c){var d=a.defer();return b.create({},c).$promise.then(function(a){if(a.length>0&&a[a.length-1].hasOwnProperty("message")){var b=a[a.length-1];d.reject({msg:b.message})}else d.resolve(a)}).catch(function(a){d.reject({msg:"Unable to pull image",err:a})}),d.promise}var i={};return i.image=function(c){var d=a.defer();return b.get({id:c}).$promise.then(function(a){if(a.message)d.reject({msg:a.message});else{var b=new ImageDetailsViewModel(a);d.resolve(b)}}).catch(function(a){d.reject({msg:"Unable to retrieve image details",err:a})}),d.promise},i.images=function(c){var d=a.defer();return a.all({containers:c?f.containers(1):[],images:b.query({}).$promise}).then(function(a){var b=a.containers,c=a.images.map(function(a){a.ContainerCount=0;for(var c=0;c<b.length;c++){b[c].ImageID===a.Id&&a.ContainerCount++}return new ImageViewModel(a)});d.resolve(c)}).catch(function(a){d.reject({msg:"Unable to retrieve images",err:a})}),d.promise},i.history=function(c){var d=a.defer();return b.history({id:c}).$promise.then(function(a){if(a.message)d.reject({msg:a.message});else{var b=[];angular.forEach(a,function(a){b.push(new ImageLayerViewModel(a))}),d.resolve(b)}}).catch(function(a){d.reject({msg:"Unable to retrieve image details",err:a})}),d.promise},i.pushImage=function(c,f){var g=a.defer(),h=f.Authentication?d.encodedCredentials(f):"";return e.setRegistryAuthenticationHeader(h),b.push({tag:c}).$promise.then(function(a){a[a.length-1].error?g.reject({msg:a[a.length-1].error}):g.resolve()}).catch(function(a){g.reject({msg:"Unable to push image tag",err:a})}),g.promise},i.pullImage=function(a,b,f){var i=c.extractImageAndRegistryFromRepository(a),j=c.createImageConfigForContainer(i.image,b.URL),k=b.Authentication?d.encodedCredentials(b):"";return e.setRegistryAuthenticationHeader(k),f?g(j):h(j)},i.tagImage=function(a,d,e){var f=c.createImageConfigForCommit(d,e);return b.tag({id:a,tag:f.tag,repo:f.repo}).$promise},i.deleteImage=function(c,d){var e=a.defer();return b.remove({id:c,force:d}).$promise.then(function(a){a[0].message?e.reject({msg:a[0].message}):e.resolve()}).catch(function(a){e.reject({msg:"Unable to remove image",err:a})}),e.promise},i}]),angular.module("portainer.services").factory("NetworkService",["$q","Network",function(a,b){"use strict";var c={};return c.networks=function(c,d,e,f){var g=a.defer();return b.query({}).$promise.then(function(a){var b=a,h=b.filter(function(a){return c&&"local"===a.Scope?a:d&&"swarm"===a.Scope?a:e&&"swarm"===a.Scope&&!0===a.Attachable?a:f&&"global"===a.Scope?a:void 0});g.resolve(h)}).catch(function(a){g.reject({msg:"Unable to retrieve networks",err:a})}),g.promise},c}]),angular.module("portainer.services").factory("NodeService",["$q","Node",function(a,b){"use strict";var c={};return c.nodes=function(c){var d=a.defer();return b.query({}).$promise.then(function(a){var b=a.map(function(a){return new NodeViewModel(a)});d.resolve(b)}).catch(function(a){d.reject({msg:"Unable to retrieve nodes",err:a})}),d.promise},c}]),angular.module("portainer.services").factory("PluginService",["$q","Plugin","SystemService",function(a,b,c){"use strict";var d={};return d.plugins=function(){var c=a.defer();return b.query({}).$promise.then(function(a){var b=a.map(function(a){return new PluginViewModel(a)});c.resolve(b)}).catch(function(a){c.reject({msg:"Unable to retrieve plugins",err:a})}),c.promise},d.volumePlugins=function(b){var e=a.defer();return a.all({system:c.plugins(),plugins:b?[]:d.plugins()}).then(function(a){var b=[],c=a.system,d=a.plugins;c.Volume&&(b=b.concat(c.Volume));for(var f=0;f<d.length;f++){var g=d[f];g.Enabled&&_.includes(g.Config.Interface.Types,"docker.volumedriver/1.0")&&b.push(g.Name)}e.resolve(b)}).catch(function(a){e.reject({msg:a.msg,err:a})}),e.promise},d}]),angular.module("portainer.services").factory("SecretService",["$q","Secret",function(a,b){"use strict";var c={};return c.secret=function(c){var d=a.defer();return b.get({id:c}).$promise.then(function(a){var b=new SecretViewModel(a);d.resolve(b)}).catch(function(a){d.reject({msg:"Unable to retrieve secret details",err:a})}),d.promise},c.secrets=function(){var c=a.defer();return b.query({}).$promise.then(function(a){var b=a.map(function(a){return new SecretViewModel(a)});c.resolve(b)}).catch(function(a){c.reject({msg:"Unable to retrieve secrets",err:a})}),c.promise},c.remove=function(c){var d=a.defer();return b.remove({id:c}).$promise.then(function(a){a.message?d.reject({msg:a.message}):d.resolve()}).catch(function(a){d.reject({msg:"Unable to remove secret",err:a})}),d.promise},c.create=function(a){return b.create(a).$promise},c}]),angular.module("portainer.services").factory("ServiceService",["$q","Service","ResourceControlService",function(a,b,c){"use strict";var d={};return d.service=function(c){var d=a.defer();return b.get({id:c}).$promise.then(function(a){var b=new ServiceViewModel(a);d.resolve(b)}).catch(function(a){d.reject({msg:"Unable to retrieve service details",err:a})}),d.promise},d.remove=function(d){var e=a.defer();return b.remove({id:d.Id}).$promise.then(function(){if(d.ResourceControl&&2===d.ResourceControl.Type)return c.deleteResourceControl(d.ResourceControl.Id)}).then(function(){e.resolve()}).catch(function(a){e.reject({msg:"Unable to remove service",err:a})}),e.promise},d}]),angular.module("portainer.services").factory("SystemService",["$q","System",function(a,b){"use strict";var c={};return c.plugins=function(){var c=a.defer();return b.info({}).$promise.then(function(a){var b=a.Plugins;c.resolve(b)}).catch(function(a){c.reject({msg:"Unable to retrieve plugins information from system",err:a})}),c.promise},c.info=function(){return b.info({}).$promise},c.version=function(){return b.version({}).$promise},c.events=function(c,d){var e=a.defer();return b.events({since:c,until:d}).$promise.then(function(a){var b=a.map(function(a){return new EventViewModel(a)});e.resolve(b)}).catch(function(a){e.reject({msg:"Unable to retrieve engine events",err:a})}),e.promise},c.dataUsage=function(){return b.dataUsage().$promise},c}]),angular.module("portainer.services").factory("TaskService",["$q","Task",function(a,b){"use strict";var c={};return c.task=function(c){var d=a.defer();return b.get({id:c}).$promise.then(function(a){var b=new TaskViewModel(a);d.resolve(b)}).catch(function(a){d.reject({msg:"Unable to retrieve task details",err:a})}),d.promise},c.serviceTasks=function(c){var d=a.defer();return b.query({filters:{service:[c]}}).$promise.then(function(a){var b=a.map(function(a){return new TaskViewModel(a)});d.resolve(b)}).catch(function(a){d.reject({msg:"Unable to retrieve tasks associated to the service",err:a})}),d.promise},c}]),angular.module("portainer.services").factory("VolumeService",["$q","Volume","VolumeHelper","ResourceControlService","UserService","TeamService",function(a,b,c,d,e,f){"use strict";var g={};return g.volumes=function(c){var d=a.defer();return b.query(c).$promise.then(function(a){var b=a.Volumes||[];b=b.map(function(a){return new VolumeViewModel(a)}),d.resolve(b)}).catch(function(a){d.reject({msg:"Unable to retrieve volumes",err:a})}),d.promise},g.volume=function(c){var d=a.defer();return b.get({id:c}).$promise.then(function(a){var b=new VolumeViewModel(a);d.resolve(b)}).catch(function(a){d.reject({msg:"Unable to retrieve volume details",err:a})}),d.promise},g.getVolumes=function(){return b.query({}).$promise},g.remove=function(c){var e=a.defer();return b.remove({id:c.Id}).$promise.then(function(a){if(a.message&&e.reject({msg:a.message,err:a.message}),c.ResourceControl&&3===c.ResourceControl.Type)return d.deleteResourceControl(c.ResourceControl.Id)}).then(function(){e.resolve()}).catch(function(a){e.reject({msg:"Unable to remove volume",err:a})}),e.promise},g.createVolumeConfiguration=function(a,b,d){return{Name:a,Driver:b,DriverOpts:c.createDriverOptions(d)}},g.createVolume=function(c){var d=a.defer();return b.create(c).$promise.then(function(a){if(a.message)d.reject({msg:a.message});else{var b=new VolumeViewModel(a);d.resolve(b)}}).catch(function(a){d.reject({msg:"Unable to create volume",err:a})}),d.promise},g.createVolumes=function(b){var c=b.map(function(a){return g.createVolume(a)});return a.all(c)},g.createXAutoGeneratedLocalVolumes=function(b){for(var c=[],d=0;d<b;d++)c.push(g.createVolume({Driver:"local"}));return a.all(c)},g}]),angular.module("portainer.services").factory("EndpointProvider",["LocalStorage",function(a){"use strict";var b={},c={};return b.initialize=function(){var b=a.getEndpointID(),d=a.getEndpointPublicURL();b&&(c.ID=b),d&&(c.PublicURL=d)},b.clean=function(){c={}},b.endpointID=function(){return c.ID},b.setEndpointID=function(b){c.ID=b,a.storeEndpointID(b)},b.endpointPublicURL=function(){return c.PublicURL},b.setEndpointPublicURL=function(b){c.PublicURL=b,a.storeEndpointPublicURL(b)},b}]),angular.module("portainer.services").factory("EntityListService",[function(){"use strict";return{rememberPreviousSelection:function(a,b,c){var d=_.find(a,function(a){return a.Id===b.Id});d&&d.Checked&&(b.Checked=!0,c(b))}}}]),angular.module("portainer.services").factory("FileUploadService",["$q","Upload",function(a,b){"use strict";function c(a,c){return b.upload({url:a,data:{file:c}})}var d={};return d.uploadLDAPTLSFiles=function(b,d,e){var f=[];return b&&f.push(c("api/upload/tls/ca?folder=ldap",b)),d&&f.push(c("api/upload/tls/cert?folder=ldap",d)),e&&f.push(c("api/upload/tls/key?folder=ldap",e)),a.all(f)},d.uploadTLSFilesForEndpoint=function(b,d,e,f){var g=[];return d&&g.push(c("api/upload/tls/ca?folder="+b,d)),e&&g.push(c("api/upload/tls/cert?folder="+b,e)),f&&g.push(c("api/upload/tls/key?folder="+b,f)),a.all(g)},d}]),angular.module("portainer.services").factory("FormValidator",[function(){"use strict";var a={};return a.validateAccessControl=function(a,b){return a.AccessControlEnabled?b&&"restricted"===a.Ownership&&0===a.AuthorizedUsers.length&&0===a.AuthorizedTeams.length?"You must specify at least one team or user.":b||"restricted"!==a.Ownership||0!==a.AuthorizedTeams.length?"":"You must specify at least a team.":""},a}]),angular.module("portainer.services").factory("HttpRequestHelper",[function(){"use strict";var a={},b={};return a.registryAuthenticationHeader=function(){return b.registryAuthentication},a.setRegistryAuthenticationHeader=function(a){b.registryAuthentication=a},a}]),angular.module("portainer.services").factory("languageSwitch",["$translate",function(a){return{T:function(b){return b?a.instant(b):b}}}]),angular.module("portainer.services").factory("LineChart",[function(){"use strict";return{build:function(a,b,c){for(var d=new Chart($(a).get(0).getContext("2d")),e={},f=0;f<b.length;f++){var g=b[f],h=c(g),i=e[h];void 0===i&&(i=0),i+=1,e[h]=i}var j=[];b=[];var k=Object.keys(e),l=1;for(f=k.length-1;f>-1;f--){var m=k[f];j.push(m),b.push(e[m]),e[m]>l&&(l=e[m])}var n=Math.min(l,10),o={fillColor:"rgba(151,187,205,0.5)",strokeColor:"rgba(151,187,205,1)",pointColor:"rgba(151,187,205,1)",pointStrokeColor:"#fff",data:b};d.Line({labels:j,datasets:[o]},{scaleStepWidth:Math.ceil(l/n),pointDotRadius:1,scaleIntegersOnly:!0,scaleOverride:!0,scaleSteps:n})}}}]),angular.module("portainer.services").factory("LocalStorage",["localStorageService",function(a){"use strict";return{storeEndpointID:function(b){a.set("ENDPOINT_ID",b)},getEndpointID:function(){return a.get("ENDPOINT_ID")},storeEndpointPublicURL:function(b){a.set("ENDPOINT_PUBLIC_URL",b)},getEndpointPublicURL:function(){return a.get("ENDPOINT_PUBLIC_URL")},storeEndpointState:function(b){a.set("ENDPOINT_STATE",b)},getEndpointState:function(){return a.get("ENDPOINT_STATE")},storeApplicationState:function(b){a.set("APPLICATION_STATE",b)},getApplicationState:function(){return a.get("APPLICATION_STATE")},storeJWT:function(b){a.set("JWT",b)},getJWT:function(){return a.get("JWT")},deleteJWT:function(){a.remove("JWT")},storePaginationCount:function(b,c){a.cookie.set("pagination_"+b,c)},getPaginationCount:function(b){return a.cookie.get("pagination_"+b)},clean:function(){a.clearAll()}}}]),angular.module("portainer.services").factory("ModalService",[function(){"use strict";var a={},b=function(a){a.css({top:"50%","margin-top":function(){return-a.height()/2}})},c=function(a){return{confirm:{label:a.buttons.confirm.label,className:a.buttons.confirm.className},cancel:{label:a.buttons.cancel&&a.buttons.cancel.label?a.buttons.cancel.label:"Cancel"}}};return a.confirm=function(a){var d=bootbox.confirm({title:a.title,message:a.message,buttons:c(a),callback:a.callback});b(d)},a.prompt=function(a){var d=bootbox.prompt({title:a.title,inputType:a.inputType,inputOptions:a.inputOptions,buttons:c(a),callback:a.callback});b(d)},a.customPrompt=function(a){var d=bootbox.prompt({title:a.title,inputType:a.inputType,inputOptions:a.inputOptions,buttons:c(a),callback:a.callback});b(d),d.find(".bootbox-body").prepend("<p>"+a.message+"</p>"),d.find(".bootbox-input-checkbox").prop("checked",!0)},a.confirmAccessControlUpdate=function(b,c){a.confirm({title:"Are you sure ?",message:"Changing the ownership of this resource will potentially restrict its management to some users.",buttons:{confirm:{label:"Change ownership",className:"btn-primary"}},callback:b})},a.confirmImageForceRemoval=function(b){a.confirm({title:"Are you sure?",message:"Forcing the removal of the image will remove the image even if it has multiple tags or if it is used by stopped containers.",buttons:{confirm:{label:"Remove the image",className:"btn-danger"}},callback:b})},a.confirmDeletion=function(b,c){a.confirm({title:"Are you sure ?",message:b,buttons:{confirm:{label:"Remove",className:"btn-danger"}},callback:c})},a.confirmContainerDeletion=function(b,c){a.prompt({title:b,inputType:"checkbox",inputOptions:[{text:"Automatically remove non-persistent volumes<i></i>",value:"1"}],buttons:{confirm:{label:"Remove",className:"btn-danger"}},callback:c})},a.confirmContainerRecreation=function(b){a.customPrompt({title:"Are you sure?",message:"You're about to re-create this container, any non-persisted data will be lost. This container will be removed and another one will be created using the same configuration.",inputType:"checkbox",inputOptions:[{text:"Pull latest image<i></i>",value:"1"}],buttons:{confirm:{label:"Recreate",className:"btn-danger"}},callback:b})},a.confirmExperimentalFeature=function(b){a.confirm({title:"Experimental feature",message:"This feature is currently experimental, please use with caution.",buttons:{confirm:{label:"Continue",className:"btn-danger"}},callback:b})},a}]),angular.module("portainer.services").factory("Notifications",["$sanitize",function(a){"use strict";var b={};return b.success=function(b,c){toastr.success(a(c),a(b))},b.error=function(b,c,d){var e=d
;c.data&&c.data.message?e=c.data.message:c.message?e=c.message:c.data&&c.data.length>0&&c.data[0].message?e=c.data[0].message:c.err&&c.err.data&&c.err.data.length>0&&c.err.data[0].message?e=c.err.data[0].message:c.msg?e=c.msg:c.data&&c.data.err&&(e=c.data.err),toastr.error(a(e),a(b),{timeOut:6e3})},b}]),angular.module("portainer.services").factory("Pagination",["LocalStorage","PAGINATION_MAX_ITEMS",function(a,b){"use strict";return{getPaginationCount:function(c){var d=a.getPaginationCount(c),e=b;return null!==d&&(e=d),""+e},setPaginationCount:function(b,c){a.storePaginationCount(b,c)}}}]),angular.module("portainer.services").factory("StateManager",["$q","SystemService","InfoHelper","LocalStorage","SettingsService","StatusService",function(a,b,c,d,e,f){"use strict";var g={},h={loading:!0,application:{},endpoint:{},UI:{}};return g.getState=function(){return h},g.clean=function(){h.endpoint={}},g.updateLogo=function(a){h.application.logo=a,d.storeApplicationState(h.application)},g.updateExternalContributions=function(a){h.application.displayExternalContributors=a,d.storeApplicationState(h.application)},g.initialize=function(){var b=a.defer(),c=d.getEndpointState();c&&(h.endpoint=c);var g=d.getApplicationState();return g?(h.application=g,h.loading=!1,b.resolve(h)):a.all({settings:e.publicSettings(),status:f.status()}).then(function(a){var c=a.status,e=a.settings;h.application.authentication=c.Authentication,h.application.analytics=c.Analytics,h.application.endpointManagement=c.EndpointManagement,h.application.version=c.Version,h.application.logo=e.LogoURL,h.application.displayExternalContributors=e.DisplayExternalContributors,d.storeApplicationState(h.application),b.resolve(h)}).catch(function(a){b.reject({msg:"Unable to retrieve server settings and status",err:a})}).finally(function(){h.loading=!1}),b.promise},g.updateEndpointState=function(e){var f=a.defer();return e&&(h.loading=!0),a.all({info:b.info(),version:b.version()}).then(function(a){var b=c.determineEndpointMode(a.info),e=parseFloat(a.version.ApiVersion);h.endpoint.mode=b,h.endpoint.apiVersion=e,d.storeEndpointState(h.endpoint),f.resolve()}).catch(function(a){f.reject({msg:"Unable to connect to the Docker endpoint",err:a})}).finally(function(){h.loading=!1}),f.promise},g}]),angular.module("portainer.services").factory("TemplateService",["$q","Template","TemplateHelper","ImageHelper","ContainerHelper",function(a,b,c,d,e){"use strict";var f={};return f.getTemplates=function(d){var e=a.defer();return b.get({key:d}).$promise.then(function(a){var b=a.map(function(a,b){var c;return c="linuxserver.io"===d?new TemplateLSIOViewModel(a):new TemplateViewModel(a),c.index=b,c});"linuxserver.io"===d&&(b=c.filterLinuxServerIOTemplates(b)),e.resolve(b)}).catch(function(a){e.reject({msg:"Unable to retrieve templates",err:a})}),e.promise},f.createTemplateConfiguration=function(a,b,c,e){var g=d.createImageConfigForContainer(a.Image,a.Registry),h=f.createContainerConfiguration(a,b,c,e);return h.Image=g.fromImage+":"+g.tag,h},f.createContainerConfiguration=function(a,b,d,f){var g=c.getDefaultContainerConfiguration();g.HostConfig.NetworkMode=d.Name,g.HostConfig.Privileged=a.Privileged,g.HostConfig.RestartPolicy={Name:a.RestartPolicy},g.name=b,g.Hostname=b,g.Image=a.Image,g.Env=c.EnvToStringArray(a.Env,f),g.Cmd=e.commandStringToArray(a.Command);var h=c.portArrayToPortConfiguration(a.Ports);g.HostConfig.PortBindings=h.bindings,g.ExposedPorts=h.exposedPorts;var i=c.getConsoleConfiguration(a.Interactive);return g.OpenStdin=i.openStdin,g.Tty=i.tty,g},f.updateContainerConfigurationWithVolumes=function(a,b,d){var e=b.Volumes;c.createVolumeBindings(e,d),e.forEach(function(b){b.binding&&(a.Volumes[b.containerPath]={},a.HostConfig.Binds.push(b.binding))})},f}]),angular.module("portainer.templates",["app/components/auth/auth.html","app/components/container/container.html","app/components/containerConsole/containerConsole.html","app/components/containerLogs/containerlogs.html","app/components/containers/containers.html","app/components/createContainer/createcontainer.html","app/components/createNetwork/createnetwork.html","app/components/createRegistry/createregistry.html","app/components/createSecret/createsecret.html","app/components/createService/createservice.html","app/components/createService/includes/placement.html","app/components/createService/includes/secret.html","app/components/createVolume/createvolume.html","app/components/dashboard/dashboard.html","app/components/docker/docker.html","app/components/endpoint/endpoint.html","app/components/endpointAccess/endpointAccess.html","app/components/endpoints/endpoints.html","app/components/events/events.html","app/components/image/image.html","app/components/images/images.html","app/components/initAdmin/initAdmin.html","app/components/initEndpoint/initEndpoint.html","app/components/network/network.html","app/components/networks/networks.html","app/components/node/node.html","app/components/registries/registries.html","app/components/registry/registry.html","app/components/registryAccess/registryAccess.html","app/components/secret/secret.html","app/components/secrets/secrets.html","app/components/service/includes/constraints.html","app/components/service/includes/container-specs.html","app/components/service/includes/containerlabels.html","app/components/service/includes/environmentvariables.html","app/components/service/includes/mounts.html","app/components/service/includes/networks.html","app/components/service/includes/placementPreferences.html","app/components/service/includes/ports.html","app/components/service/includes/resources.html","app/components/service/includes/restart.html","app/components/service/includes/secrets.html","app/components/service/includes/servicelabels.html","app/components/service/includes/tasks.html","app/components/service/includes/updateconfig.html","app/components/service/service.html","app/components/serviceLogs/servicelogs.html","app/components/services/services.html","app/components/settings/settings.html","app/components/settingsAuthentication/settingsAuthentication.html","app/components/sidebar/sidebar.html","app/components/stats/stats.html","app/components/swarm/swarm.html","app/components/task/task.html","app/components/team/team.html","app/components/teams/teams.html","app/components/templates/templates.html","app/components/user/user.html","app/components/userSettings/userSettings.html","app/components/users/users.html","app/components/volume/volume.html","app/components/volumes/volumes.html","app/directives/accessControlForm/porAccessControlForm.html","app/directives/accessControlPanel/porAccessControlPanel.html","app/directives/accessManagement/porAccessManagement.html","app/directives/imageRegistry/porImageRegistry.html"]),angular.module("app/components/auth/auth.html",[]).run(["$templateCache",function(a){a.put("app/components/auth/auth.html",'<div class="page-wrapper">\n  \x3c!-- login box --\x3e\n  <div class="container simple-box">\n    <div class="col-sm-6 col-sm-offset-3">\n      \x3c!-- login box logo --\x3e\n      <div class="row">\n        <img ng-if="!logo" src="images/logo_alt.png" class="simple-box-logo" alt="Portainer">\n        <img ng-if="logo" ng-src="{{ logo }}" class="simple-box-logo">\n      </div>\n      \x3c!-- !login box logo --\x3e\n      \x3c!-- login panel --\x3e\n      <div class="panel panel-default">\n        <div class="panel-body">\n          \x3c!-- login form --\x3e\n          <form class="simple-box-form form-horizontal">\n            \x3c!-- username input --\x3e\n            <div class="input-group">\n              <span class="input-group-addon"><i class="fa fa-user" aria-hidden="true"></i></span>\n              <input id="username" type="text" class="form-control" name="username" ng-model="formValues.Username" placeholder="admin" autofocus>\n            </div>\n            \x3c!-- !username input --\x3e\n            \x3c!-- password input --\x3e\n            <div class="input-group">\n              <span class="input-group-addon"><i class="fa fa-lock" aria-hidden="true"></i></span>\n              <input id="password" type="password" class="form-control" name="password" ng-model="formValues.Password">\n            </div>\n              <select class="language-switching" ng-controller="LanguageSwitchingCtrl" ng-model="cur_lang"        ng-change="switching(cur_lang)">\n                  <option value="en">English</option>\n                  <option value="cn">简体中文</option>\n              </select>\n            \x3c!-- !password input --\x3e\n            \x3c!-- login button --\x3e\n            <div class="form-group">\n              <div class="col-sm-12">\n                <button type="submit" class="btn btn-primary btn-sm pull-right" ng-click="authenticateUser()"><i class="fa fa-sign-in" aria-hidden="true"></i> Login</button>\n                <span class="pull-left" style="margin: 5px;" ng-if="state.AuthenticationError">\n                  <i class="fa fa-exclamation-triangle red-icon" aria-hidden="true" style="margin-right: 2px;"></i>\n                  <span class="small text-danger">{{ state.AuthenticationError }}</span>\n                </span>\n              </div>\n            </div>\n            \x3c!-- !login button --\x3e\n          </form>\n          \x3c!-- !login form --\x3e\n        </div>\n      </div>\n      \x3c!-- !login panel --\x3e\n    </div>\n  </div>\n  \x3c!-- !login box --\x3e\n</div>\n')}]),angular.module("app/components/container/container.html",[]).run(["$templateCache",function(a){a.put("app/components/container/container.html",'<rd-header>\n  <rd-header-title title="Container details">\n    <i id="loadingViewSpinner" class="fa fa-cog fa-spin"></i>\n  </rd-header-title>\n  <rd-header-content>\n    <a ui-sref="containers">Containers</a> &gt; <a ui-sref="container({id: container.Id})">{{ container.Name|trimcontainername }}</a>\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-cogs" title="Actions"></rd-widget-header>\n      <rd-widget-body classes="padding">\n        <div class="btn-group" role="group" aria-label="...">\n          <button class="btn btn-success" ng-click="start()" ng-disabled="container.State.Running"><i class="fa fa-play space-right" aria-hidden="true"></i>Start</button>\n          <button class="btn btn-danger" ng-click="stop()" ng-disabled="!container.State.Running"><i class="fa fa-stop space-right" aria-hidden="true"></i>Stop</button>\n          <button class="btn btn-danger" ng-click="kill()" ng-disabled="!container.State.Running"><i class="fa fa-bomb space-right" aria-hidden="true"></i>Kill</button>\n          <button class="btn btn-primary" ng-click="restart()" ng-disabled="!container.State.Running"><i class="fa fa-refresh space-right" aria-hidden="true"></i>Restart</button>\n          <button class="btn btn-primary" ng-click="pause()" ng-disabled="!container.State.Running || container.State.Paused"><i class="fa fa-pause space-right" aria-hidden="true"></i>Pause</button>\n          <button class="btn btn-primary" ng-click="unpause()" ng-disabled="!container.State.Paused"><i class="fa fa-play space-right" aria-hidden="true"></i>Resume</button>\n          <button class="btn btn-danger" ng-click="confirmRemove()"><i class="fa fa-trash space-right" aria-hidden="true"></i>Remove</button>\n          <button class="btn btn-danger" ng-click="recreate()" ng-if="!container.Config.Labels[\'com.docker.swarm.service.id\']"><i class="fa fa-refresh space-right" aria-hidden="true"></i>Recreate</button>\n          <button class="btn btn-primary" ng-click="duplicate()" ng-if="!container.Config.Labels[\'com.docker.swarm.service.id\']"><i class="fa fa-files-o space-right" aria-hidden="true"></i>Duplicate/Edit</button>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-server" title="Container status"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>ID</td>\n              <td>{{ container.Id }}</td>\n            </tr>\n            <tr>\n              <td>Name</td>\n              <td ng-if="!container.edit">\n                {{ container.Name|trimcontainername }}\n                <a href="" data-toggle="tooltip" title="Edit container name" ng-click="container.edit = true;"><i class="fa fa-edit"></i></a>\n              </td>\n              <td ng-if="container.edit">\n                <form ng-submit="renameContainer()">\n                  <input type="text" class="containerNameInput" ng-model="container.newContainerName">\n                  <a href="" ng-click="container.edit = false;"><i class="fa fa-times"></i></a>\n                  <a href="" ng-click="renameContainer()"><i class="fa fa-check-square-o"></i></a>\n                </form>\n              </td>\n            </tr>\n            <tr ng-if="container.NetworkSettings.IPAddress">\n              <td>IP address</td>\n              <td>{{ container.NetworkSettings.IPAddress }}</td>\n            </tr>\n            <tr>\n              <td>Status</td>\n              <td>\n                <i class="fa fa-heartbeat space-right green-icon" ng-if="container.State.Running"></i>\n                <i class="fa fa-heartbeat space-right red-icon" ng-if="!container.State.Running && container.State.Status !== \'created\'"></i>\n                {{ container.State|getstatetext }} since {{ activityTime }}<span ng-if="!container.State.Running && container.State.Status !== \'created\'"> with exit code {{ container.State.ExitCode }}</span>\n              </td>\n            </tr>\n            <tr>\n              <td>Created</td>\n              <td>{{ container.Created|getisodate }}</td>\n            </tr>\n            <tr ng-if="container.State.Running">\n              <td>Start time</td>\n              <td>{{ container.State.StartedAt|getisodate }}</td>\n            </tr>\n            <tr ng-if="!container.State.Running && container.State.Status !== \'created\'">\n              <td>Finished</td>\n              <td>{{ container.State.FinishedAt|getisodate }}</td>\n            </tr>\n            <tr>\n              <td colspan="2">\n                <div class="btn-group" role="group" aria-label="...">\n                  <a class="btn btn-outline-secondary" type="button" ui-sref="stats({id: container.Id})"><i class="fa fa-area-chart space-right" aria-hidden="true"></i>Stats</a>\n                  <a class="btn btn-outline-secondary" type="button" ui-sref="containerlogs({id: container.Id})"><i class="fa fa-exclamation-circle space-right" aria-hidden="true"></i>Logs</a>\n                  <a class="btn btn-outline-secondary" type="button" ui-sref="console({id: container.Id})"><i class="fa fa-terminal space-right" aria-hidden="true"></i>Console</a>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n\x3c!-- access-control-panel --\x3e\n<por-access-control-panel\n  ng-if="container && applicationState.application.authentication"\n  resource-id="container.Id"\n  resource-control="container.ResourceControl"\n  resource-type="\'container\'">\n</por-access-control-panel>\n\x3c!-- !access-control-panel --\x3e\n\n<div ng-if="container.State.Health" class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-server" title="Container health"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>Status</td>\n              <td>\n                <i ng-class="{\'healthy\': \'fa fa-heartbeat space-right green-icon\', \'unhealthy\': \'fa fa-heartbeat space-right red-icon\', \'starting\': \'fa fa-heartbeat space-right orange-icon\'}[container.State.Health.Status]"></i>\n                {{ container.State.Health.Status }}\n              </td>\n            </tr>\n            <tr>\n              <td>Failure count</td>\n              <td>{{ container.State.Health.FailingStreak }}</td>\n            </tr>\n            <tr>\n              <td>Last output</td>\n              <td>{{ container.State.Health.Log[container.State.Health.Log.length - 1].Output }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-clone" title="Create image"></rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          \x3c!-- tag-description --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <span class="small text-muted">\n                You can create an image from this container, this allows you to backup important data or save\n                helpful configurations. You\'ll be able to spin up another container based on this image afterward.\n              </span>\n            </div>\n          </div>\n          \x3c!-- !tag-description --\x3e\n          \x3c!-- image-and-registry --\x3e\n          <div class="form-group">\n            <por-image-registry image="config.Image" registry="config.Registry"></por-image-registry>\n          </div>\n          \x3c!-- !image-and-registry --\x3e\n          \x3c!-- tag-note --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <span class="small text-muted">Note: if you don\'t specify the tag in the image name, <span class="label label-default">latest</span> will be used.</span>\n            </div>\n          </div>\n          \x3c!-- !tag-note --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-disabled="!config.Image" ng-click="commit()">Create</button>\n              <i id="createImageSpinner" class="fa fa-cog fa-spin" style="margin-left: 5px; display: none;"></i>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-server" title="Container details"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>Image</td>\n              <td><a ui-sref="image({id: container.Image})">{{ container.Image }}</a></td>\n            </tr>\n            <tr ng-if="portBindings.length > 0">\n              <td>Port configuration</td>\n              <td>\n                <div ng-repeat="portMapping in portBindings">\n                  {{ portMapping.container }} <i class="fa fa-long-arrow-right"></i> {{ portMapping.host }}\n                </div>\n              </td>\n            </tr>\n            <tr>\n              <td>CMD</td>\n              <td><code>{{ container.Config.Cmd|command }}</code></td>\n            </tr>\n            <tr>\n              <td>ENV</td>\n              <td>\n                <table class="table table-bordered table-condensed">\n                  <tr ng-repeat="var in container.Config.Env track by $index">\n                    <td>{{ var|key: \'=\' }}</td>\n                    <td>{{ var|value: \'=\' }}</td>\n                  </tr>\n                </table>\n              </td>\n            </tr>\n            <tr ng-if="!(container.Config.Labels | emptyobject)">\n              <td>Labels</td>\n              <td>\n                <table class="table table-bordered table-condensed">\n                  <tr ng-repeat="(k, v) in container.Config.Labels">\n                    <td>{{ k }}</td>\n                    <td>{{ v }}</td>\n                  </tr>\n                </table>\n              </td>\n            </tr>\n            <tr ng-if="container.HostConfig.RestartPolicy.Name !== \'no\'">\n              <td>Restart policies</td>\n              <td>\n                <table class="table table-bordered table-condensed">\n                  <tr>\n                    <td class="col-md-3">Name</td>\n                    <td>{{ container.HostConfig.RestartPolicy.Name }}</td>\n                  </tr>\n                  <tr>\n                    <td class="col-md-3">MaximumRetryCount</td>\n                    <td>\n                      {{ container.HostConfig.RestartPolicy.MaximumRetryCount }}\n                    </td>\n                  </tr>\n                </table>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row" ng-if="container.HostConfig.Binds.length > 0">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-cubes" title="Volumes"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <thead>\n            <tr>\n              <th>Host</th>\n              <th>Container</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr ng-repeat="vol in container.HostConfig.Binds">\n              <td>{{ vol|key: \':\' }}</td>\n              <td>{{ vol|value: \':\' }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-sitemap" title="Connected networks">\n        <div class="pull-right">\n          Items per page:\n          <select ng-model="state.pagination_count" ng-change="changePaginationCount()">\n            <option value="0">All</option>\n            <option value="10">10</option>\n            <option value="25">25</option>\n            <option value="50">50</option>\n            <option value="100">100</option>\n          </select>\n        </div>\n      </rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <thead>\n            <th>Network Name</th>\n            <th>IP Address</th>\n            <th>Gateway</th>\n            <th>MacAddress</th>\n            <th>Actions</th>\n          </thead>\n          <tbody>\n            <tr dir-paginate="(key, value) in container.NetworkSettings.Networks | itemsPerPage: state.pagination_count">\n              <td><a ui-sref="network({id: value.NetworkID})">{{ key }}</a></td>\n              <td>{{ value.IPAddress || \'-\' }}</td>\n              <td>{{ value.Gateway || \'-\' }}</td>\n              <td>{{ value.MacAddress || \'-\' }}</td>\n              <td>\n                <button type="button" class="btn btn-xs btn-danger" ng-click="containerLeaveNetwork(container, value.NetworkID)"><i class="fa fa-trash space-right" aria-hidden="true"></i>Leave Network</button>\n              </td>\n            </tr>\n            <tr ng-if="(container.NetworkSettings.Networks | emptyobject)">\n              <td colspan="5" class="text-center text-muted">No networks connected.</td>\n            </tr>\n          </tbody>\n        </table>\n        <div class="pagination-controls">\n          <dir-pagination-controls></dir-pagination-controls>\n        </div>\n        <hr />\n        <form class="form-horizontal">\n          \x3c!-- network-input --\x3e\n          <div class="row">\n            <label for="container_network" class="col-sm-3 col-lg-2 control-label text-left">Join a Network</label>\n            <div class="col-sm-5 col-lg-4">\n              <select class="form-control" ng-model="selectedNetwork" id="container_network">\n                <option selected disabled hidden value="">Select a network</option>\n                <option ng-repeat="net in availableNetworks" ng-value="net.Id">{{ net.Name }}</option>\n              </select>\n            </div>\n            <div class="col-sm-1">\n              <button type="button" class="btn btn-primary btn-sm" ng-disabled="!selectedNetwork" ng-click="containerJoinNetwork(container, selectedNetwork)">Join Network</button>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),angular.module("app/components/containerConsole/containerConsole.html",[]).run(["$templateCache",function(a){a.put("app/components/containerConsole/containerConsole.html",'<rd-header>\n  <rd-header-title title="Container console">\n    <i id="loadingViewSpinner" class="fa fa-cog fa-spin"></i>\n  </rd-header-title>\n  <rd-header-content ng-if="state.loaded">\n    <a ui-sref="containers">Containers</a> &gt; <a ui-sref="container({id: container.Id})">{{ container.Name|trimcontainername }}</a> &gt; Console\n  </rd-header-content>\n</rd-header>\n\n<div class="row" ng-if="state.loaded">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-terminal" title="Console">\n        <div class="pull-right">\n          <i id="loadConsoleSpinner" class="fa fa-cog fa-2x fa-spin" style="margin-top: 5px; display: none;"></i>\n        </div>\n      </rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          <div ng-if="!state.connected">\n            \x3c!-- command-list --\x3e\n              <div class="form-group">\n                <label for="command" class="col-lg-1 text-left col-sm-2 control-label">Command</label>\n                <div class="col-lg-11 col-sm-10">\n                  <div class="input-group" ng-if="!formValues.isCustomCommand">\n                    <span class="input-group-addon">\n                      <i class="fa fa-linux" aria-hidden="true" ng-if="imageOS == \'linux\'"></i>\n                      <i class="fa fa-windows" aria-hidden="true" ng-if="imageOS == \'windows\'"></i>\n                    </span>\n                    <select class="form-control" ng-model="formValues.command" id="command">\n                      <option value="bash" ng-if="imageOS == \'linux\'">/bin/bash</option>\n                      <option value="sh" ng-if="imageOS == \'linux\'">/bin/sh</option>\n                      <option value="powershell" ng-if="imageOS == \'windows\'">powershell</option>\n                      <option value="cmd.exe" ng-if="imageOS == \'windows\'">cmd.exe</option>\n                    </select>\n                  </div>\n                  <input class="form-control" ng-if="formValues.isCustomCommand" type="text" name="custom-command" ng-model="formValues.customCommand" placeholder="e.g. ps aux">\n                </div>\n              </div>\n            \x3c!-- !command-list --\x3e\n            <div class="form-group col-lg-12">\n              <label for="command" class="text-left control-label">Use custom command</label>\n              <label class="switch" style="margin-left: 20px;">\n                <input type="checkbox" ng-model="formValues.isCustomCommand"><i></i>\n              </label>\n            </div>\n            <div class="form-group">\n              <label for="username" class="col-lg-1 text-left col-sm-2 control-label">\n                User\n                <portainer-tooltip position="bottom" message="Format is one of: user, user:group, uid or uid:gid"></portainer-tooltip>\n              </label>\n              <div class="col-lg-11 col-sm-10">\n                <input class="form-control" type="text" name="username" ng-model="formValues.user" placeholder="root">\n              </div>\n            </div>\n            <div class="form-group">\n              <div class="col-lg-offset-1 col-sm-offset-2 col-lg-11 col-sm-10">\n                <button type="button" class="btn btn-primary" ng-click="connect()">Connect</button>\n              </div>\n            </div>\n          </div>\n          <div ng-if="state.connected">\n            <label>Exec into container as <code>{{ ::formValues.user || \'default user\' }}</code> using command <code>{{ formValues.isCustomCommand ? formValues.customCommand : formValues.command }}</code></label>\n            <button type="button" class="btn btn-default" ng-click="disconnect()">Disconnect</button>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <div id="terminal-container" class="terminal-container"></div>\n  </div>\n</div>\n')}]),angular.module("app/components/containerLogs/containerlogs.html",[]).run(["$templateCache",function(a){a.put("app/components/containerLogs/containerlogs.html",'<rd-header>\n  <rd-header-title title="Container logs">\n      <i id="loadingViewSpinner" class="fa fa-cog fa-spin"></i>\n  </rd-header-title>\n  <rd-header-content>\n    <a ui-sref="containers">Containers</a> &gt; <a ui-sref="container({id: container.Id})">{{ container.Name|trimcontainername }}</a> &gt; Logs\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-body>\n        <div class="widget-icon grey pull-left">\n          <i class="fa fa-server"></i>\n        </div>\n        <div class="title">{{ container.Name|trimcontainername }}</div>\n        <div class="comment">Name</div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-info-circle" title="Stdout logs"></rd-widget-header>\n      <rd-widget-taskbar>\n        <input type="checkbox" ng-model="state.displayTimestampsOut" id="displayAllTsOut" ng-change="toggleTimestampsOut()"/>\n        <label for="displayAllTsOut">Display timestamps</label>\n      </rd-widget-taskbar>\n      <rd-widget-body classes="no-padding">\n        <div class="panel-body">\n          <pre id="stdoutLog" class="pre-scrollable pre-x-scrollable">{{stdout}}</pre>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-exclamation-triangle" title="Stderr logs"></rd-widget-header>\n      <rd-widget-taskbar>\n        <input type="checkbox" ng-model="state.displayTimestampsErr" id="displayAllTsErr" ng-change="toggleTimestampsErr()"/>\n        <label for="displayAllTsErr">Display timestamps</label>\n      </rd-widget-taskbar>\n      <rd-widget-body classes="no-padding">\n        <div class="panel-body">\n          <pre id="stderrLog" class="pre-scrollable pre-x-scrollable">{{stderr}}</pre>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),angular.module("app/components/containers/containers.html",[]).run(["$templateCache",function(a){
a.put("app/components/containers/containers.html",'<rd-header>\n  <rd-header-title title="Container list">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="containers" ui-sref-opts="{reload: true}">\n      <i class="fa fa-refresh" aria-hidden="true"></i>\n    </a>\n    <i id="loadContainersSpinner" class="fa fa-cog fa-spin" style="margin-left: 5px;"></i>\n  </rd-header-title>\n  <rd-header-content>Containers</rd-header-content>\n</rd-header>\n\n<div class="col-lg-12">\n  <rd-widget>\n    <rd-widget-header icon="fa-server" title="Containers">\n      <div class="pull-right">\n        Items per page:\n        <select ng-model="state.pagination_count" ng-change="changePaginationCount()">\n          <option value="0">All</option>\n          <option value="10">10</option>\n          <option value="25">25</option>\n          <option value="50">50</option>\n          <option value="100">100</option>\n        </select>\n      </div>\n    </rd-widget-header>\n    <rd-widget-taskbar classes="col-lg-12">\n      <div class="pull-left">\n        <div class="btn-group" role="group" aria-label="...">\n          <button type="button" class="btn btn-success btn-responsive" ng-click="startAction()" ng-disabled="!state.selectedItemCount || state.noStoppedItemsSelected"><i class="fa fa-play space-right" aria-hidden="true"></i>Start</button>\n          <button type="button" class="btn btn-danger btn-responsive" ng-click="stopAction()" ng-disabled="!state.selectedItemCount || state.noRunningItemsSelected"><i class="fa fa-stop space-right" aria-hidden="true"></i>Stop</button>\n          <button type="button" class="btn btn-danger btn-responsive" ng-click="killAction()" ng-disabled="!state.selectedItemCount"><i class="fa fa-bomb space-right" aria-hidden="true"></i>Kill</button>\n          <button type="button" class="btn btn-primary btn-responsive" ng-click="restartAction()" ng-disabled="!state.selectedItemCount"><i class="fa fa-refresh space-right" aria-hidden="true"></i>Restart</button>\n          <button type="button" class="btn btn-primary btn-responsive" ng-click="pauseAction()" ng-disabled="!state.selectedItemCount || state.noRunningItemsSelected"><i class="fa fa-pause space-right" aria-hidden="true"></i>Pause</button>\n          <button type="button" class="btn btn-primary btn-responsive" ng-click="unpauseAction()" ng-disabled="!state.selectedItemCount || state.noPausedItemsSelected"><i class="fa fa-play space-right" aria-hidden="true"></i>Resume</button>\n          <button type="button" class="btn btn-danger btn-responsive" ng-click="confirmRemoveAction()" ng-disabled="!state.selectedItemCount"><i class="fa fa-trash space-right" aria-hidden="true"></i>Remove</button>\n        </div>\n        <a class="btn btn-primary" type="button" ui-sref="actions.create.container"><i class="fa fa-plus space-right" aria-hidden="true"></i>Add container</a>\n      </div>\n      <div class="pull-right">\n        <input type="checkbox" ng-model="state.displayAll" id="displayAll" ng-change="toggleGetAll()" style="margin-top: -2px; margin-right: 5px;"/><label for="displayAll">Show all containers</label>\n        <input type="text" id="filter" ng-model="state.filter" placeholder="Filter..." class="form-control input-sm" />\n      </div>\n    </rd-widget-taskbar>\n    <rd-widget-body classes="no-padding">\n      <div class="table-responsive">\n        <table class="table table-hover">\n          <thead>\n            <tr>\n              <th>\n                <input type="checkbox" ng-model="allSelected" ng-change="selectItems(allSelected)" />\n              </th>\n              <th>\n                <a ui-sref="containers" ng-click="order(\'Status\')">\n                  State\n                  <span ng-show="sortType == \'Status\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                  <span ng-show="sortType == \'Status\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                </a>\n              </th>\n              <th>\n                <a ui-sref="containers" ng-click="order(\'Names\')">\n                  Name\n                  <span ng-show="sortType == \'Names\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                  <span ng-show="sortType == \'Names\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                </a>\n              </th>\n              <th>\n                <a ui-sref="containers" ng-click="order(\'Image\')">\n                  Image\n                  <span ng-show="sortType == \'Image\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                  <span ng-show="sortType == \'Image\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                </a>\n              </th>\n              <th ng-if="state.displayIP">\n                <a ui-sref="containers" ng-click="order(\'IP\')">\n                  IP Address\n                  <span ng-show="sortType == \'IP\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                  <span ng-show="sortType == \'IP\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                </a>\n              </th>\n              <th ng-if="applicationState.endpoint.mode.provider === \'DOCKER_SWARM\'">\n                <a ui-sref="containers" ng-click="order(\'Host\')">\n                  Host IP\n                  <span ng-show="sortType == \'Host\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                  <span ng-show="sortType == \'Host\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                </a>\n              </th>\n              <th>\n                <a ui-sref="containers" ng-click="order(\'Ports\')">\n                  Published Ports\n                  <span ng-show="sortType == \'Ports\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                  <span ng-show="sortType == \'Ports\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                </a>\n              </th>\n              <th ng-if="applicationState.application.authentication">\n                <a ui-sref="containers" ng-click="order(\'ResourceControl.Ownership\')">\n                  Ownership\n                  <span ng-show="sortType == \'ResourceControl.Ownership\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                  <span ng-show="sortType == \'ResourceControl.Ownership\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr dir-paginate="container in (state.filteredContainers = ( containers | filter:state.filter | orderBy:sortType:sortReverse | itemsPerPage: state.pagination_count))">\n              <td><input type="checkbox" ng-model="container.Checked" ng-change="selectItem(container)"/></td>\n              <td>\n                <span ng-if="[\'starting\',\'healthy\',\'unhealthy\'].indexOf(container.Status) !== -1" class="label label-{{ container.Status|containerstatusbadge }} interactive" uib-tooltip="This container has a health check">{{ container.Status }}</span>\n                <span ng-if="[\'starting\',\'healthy\',\'unhealthy\'].indexOf(container.Status) === -1" class="label label-{{ container.Status|containerstatusbadge }}">{{ container.Status }}</span>\n              </td>\n              <td ng-if="applicationState.endpoint.mode.provider === \'DOCKER_SWARM\'"><a ui-sref="container({id: container.Id})">{{ container|swarmcontainername|truncate: 40}}</a></td>\n              <td ng-if="applicationState.endpoint.mode.provider !== \'DOCKER_SWARM\'"><a ui-sref="container({id: container.Id})">{{ container|containername|truncate: 40}}</a></td>\n              <td><a ui-sref="image({id: container.Image})">{{ container.Image | hideshasum }}</a></td>\n              <td ng-if="state.displayIP">{{ container.IP ? container.IP : \'-\' }}</td>\n              <td ng-if="applicationState.endpoint.mode.provider === \'DOCKER_SWARM\'">{{ container.hostIP }}</td>\n              <td>\n                <a ng-if="container.Ports.length > 0" ng-repeat="p in container.Ports" class="image-tag" ng-href="http://{{ PublicURL || p.host }}:{{p.public}}" target="_blank">\n                  <i class="fa fa-external-link" aria-hidden="true"></i> {{p.public}}:{{ p.private }}\n                </a>\n                <span ng-if="container.Ports.length == 0" >-</span>\n              </td>\n              <td ng-if="applicationState.application.authentication">\n                <span>\n                  <i ng-class="container.ResourceControl.Ownership | ownershipicon" aria-hidden="true"></i>\n                  {{ container.ResourceControl.Ownership ? container.ResourceControl.Ownership : container.ResourceControl.Ownership = \'public\' }}\n                </span>\n              </td>\n            </tr>\n            <tr ng-if="!containers">\n              <td colspan="9" class="text-center text-muted">Loading...</td>\n            </tr>\n            <tr ng-if="containers.length == 0">\n              <td colspan="9" class="text-center text-muted">No containers available.</td>\n            </tr>\n          </tbody>\n        </table>\n        <div ng-if="containers" class="pull-left pagination-controls">\n          <dir-pagination-controls></dir-pagination-controls>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),angular.module("app/components/createContainer/createcontainer.html",[]).run(["$templateCache",function(a){
a.put("app/components/createContainer/createcontainer.html",'<rd-header>\n  <rd-header-title title="Create container"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="containers">Containers</a> &gt; Add container\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="container_name" class="col-sm-1 control-label text-left">Name</label>\n            <div class="col-sm-11">\n              <input type="text" class="form-control" ng-model="config.name" id="container_name" placeholder="e.g. myContainer">\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          <div class="col-sm-12 form-section-title">\n            Image configuration\n          </div>\n          \x3c!-- image-and-registry --\x3e\n          <div class="form-group">\n            <por-image-registry image="config.Image" registry="formValues.Registry" ng-if="formValues.Registry"></por-image-registry>\n          </div>\n          \x3c!-- !image-and-registry --\x3e\n          \x3c!-- always-pull --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label for="ownership" class="control-label text-left">\n                Always pull the image\n                <portainer-tooltip position="bottom" message="When enabled, Portainer will automatically try to pull the specified image before creating the container."></portainer-tooltip>\n              </label>\n              <label class="switch" style="margin-left: 20px;">\n                <input type="checkbox" ng-model="formValues.alwaysPull"><i></i>\n              </label>\n            </div>\n          </div>\n          \x3c!-- !always-pull --\x3e\n          <div class="col-sm-12 form-section-title">\n            Ports configuration\n          </div>\n          \x3c!-- publish-exposed-ports --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label class="control-label text-left">\n                Publish all exposed ports\n                <portainer-tooltip position="bottom" message="When enabled, Portainer will let Docker automatically map a random port on the host to each one defined in the image Dockerfile."></portainer-tooltip>\n              </label>\n              <label class="switch" style="margin-left: 20px;">\n                <input type="checkbox" ng-model="config.HostConfig.PublishAllPorts"><i></i>\n              </label>\n            </div>\n          </div>\n          \x3c!-- !publish-exposed-ports --\x3e\n          \x3c!-- port-mapping --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label class="control-label text-left">Port mapping</label>\n              <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addPortBinding()">\n                <i class="fa fa-plus-circle" aria-hidden="true"></i> map additional port\n              </span>\n            </div>\n            \x3c!-- port-mapping-input-list --\x3e\n            <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n              <div ng-repeat="portBinding in config.HostConfig.PortBindings" style="margin-top: 2px;">\n                \x3c!-- host-port --\x3e\n                <div class="input-group col-sm-4 input-group-sm">\n                  <span class="input-group-addon">host</span>\n                  <input type="text" class="form-control" ng-model="portBinding.hostPort" placeholder="e.g. 80 or 1.2.3.4:80 (optional)">\n                </div>\n                \x3c!-- !host-port --\x3e\n                <span style="margin: 0 10px 0 10px;">\n                  <i class="fa fa-long-arrow-right" aria-hidden="true"></i>\n                </span>\n                \x3c!-- container-port --\x3e\n                <div class="input-group col-sm-4 input-group-sm">\n                  <span class="input-group-addon">container</span>\n                  <input type="text" class="form-control" ng-model="portBinding.containerPort" placeholder="e.g. 80">\n                </div>\n                \x3c!-- !container-port --\x3e\n                \x3c!-- protocol-actions --\x3e\n                <div class="input-group col-sm-3 input-group-sm">\n                  <div class="btn-group btn-group-sm">\n                    <label class="btn btn-primary" ng-model="portBinding.protocol" uib-btn-radio="\'tcp\'">TCP</label>\n                    <label class="btn btn-primary" ng-model="portBinding.protocol" uib-btn-radio="\'udp\'">UDP</label>\n                  </div>\n                  <button class="btn btn-sm btn-danger" type="button" ng-click="removePortBinding($index)">\n                    <i class="fa fa-trash" aria-hidden="true"></i>\n                  </button>\n                </div>\n                \x3c!-- !protocol-actions --\x3e\n              </div>\n            </div>\n            \x3c!-- !port-mapping-input-list --\x3e\n          </div>\n          \x3c!-- !port-mapping --\x3e\n          \x3c!-- access-control --\x3e\n          <por-access-control-form form-data="formValues.AccessControlData" resource-control="fromContainer.ResourceControl" ng-if="applicationState.application.authentication && fromContainer"></por-access-control-form>\n          \x3c!-- !access-control --\x3e\n          \x3c!-- actions --\x3e\n          <div class="col-sm-12 form-section-title">\n            Actions\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-disabled="!config.Image" ng-click="create()">Start container</button>\n              <a type="button" class="btn btn-default btn-sm" ui-sref="containers">Cancel</a>\n              <i id="createContainerSpinner" class="fa fa-cog fa-spin" style="margin-left: 5px; display: none;"></i>\n              <span class="text-danger" ng-if="state.formValidationError" style="margin-left: 5px;">{{ state.formValidationError }}</span>\n              <span ng-if="fromContainerMultipleNetworks" style="margin-left: 10px">\n                <i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\n                <span class="small text-muted" style="margin-left: 5px;">This container is connected to multiple networks, only one network will be kept at creation time.</span>\n              </span>\n            </div>\n          </div>\n          \x3c!-- !actions --\x3e\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-cog" title="Advanced container settings"></rd-widget-header>\n      <rd-widget-body>\n        <ul class="nav nav-pills nav-justified">\n          <li class="active interactive"><a data-target="#command" data-toggle="tab">Command</a></li>\n          <li class="interactive"><a data-target="#volumes" data-toggle="tab">Volumes</a></li>\n          <li class="interactive"><a data-target="#network" data-toggle="tab">Network</a></li>\n          <li class="interactive"><a data-target="#env" data-toggle="tab">Env</a></li>\n          <li class="interactive"><a data-target="#labels" data-toggle="tab">Labels</a></li>\n          <li class="interactive"><a data-target="#restart-policy" data-toggle="tab">Restart policy</a></li>\n          <li class="interactive"><a data-target="#runtime" data-toggle="tab">Runtime</a></li>\n        </ul>\n        \x3c!-- tab-content --\x3e\n        <div class="tab-content">\n          \x3c!-- tab-command --\x3e\n          <div class="tab-pane active" id="command">\n            <form class="form-horizontal" style="margin-top: 15px;">\n              \x3c!-- command-input --\x3e\n              <div class="form-group">\n                <label for="container_command" class="col-sm-2 col-lg-1 control-label text-left">Command</label>\n                <div class="col-sm-9">\n                  <input type="text" class="form-control" ng-model="config.Cmd" id="container_command" placeholder="e.g. /usr/bin/nginx -t -c /mynginx.conf">\n                </div>\n              </div>\n              \x3c!-- !command-input --\x3e\n              \x3c!-- entrypoint-input --\x3e\n              <div class="form-group">\n                <label for="container_entrypoint" class="col-sm-2 col-lg-1 control-label text-left">Entry Point</label>\n                <div class="col-sm-9">\n                  <input type="text" class="form-control" ng-model="config.Entrypoint" id="container_entrypoint" placeholder="e.g. /bin/sh -c">\n                </div>\n              </div>\n              \x3c!-- !entrypoint-input --\x3e\n              \x3c!-- workdir-user-input --\x3e\n              <div class="form-group">\n                <label for="container_workingdir" class="col-sm-2 col-lg-1 control-label text-left">Working Dir</label>\n                <div class="col-sm-4">\n                  <input type="text" class="form-control" ng-model="config.WorkingDir" id="container_workingdir" placeholder="e.g. /myapp">\n                </div>\n                <label for="container_user" class="col-sm-1 control-label text-left">User</label>\n                <div class="col-sm-4">\n                  <input type="text" class="form-control" ng-model="config.User" id="container_user" placeholder="e.g. nginx">\n                </div>\n              </div>\n              \x3c!-- !workdir-user-input --\x3e\n              \x3c!-- console --\x3e\n              <div class="form-group">\n                <label for="container_console" class="col-sm-2 col-lg-1 control-label text-left">Console</label>\n                <div class="col-sm-10 col-lg-11">\n                  <div class="col-sm-4">\n                    <label class="radio-inline">\n                      <input type="radio" name="container_console" ng-model="formValues.Console" value="both">\n                      Interactive & TTY <span class="small text-muted">(-i -t)</span>\n                    </label>\n                  </div>\n                  <div class="col-sm-4">\n                    <label class="radio-inline">\n                      <input type="radio" name="container_console" ng-model="formValues.Console" value="interactive">\n                      Interactive <span class="small text-muted">(-i)</span>\n                    </label>\n                  </div>\n                </div>\n                <div class="col-sm-offset-2 col-sm-10 col-lg-offset-1 col-lg-11">\n                  <div class="col-sm-4">\n                    <label class="radio-inline">\n                      <input type="radio" name="container_console" ng-model="formValues.Console" value="tty">\n                      TTY <span class="small text-muted">(-t)</span>\n                    </label>\n                  </div>\n                  <div class="col-sm-4">\n                    <label class="radio-inline">\n                      <input type="radio" name="container_console" ng-model="formValues.Console" value="none">\n                      None\n                    </label>\n                  </div>\n                </div>\n              </div>\n              \x3c!-- !console --\x3e\n            </form>\n          </div>\n          \x3c!-- !tab-command --\x3e\n          \x3c!-- tab-volume --\x3e\n          <div class="tab-pane" id="volumes">\n            <form class="form-horizontal" style="margin-top: 15px;">\n              \x3c!-- volumes --\x3e\n              <div class="form-group">\n                <div class="col-sm-12" style="margin-top: 5px;">\n                  <label class="control-label text-left">Volume mapping</label>\n                  <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addVolume()">\n                    <i class="fa fa-plus-circle" aria-hidden="true"></i> map additional volume\n                  </span>\n                </div>\n                \x3c!-- volumes-input-list --\x3e\n                <div class="form-inline" style="margin-top: 10px;">\n                  <div ng-repeat="volume in formValues.Volumes">\n                    \x3c!-- volume-line1 --\x3e\n                    <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                      \x3c!-- container-path --\x3e\n                      <div class="input-group input-group-sm col-sm-6">\n                        <span class="input-group-addon">container</span>\n                        <input type="text" class="form-control" ng-model="volume.containerPath" placeholder="e.g. /path/in/container">\n                      </div>\n                      \x3c!-- !container-path --\x3e\n                      \x3c!-- volume-type --\x3e\n                      <div class="input-group col-sm-5" style="margin-left: 5px;">\n                        <div class="btn-group btn-group-sm">\n                          <label class="btn btn-primary" ng-model="volume.type" uib-btn-radio="\'volume\'" ng-click="volume.name = \'\'">Volume</label>\n                          <label class="btn btn-primary" ng-model="volume.type" uib-btn-radio="\'bind\'" ng-click="volume.name = \'\'">Bind</label>\n                        </div>\n                        <button class="btn btn-sm btn-danger" type="button" ng-click="removeVolume($index)">\n                          <i class="fa fa-trash" aria-hidden="true"></i>\n                        </button>\n                      </div>\n                      \x3c!-- !volume-type --\x3e\n                    </div>\n                    \x3c!-- !volume-line1 --\x3e\n                    \x3c!-- volume-line2 --\x3e\n                    <div class="col-sm-12 form-inline" style="margin-top: 5px;">\n                      <i class="fa fa-long-arrow-right" aria-hidden="true"></i>\n                      \x3c!-- volume --\x3e\n                      <div class="input-group input-group-sm col-sm-6" ng-if="volume.type === \'volume\'">\n                        <span class="input-group-addon">volume</span>\n                        <select class="form-control" ng-model="volume.name">\n                          <option selected disabled hidden value="">Select a volume</option>\n                          <option ng-repeat="vol in availableVolumes" ng-value="vol.Name">{{ vol.Name|truncate:30}}</option>\n                        </select>\n                      </div>\n                      \x3c!-- !volume --\x3e\n                      \x3c!-- bind --\x3e\n                      <div class="input-group input-group-sm col-sm-6" ng-if="volume.type === \'bind\'">\n                        <span class="input-group-addon">host</span>\n                        <input type="text" class="form-control" ng-model="volume.name" placeholder="e.g. /path/on/host">\n                      </div>\n                      \x3c!-- !bind --\x3e\n                      \x3c!-- read-only --\x3e\n                      <div class="input-group input-group-sm col-sm-5" style="margin-left: 5px;">\n                        <div class="btn-group btn-group-sm">\n                          <label class="btn btn-primary" ng-model="volume.readOnly" uib-btn-radio="false">Writable</label>\n                          <label class="btn btn-primary" ng-model="volume.readOnly" uib-btn-radio="true">Read-only</label>\n                        </div>\n                      </div>\n                      \x3c!-- !read-only --\x3e\n                    </div>\n                    \x3c!-- !volume-line2 --\x3e\n                  </div>\n                </div>\n                \x3c!-- !volumes-input-list --\x3e\n              </div>\n            </form>\n            \x3c!-- !volumes --\x3e\n          </div>\n          \x3c!-- !tab-volume --\x3e\n          \x3c!-- tab-network --\x3e\n          <div class="tab-pane" id="network">\n            <form class="form-horizontal" style="margin-top: 15px;">\n              <div class="form-group" ng-if="globalNetworkCount === 0 && applicationState.endpoint.mode.provider !== \'DOCKER_SWARM_MODE\'">\n                <div class="col-sm-12">\n                  <span class="small text-muted">You don\'t have any shared network. Head over the <a ui-sref="networks">networks view</a> to create one.</span>\n                </div>\n              </div>\n              \x3c!-- network-input --\x3e\n              <div class="form-group">\n                <label for="container_network" class="col-sm-2 col-lg-1 control-label text-left">Network</label>\n                <div class="col-sm-9">\n                  <select class="form-control" ng-model="config.HostConfig.NetworkMode" id="container_network">\n                    <option selected disabled hidden value="">Select a network</option>\n                    <option ng-repeat="net in availableNetworks" ng-value="net.Name">{{ net.Name }}</option>\n                  </select>\n                </div>\n              </div>\n              \x3c!-- !network-input --\x3e\n              \x3c!-- container-name-input --\x3e\n              <div class="form-group" ng-if="config.HostConfig.NetworkMode == \'container\'">\n                <label for="container_network_container" class="col-sm-2 col-lg-1 control-label text-left">Container</label>\n                <div class="col-sm-9">\n                  <select ng-if="applicationState.endpoint.mode.provider !== \'DOCKER_SWARM\'" ng-options="container|containername for container in runningContainers" class="form-control" ng-model="formValues.NetworkContainer">\n                    <option selected disabled hidden value="">Select a container</option>\n                  </select>\n                  <select ng-if="applicationState.endpoint.mode.provider === \'DOCKER_SWARM\'" ng-options="container|swarmcontainername for container in runningContainers" class="form-control" ng-model="formValues.NetworkContainer">\n                    <option selected disabled hidden value="">Select a container</option>\n                  </select>\n                </div>\n              </div>\n              \x3c!-- !container-name-input --\x3e\n              \x3c!-- hostname-input --\x3e\n              <div class="form-group">\n                <label for="container_hostname" class="col-sm-2 col-lg-1 control-label text-left">Hostname</label>\n                <div class="col-sm-9">\n                  <input type="text" class="form-control" ng-model="config.Hostname" id="container_hostname" placeholder="e.g. web01">\n                </div>\n              </div>\n              \x3c!-- !hostname-input --\x3e\n              \x3c!-- domainname-input --\x3e\n              <div class="form-group">\n                <label for="container_domainname" class="col-sm-2 col-lg-1 control-label text-left">Domain Name</label>\n                <div class="col-sm-9">\n                  <input type="text" class="form-control" ng-model="config.Domainname" id="container_domainname" placeholder="e.g. example.com">\n                </div>\n              </div>\n              \x3c!-- !domainname --\x3e\n              \x3c!-- ipv4-input --\x3e\n              <div class="form-group">\n                <label for="container_ipv4" class="col-sm-2 col-lg-1 control-label text-left">IPv4 Address</label>\n                <div class="col-sm-9">\n                  <input type="text" class="form-control" ng-model="formValues.IPv4" id="container_ipv4" placeholder="e.g. 172.20.0.7">\n                </div>\n              </div>\n              \x3c!-- !ipv4-input --\x3e\n              \x3c!-- ipv6-input --\x3e\n              <div class="form-group">\n                <label for="container_ipv6" class="col-sm-2 col-lg-1 control-label text-left">IPv6 Address</label>\n                <div class="col-sm-9">\n                  <input type="text" class="form-control" ng-model="formValues.IPv6" id="container_ipv6" placeholder="e.g. a:b:c:d::1234">\n                </div>\n              </div>\n              \x3c!-- !ipv6-input --\x3e\n              \x3c!-- extra-hosts-variables --\x3e\n              <div class="form-group">\n                <div class="col-sm-12" style="margin-top: 5px;">\n                  <label class="control-label text-left">Hosts file entries</label>\n                  <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addExtraHost()">\n                    <i class="fa fa-plus-circle" aria-hidden="true"></i> add additional entry\n                  </span>\n                </div>\n                \x3c!-- extra-hosts-input-list --\x3e\n                <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                  <div ng-repeat="variable in formValues.ExtraHosts" style="margin-top: 2px;">\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">value</span>\n                      <input type="text" class="form-control" ng-model="variable.value" placeholder="e.g. host:IP">\n                    </div>\n                    <button class="btn btn-sm btn-danger" type="button" ng-click="removeExtraHost($index)">\n                      <i class="fa fa-trash" aria-hidden="true"></i>\n                    </button>\n                  </div>\n                </div>\n                \x3c!-- !extra-hosts-input-list --\x3e\n              </div>\n              \x3c!-- !extra-hosts-variables --\x3e\n            </form>\n          </div>\n          \x3c!-- !tab-network --\x3e\n          \x3c!-- tab-labels --\x3e\n          <div class="tab-pane" id="labels">\n            <form class="form-horizontal" style="margin-top: 15px;">\n              \x3c!-- labels --\x3e\n              <div class="form-group">\n                <div class="col-sm-12" style="margin-top: 5px;">\n                  <label class="control-label text-left">Labels</label>\n                  <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addLabel()">\n                    <i class="fa fa-plus-circle" aria-hidden="true"></i> add label\n                  </span>\n                </div>\n                \x3c!-- labels-input-list --\x3e\n                <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                  <div ng-repeat="label in formValues.Labels" style="margin-top: 2px;">\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">name</span>\n                      <input type="text" class="form-control" ng-model="label.name" placeholder="e.g. com.example.foo">\n                    </div>\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">value</span>\n                      <input type="text" class="form-control" ng-model="label.value" placeholder="e.g. bar">\n                    </div>\n                    <button class="btn btn-sm btn-danger" type="button" ng-click="removeLabel($index)">\n                      <i class="fa fa-trash" aria-hidden="true"></i>\n                    </button>\n                  </div>\n                </div>\n                \x3c!-- !labels-input-list --\x3e\n              </div>\n              \x3c!-- !labels--\x3e\n            </form>\n          </div>\n          \x3c!-- !tab-labels --\x3e\n          \x3c!-- tab-env --\x3e\n          <div class="tab-pane" id="env">\n            <form class="form-horizontal" style="margin-top: 15px;">\n              \x3c!-- environment-variables --\x3e\n              <div class="form-group">\n                <div class="col-sm-12" style="margin-top: 5px;">\n                  <label class="control-label text-left">Environment variables</label>\n                  <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addEnvironmentVariable()">\n                    <i class="fa fa-plus-circle" aria-hidden="true"></i> add environment variable\n                  </span>\n                </div>\n                \x3c!-- environment-variable-input-list --\x3e\n                <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                  <div ng-repeat="variable in config.Env" style="margin-top: 2px;">\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">name</span>\n                      <input type="text" class="form-control" ng-model="variable.name" placeholder="e.g. FOO">\n                    </div>\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">value</span>\n                      <input type="text" class="form-control" ng-model="variable.value" placeholder="e.g. bar">\n                    </div>\n                    <button class="btn btn-sm btn-danger" type="button" ng-click="removeEnvironmentVariable($index)">\n                      <i class="fa fa-trash" aria-hidden="true"></i>\n                    </button>\n                  </div>\n                </div>\n                \x3c!-- !environment-variable-input-list --\x3e\n              </div>\n              \x3c!-- !environment-variables --\x3e\n            </form>\n          </div>\n          \x3c!-- !tab-labels --\x3e\n          \x3c!-- tab-restart-policy --\x3e\n          <div class="tab-pane" id="restart-policy">\n            <form class="form-horizontal" style="margin-top: 15px;">\n              <div class="form-group">\n                <div class="col-sm-12">\n                  <label class="control-label text-left">\n                    Restart policy\n                  </label>\n                  <div class="btn-group btn-group-sm" style="margin-left: 20px;">\n                    <label class="btn btn-primary" ng-model="config.HostConfig.RestartPolicy.Name" uib-btn-radio="\'no\'">\n                      Never\n                    </label>\n                    <label class="btn btn-primary" ng-model="config.HostConfig.RestartPolicy.Name" uib-btn-radio="\'always\'">\n                      Always\n                    </label>\n                    <label class="btn btn-primary" ng-model="config.HostConfig.RestartPolicy.Name" uib-btn-radio="\'on-failure\'">\n                      On failure\n                    </label>\n                    <label class="btn btn-primary" ng-model="config.HostConfig.RestartPolicy.Name" uib-btn-radio="\'unless-stopped\'">\n                      Unless stopped\n                    </label>\n                  </div>\n                </div>\n              </div>\n            </form>\n          </div>\n          \x3c!-- !tab-restart-policy --\x3e\n          \x3c!-- tab-runtime --\x3e\n          <div class="tab-pane" id="runtime">\n            <form class="form-horizontal" style="margin-top: 15px;">\n              \x3c!-- privileged-mode --\x3e\n              <div class="form-group">\n                <div class="col-sm-12">\n                  <label for="ownership" class="control-label text-left">\n                    Privileged mode\n                  </label>\n                  <label class="switch" style="margin-left: 20px;">\n                    <input type="checkbox" ng-model="config.HostConfig.Privileged"><i></i>\n                  </label>\n                </div>\n              </div>\n              \x3c!-- !privileged-mode --\x3e\n            </form>\n            <form class="form-horizontal" style="margin-top: 15px;">\n              \x3c!-- devices --\x3e\n              <div class="form-group">\n                <div class="col-sm-12" style="margin-top: 5px;">\n                  <label class="control-label text-left">Devices</label>\n                  <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addDevice()">\n                    <i class="fa fa-plus-circle" aria-hidden="true"></i> add device\n                  </span>\n                </div>\n               \x3c!-- devices-input-list --\x3e\n                <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                  <div ng-repeat="device in config.HostConfig.Devices" style="margin-top: 2px;">\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">host</span>\n                      <input type="text" class="form-control" ng-model="device.pathOnHost" placeholder="e.g. /dev/tty0">\n                    </div>\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">container</span>\n                      <input type="text" class="form-control" ng-model="device.pathInContainer" placeholder="e.g. /dev/tty0">\n                    </div>\n                    <button class="btn btn-sm btn-danger" type="button" ng-click="removeDevice($index)">\n                      <i class="fa fa-trash" aria-hidden="true"></i>\n                    </button>\n                  </div>\n                </div>\n                \x3c!-- !devices-input-list --\x3e\n              </div>\n              \x3c!-- !devices--\x3e\n            </form>\n\n          </div>\n          \x3c!-- !tab-runtime --\x3e\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),angular.module("app/components/createNetwork/createnetwork.html",[]).run(["$templateCache",function(a){
a.put("app/components/createNetwork/createnetwork.html",'<rd-header>\n  <rd-header-title title="Create network"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="networks">Networks</a> &gt; Add network\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="network_name" class="col-sm-1 control-label text-left">Name</label>\n            <div class="col-sm-11">\n              <input type="text" class="form-control" ng-model="config.Name" id="network_name" placeholder="e.g. myNetwork">\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          <div class="col-sm-12 form-section-title">\n            Network configuration\n          </div>\n          \x3c!-- subnet-gateway-inputs --\x3e\n          <div class="form-group">\n            <label for="network_subnet" class="col-sm-2 col-lg-1 control-label text-left">Subnet</label>\n            <div class="col-sm-4 col-lg-5">\n              <input type="text" class="form-control" ng-model="formValues.Subnet" id="network_subnet" placeholder="e.g. 172.20.0.0/16">\n            </div>\n            <label for="network_gateway" class="col-sm-2 col-lg-1 control-label text-left">Gateway</label>\n            <div class="col-sm-4 col-lg-5">\n              <input type="text" class="form-control" ng-model="formValues.Gateway" id="network_gateway" placeholder="e.g. 172.20.10.11">\n            </div>\n          </div>\n          \x3c!-- !subnet-gateway-inputs --\x3e\n          <div class="col-sm-12 form-section-title">\n            Driver configuration\n          </div>\n          \x3c!-- driver-input --\x3e\n          <div class="form-group">\n            <label for="network_driver" class="col-sm-2 col-lg-1 control-label text-left">Driver</label>\n            <div class="col-sm-10">\n              <input type="text" class="form-control" ng-model="config.Driver" id="network_driver" placeholder="e.g. driverName">\n            </div>\n          </div>\n          \x3c!-- !driver-input --\x3e\n          \x3c!-- driver-options --\x3e\n          <div class="form-group">\n            <div class="col-sm-12" style="margin-top: 5px;">\n              <label class="control-label text-left">\n                Driver options\n                <portainer-tooltip position="bottom" message="Driver options are specific to the selected driver. Please refer to the selected driver documentation."></portainer-tooltip>\n              </label>\n              <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addDriverOption()">\n                <i class="fa fa-plus-circle" aria-hidden="true"></i> add driver option\n              </span>\n            </div>\n            \x3c!-- driver-options-input-list --\x3e\n            <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n              <div ng-repeat="option in formValues.DriverOptions" style="margin-top: 2px;">\n                <div class="input-group col-sm-5 input-group-sm">\n                  <span class="input-group-addon">name</span>\n                  <input type="text" class="form-control" ng-model="option.name" placeholder="e.g. com.docker.network.bridge.enable_icc">\n                </div>\n                <div class="input-group col-sm-5 input-group-sm">\n                  <span class="input-group-addon">value</span>\n                  <input type="text" class="form-control" ng-model="option.value" placeholder="e.g. true">\n                </div>\n                <button class="btn btn-sm btn-danger" type="button" ng-click="removeDriverOption($index)">\n                  <i class="fa fa-trash" aria-hidden="true"></i>\n                </button>\n              </div>\n            </div>\n            \x3c!-- !driver-options-input-list --\x3e\n          </div>\n          \x3c!-- !driver-options --\x3e\n          <div class="col-sm-12 form-section-title">\n            Advanced configuration\n          </div>\n          \x3c!-- labels --\x3e\n          <div class="form-group">\n            <div class="col-sm-12" style="margin-top: 5px;">\n              <label class="control-label text-left">Labels</label>\n              <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addLabel()">\n                <i class="fa fa-plus-circle" aria-hidden="true"></i> add label\n              </span>\n            </div>\n            \x3c!-- labels-input-list --\x3e\n            <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n              <div ng-repeat="label in formValues.Labels" style="margin-top: 2px;">\n                <div class="input-group col-sm-5 input-group-sm">\n                  <span class="input-group-addon">name</span>\n                  <input type="text" class="form-control" ng-model="label.key" placeholder="e.g. com.example.foo">\n                </div>\n                <div class="input-group col-sm-5 input-group-sm">\n                  <span class="input-group-addon">value</span>\n                  <input type="text" class="form-control" ng-model="label.value" placeholder="e.g. bar">\n                </div>\n                <button class="btn btn-sm btn-danger" type="button" ng-click="removeLabel($index)">\n                  <i class="fa fa-trash" aria-hidden="true"></i>\n                </button>\n              </div>\n            </div>\n            \x3c!-- !labels-input-list --\x3e\n          </div>\n          \x3c!-- !labels--\x3e\n          \x3c!-- internal --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label for="ownership" class="control-label text-left">\n                Restrict external access to the network\n              </label>\n              <label class="switch" style="margin-left: 20px;">\n                <input type="checkbox" ng-model="config.Internal"><i></i>\n              </label>\n            </div>\n          </div>\n          \x3c!-- !internal --\x3e\n          \x3c!-- actions --\x3e\n          <div class="col-sm-12 form-section-title">\n            Actions\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-disabled="!config.Name" ng-click="create()">Create network</button>\n              <a type="button" class="btn btn-default btn-sm" ui-sref="networks">Cancel</a>\n              <i id="createNetworkSpinner" class="fa fa-cog fa-spin" style="margin-left: 5px; display: none;"></i>\n            </div>\n          </div>\n          \x3c!-- !actions --\x3e\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),angular.module("app/components/createRegistry/createregistry.html",[]).run(["$templateCache",function(a){a.put("app/components/createRegistry/createregistry.html",'<rd-header>\n  <rd-header-title title="Create registry">\n    <i id="loadingViewSpinner" class="fa fa-cog fa-spin" style="display:none"></i>\n  </rd-header-title>\n  <rd-header-content>\n    <a ui-sref="registries">Registries</a> &gt; Add registry\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          <div class="col-sm-12 form-section-title">\n            Registry provider\n          </div>\n          <div class="form-group"></div>\n          <div class="form-group" style="margin-bottom: 0">\n            <div class="boxselector_wrapper">\n              <div ng-click="selectQuayRegistry()">\n                <input type="radio" id="registry_quay" ng-model="state.RegistryType" value="quay">\n                <label for="registry_quay">\n                  <div class="boxselector_header">\n                    <i class="fa fa-database" aria-hidden="true" style="margin-right: 2px;"></i>\n                    Quay.io\n                  </div>\n                  <p>Quay container registry</p>\n                </label>\n              </div>\n              <div ng-click="selectCustomRegistry()">\n                <input type="radio" id="registry_custom" ng-model="state.RegistryType" value="custom">\n                <label for="registry_custom">\n                  <div class="boxselector_header">\n                    <i class="fa fa-database" aria-hidden="true" style="margin-right: 2px;"></i>\n                    Custom registry\n                  </div>\n                  <p>Define your own registry</p>\n                </label>\n              </div>\n            </div>\n          </div>\n          <div class="col-sm-12 form-section-title" ng-if="state.RegistryType === \'custom\'">\n            Important notice\n          </div>\n          <div class="form-group" ng-if="state.RegistryType === \'custom\'">\n            <span class="col-sm-12 text-muted small">\n              Docker requires you to connect to a <a href="https://docs.docker.com/registry/deploying/#running-a-domain-registry" target="_blank">secure registry</a>.\n              You can find more information about how to connect to an insecure registry <a href="https://docs.docker.com/registry/insecure/" target="_blank">in the Docker documentation</a>.\n            </span>\n          </div>\n          <div class="col-sm-12 form-section-title">\n            Registry details\n          </div>\n          \x3c!-- name-input --\x3e\n          <div class="form-group" ng-if="state.RegistryType === \'custom\'">\n            <label for="registry_name" class="col-sm-3 col-lg-2 control-label text-left">Name</label>\n            <div class="col-sm-9 col-lg-10">\n              <input type="text" class="form-control" id="registry_name" ng-model="formValues.Name" placeholder="e.g. my-registry">\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          \x3c!-- registry-url-input --\x3e\n          <div class="form-group" ng-if="state.RegistryType === \'custom\'">\n            <label for="registry_url" class="col-sm-3 col-lg-2 control-label text-left">\n              Registry URL\n              <portainer-tooltip position="bottom" message="URL or IP address of a Docker registry. Any protocol will be stripped."></portainer-tooltip>\n            </label>\n            <div class="col-sm-9 col-lg-10">\n              <input type="text" class="form-control" id="registry_url" ng-model="formValues.URL" placeholder="e.g. 10.0.0.10:5000 or myregistry.domain.tld">\n            </div>\n          </div>\n          \x3c!-- !registry-url-input --\x3e\n          \x3c!-- authentication-checkbox --\x3e\n          <div class="form-group" ng-if="state.RegistryType === \'custom\'">\n            <div class="col-sm-12">\n              <label for="registry_auth" class="control-label text-left">\n                Authentication\n                <portainer-tooltip position="bottom" message="Enable this option if you need to specify credentials to connect to this registry."></portainer-tooltip>\n              </label>\n              <label class="switch" style="margin-left: 20px;">\n                <input type="checkbox" ng-model="formValues.Authentication"><i></i>\n              </label>\n            </div>\n          </div>\n          \x3c!-- !authentication-checkbox --\x3e\n          \x3c!-- authentication-credentials --\x3e\n          <div ng-if="formValues.Authentication || state.RegistryType === \'quay\'">\n            \x3c!-- credentials-user --\x3e\n            <div class="form-group">\n              <label for="credentials_username" class="col-sm-3 col-lg-2 control-label text-left">Username</label>\n              <div class="col-sm-9 col-lg-10">\n                <input type="text" class="form-control" id="credentials_username" ng-model="formValues.Username">\n              </div>\n            </div>\n            \x3c!-- !credentials-user --\x3e\n            \x3c!-- credentials-password --\x3e\n            <div class="form-group">\n              <label for="credentials_password" class="col-sm-3 col-lg-2 control-label text-left">Password</label>\n              <div class="col-sm-9 col-lg-10">\n                <input type="password" class="form-control" id="credentials_password" ng-model="formValues.Password">\n              </div>\n            </div>\n            \x3c!-- !credentials-password --\x3e\n          </div>\n          \x3c!-- !authentication-credentials --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-disabled="!formValues.Name || !formValues.URL || (formValues.Authentication && (!formValues.Username || !formValues.Password))" ng-click="addRegistry()">Add registry</button>\n              <i id="createRegistrySpinner" class="fa fa-cog fa-spin" style="margin-left: 5px; display: none;"></i>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),angular.module("app/components/createSecret/createsecret.html",[]).run(["$templateCache",function(a){a.put("app/components/createSecret/createsecret.html",'<rd-header>\n  <rd-header-title title="Create secret"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="secrets">Secrets</a> &gt; Add secret\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="secret_name" class="col-sm-1 control-label text-left">Name</label>\n            <div class="col-sm-11">\n              <input type="text" class="form-control" ng-model="formValues.Name" id="secret_name" placeholder="e.g. mySecret">\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          \x3c!-- secret-data --\x3e\n          <div class="form-group">\n            <label for="secret_data" class="col-sm-1 control-label text-left">Secret</label>\n            <div class="col-sm-11">\n              <textarea class="form-control" rows="5" ng-model="formValues.Data"></textarea>\n            </div>\n          </div>\n          \x3c!-- !secret-data --\x3e\n          \x3c!-- encode-secret --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label for="encode_secret" class="control-label text-left">\n                Encode secret\n                <portainer-tooltip position="bottom" message="Secrets need to be base64 encoded. Disable this if your secret is already base64 encoded."></portainer-tooltip>\n              </label>\n              <label class="switch" style="margin-left: 20px;">\n                <input type="checkbox" name="encode_secret" ng-model="formValues.encodeSecret"><i></i>\n              </label>\n            </div>\n          </div>\n          \x3c!-- !encode-secret --\x3e\n          \x3c!-- labels --\x3e\n          <div class="form-group">\n            <div class="col-sm-12" style="margin-top: 5px;">\n              <label class="control-label text-left">Labels</label>\n              <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addLabel()">\n                <i class="fa fa-plus-circle" aria-hidden="true"></i> add label\n              </span>\n            </div>\n            \x3c!-- labels-input-list --\x3e\n            <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n              <div ng-repeat="label in formValues.Labels" style="margin-top: 2px;">\n                <div class="input-group col-sm-5 input-group-sm">\n                  <span class="input-group-addon">name</span>\n                  <input type="text" class="form-control" ng-model="label.key" placeholder="e.g. com.example.foo">\n                </div>\n                <div class="input-group col-sm-5 input-group-sm">\n                  <span class="input-group-addon">value</span>\n                  <input type="text" class="form-control" ng-model="label.value" placeholder="e.g. bar">\n                </div>\n                <button class="btn btn-sm btn-danger" type="button" ng-click="removeLabel($index)">\n                  <i class="fa fa-trash" aria-hidden="true"></i>\n                </button>\n              </div>\n            </div>\n            \x3c!-- !labels-input-list --\x3e\n          </div>\n          \x3c!-- !labels--\x3e\n          \x3c!-- actions --\x3e\n          <div class="col-sm-12 form-section-title">\n            Actions\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-disabled="!formValues.Name || !formValues.Data" ng-click="create()">Create secret</button>\n              <a type="button" class="btn btn-default btn-sm" ui-sref="secrets">Cancel</a>\n              <i id="createSecretSpinner" class="fa fa-cog fa-spin" style="margin-left: 5px; display: none;"></i>\n            </div>\n          </div>\n          \x3c!-- !actions --\x3e\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),angular.module("app/components/createService/createservice.html",[]).run(["$templateCache",function(a){
a.put("app/components/createService/createservice.html",'<rd-header>\n  <rd-header-title title="Create service">\n    <i id="loadingViewSpinner" class="fa fa-cog fa-spin" style="margin-left: 5px;"></i>\n  </rd-header-title>\n  <rd-header-content>\n    <a ui-sref="services">Services</a> &gt; Add service\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="service_name" class="col-sm-1 control-label text-left">Name</label>\n            <div class="col-sm-11">\n              <input type="text" class="form-control" ng-model="formValues.Name" id="service_name" placeholder="e.g. myService">\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          <div class="col-sm-12 form-section-title">\n            Image configuration\n          </div>\n          \x3c!-- image-and-registry --\x3e\n          <div class="form-group">\n            <por-image-registry image="formValues.Image" registry="formValues.Registry"></por-image-registry>\n          </div>\n          \x3c!-- !image-and-registry --\x3e\n          <div class="col-sm-12 form-section-title">\n            Scheduling\n          </div>\n          \x3c!-- scheduling-mode --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label class="control-label text-left">\n                Scheduling mode\n              </label>\n              <div class="btn-group btn-group-sm" style="margin-left: 20px;">\n                <label class="btn btn-primary" ng-model="formValues.Mode" uib-btn-radio="\'global\'">Global</label>\n                <label class="btn btn-primary" ng-model="formValues.Mode" uib-btn-radio="\'replicated\'">Replicated</label>\n              </div>\n            </div>\n          </div>\n          <div class="form-group form-inline" ng-if="formValues.Mode === \'replicated\'">\n            <div class="col-sm-12">\n              <label class="control-label text-left">\n                Replicas\n              </label>\n              <input type="number" class="form-control" ng-model="formValues.Replicas" id="replicas" placeholder="e.g. 3" style="margin-left: 20px;">\n            </div>\n          </div>\n          \x3c!-- !scheduling-mode --\x3e\n          <div class="col-sm-12 form-section-title">\n            Ports configuration\n          </div>\n          \x3c!-- port-mapping --\x3e\n          <div class="form-group">\n            <div class="col-sm-12" style="margin-top: 5px;">\n              <label class="control-label text-left">Port mapping</label>\n              <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addPortBinding()">\n                <i class="fa fa-plus-circle" aria-hidden="true"></i> map additional port\n              </span>\n            </div>\n            <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n              <div ng-repeat="portBinding in formValues.Ports" style="margin-top: 2px;">\n                \x3c!-- host-port --\x3e\n                <div class="input-group col-sm-3 input-group-sm">\n                  <span class="input-group-addon">host</span>\n                  <input type="text" class="form-control" ng-model="portBinding.PublishedPort" placeholder="e.g. 80 or 1.2.3.4:80 (optional)">\n                </div>\n                \x3c!-- !host-port --\x3e\n                <span style="margin: 0 10px 0 10px;">\n                  <i class="fa fa-long-arrow-right" aria-hidden="true"></i>\n                </span>\n                \x3c!-- container-port --\x3e\n                <div class="input-group col-sm-3 input-group-sm">\n                  <span class="input-group-addon">container</span>\n                  <input type="text" class="form-control" ng-model="portBinding.TargetPort" placeholder="e.g. 80">\n                </div>\n                \x3c!-- !container-port --\x3e\n                \x3c!-- protocol-actions --\x3e\n                <div class="input-group col-sm-5 input-group-sm">\n                  <div class="btn-group btn-group-sm">\n                    <label class="btn btn-primary" ng-model="portBinding.Protocol" uib-btn-radio="\'tcp\'">TCP</label>\n                    <label class="btn btn-primary" ng-model="portBinding.Protocol" uib-btn-radio="\'udp\'">UDP</label>\n                  </div>\n                  <div class="btn-group btn-group-sm">\n                    <label class="btn btn-primary" ng-model="portBinding.PublishMode" uib-btn-radio="\'ingress\'">Ingress</label>\n                    <label class="btn btn-primary" ng-model="portBinding.PublishMode" uib-btn-radio="\'host\'">Host</label>\n                  </div>\n                  <button class="btn btn-sm btn-danger" type="button" ng-click="removePortBinding($index)">\n                    <i class="fa fa-trash" aria-hidden="true"></i>\n                  </button>\n                </div>\n                \x3c!-- !protocol-actions --\x3e\n              </div>\n            </div>\n            \x3c!-- !port-mapping-input-list --\x3e\n          </div>\n          \x3c!-- !port-mapping --\x3e\n          \x3c!-- access-control --\x3e\n          <por-access-control-form form-data="formValues.AccessControlData" ng-if="applicationState.application.authentication"></por-access-control-form>\n          \x3c!-- !access-control --\x3e\n          \x3c!-- actions --\x3e\n          <div class="col-sm-12 form-section-title">\n            Actions\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-disabled="!formValues.Image" ng-click="create()">Create service</button>\n              <a type="button" class="btn btn-default btn-sm" ui-sref="services">Cancel</a>\n              <i id="createServiceSpinner" class="fa fa-cog fa-spin" style="margin-left: 5px; display: none;"></i>\n              <span class="text-danger" ng-if="state.formValidationError" style="margin-left: 5px;">{{ state.formValidationError }}</span>\n            </div>\n          </div>\n          \x3c!-- !actions --\x3e\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-body>\n        <ul class="nav nav-pills nav-justified">\n          <li class="active interactive"><a data-target="#command" data-toggle="tab">Command</a></li>\n          <li class="interactive"><a data-target="#volumes" data-toggle="tab">Volumes</a></li>\n          <li class="interactive"><a data-target="#network" data-toggle="tab">Network</a></li>\n          <li class="interactive"><a data-target="#labels" data-toggle="tab">Labels</a></li>\n          <li class="interactive"><a data-target="#update-config" data-toggle="tab">Update config</a></li>\n          <li class="interactive" ng-if="applicationState.endpoint.apiVersion >= 1.25"><a data-target="#secrets" data-toggle="tab">Secrets</a></li>\n          <li class="interactive"><a data-target="#placement" data-toggle="tab">Placement</a></li>\n        </ul>\n        \x3c!-- tab-content --\x3e\n        <div class="tab-content">\n          \x3c!-- tab-command --\x3e\n          <div class="tab-pane active" id="command">\n            <form class="form-horizontal" style="margin-top: 15px;">\n              \x3c!-- command-input --\x3e\n              <div class="form-group">\n                <label for="service_command" class="col-sm-2 col-lg-1 control-label text-left">Command</label>\n                <div class="col-sm-9">\n                  <input type="text" class="form-control" ng-model="formValues.Command" id="service_command" placeholder="e.g. /usr/bin/nginx -t -c /mynginx.conf">\n                </div>\n              </div>\n              \x3c!-- !command-input --\x3e\n              \x3c!-- entrypoint-input --\x3e\n              <div class="form-group">\n                <label for="service_entrypoint" class="col-sm-2 col-lg-1 control-label text-left">Entrypoint</label>\n                <div class="col-sm-9">\n                  <input type="text" class="form-control" ng-model="formValues.EntryPoint" id="service_entrypoint" placeholder="e.g. /bin/sh -c">\n                </div>\n              </div>\n              \x3c!-- !entrypoint-input --\x3e\n              \x3c!-- workdir-user-input --\x3e\n              <div class="form-group">\n                <label for="service_workingdir" class="col-sm-2 col-lg-1 control-label text-left">Working Dir</label>\n                <div class="col-sm-4">\n                  <input type="text" class="form-control" ng-model="formValues.WorkingDir" id="service_workingdir" placeholder="e.g. /myapp">\n                </div>\n                <label for="service_user" class="col-sm-1 control-label text-left">User</label>\n                <div class="col-sm-4">\n                  <input type="text" class="form-control" ng-model="formValues.User" id="service_user" placeholder="e.g. nginx">\n                </div>\n              </div>\n              \x3c!-- !workdir-user-input --\x3e\n              \x3c!-- environment-variables --\x3e\n              <div class="form-group">\n                <div class="col-sm-12" style="margin-top: 5px;">\n                  <label class="control-label text-left">Environment variables</label>\n                  <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addEnvironmentVariable()">\n                    <i class="fa fa-plus-circle" aria-hidden="true"></i> add environment variable\n                  </span>\n                </div>\n                \x3c!-- environment-variable-input-list --\x3e\n                <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                  <div ng-repeat="variable in formValues.Env" style="margin-top: 2px;">\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">name</span>\n                      <input type="text" class="form-control" ng-model="variable.name" placeholder="e.g. FOO">\n                    </div>\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">value</span>\n                      <input type="text" class="form-control" ng-model="variable.value" placeholder="e.g. bar">\n                    </div>\n                    <button class="btn btn-sm btn-danger" type="button" ng-click="removeEnvironmentVariable($index)">\n                      <i class="fa fa-trash" aria-hidden="true"></i>\n                    </button>\n                  </div>\n                </div>\n                \x3c!-- !environment-variable-input-list --\x3e\n              </div>\n              \x3c!-- !environment-variables --\x3e\n            </form>\n          </div>\n          \x3c!-- !tab-command --\x3e\n          \x3c!-- tab-volume --\x3e\n          <div class="tab-pane" id="volumes">\n            <form class="form-horizontal" style="margin-top: 15px;">\n              \x3c!-- volumes --\x3e\n              <div class="form-group">\n                <div class="col-sm-12" style="margin-top: 5px;">\n                  <label class="control-label text-left">Volume mapping</label>\n                  <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addVolume()">\n                    <i class="fa fa-plus-circle" aria-hidden="true"></i> map additional volume\n                  </span>\n                </div>\n                \x3c!-- volumes-input-list --\x3e\n                <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                  <div ng-repeat="volume in formValues.Volumes">\n                    <div class="col-sm-12" style="margin-top: 10px;">\n                      \x3c!-- volume-line1 --\x3e\n                      <div class="col-sm-12 form-inline">\n                        \x3c!-- container-path --\x3e\n                        <div class="input-group input-group-sm col-sm-6">\n                          <span class="input-group-addon">container</span>\n                          <input type="text" class="form-control" ng-model="volume.Target" placeholder="e.g. /path/in/container">\n                        </div>\n                        \x3c!-- !container-path --\x3e\n                        \x3c!-- volume-type --\x3e\n                        <div class="input-group col-sm-5" style="margin-left: 5px;">\n                          <div class="btn-group btn-group-sm">\n                            <label class="btn btn-primary" ng-model="volume.Type" uib-btn-radio="\'volume\'" ng-click="volume.name = \'\'">Volume</label>\n                            <label class="btn btn-primary" ng-model="volume.Type" uib-btn-radio="\'bind\'" ng-click="volume.Id = \'\'">Bind</label>\n                          </div>\n                          <button class="btn btn-sm btn-danger" type="button" ng-click="removeVolume($index)">\n                            <i class="fa fa-trash" aria-hidden="true"></i>\n                          </button>\n                        </div>\n                        \x3c!-- !volume-type --\x3e\n                      </div>\n                      \x3c!-- !volume-line1 --\x3e\n                      \x3c!-- volume-line2 --\x3e\n                      <div class="col-sm-12 form-inline" style="margin-top: 5px;">\n                        <i class="fa fa-long-arrow-right" aria-hidden="true"></i>\n                        \x3c!-- volume --\x3e\n                        <div class="input-group input-group-sm col-sm-6" ng-if="volume.Type === \'volume\'">\n                          <span class="input-group-addon">volume</span>\n                          <select class="form-control" ng-model="volume.Source">\n                            <option selected disabled hidden value="">Select a volume</option>\n                            <option ng-repeat="vol in availableVolumes" ng-value="vol.Id">{{ vol.Id|truncate:30 }}</option>\n                          </select>\n                        </div>\n                        \x3c!-- !volume --\x3e\n                        \x3c!-- bind --\x3e\n                        <div class="input-group input-group-sm col-sm-6" ng-if="volume.Type === \'bind\'">\n                          <span class="input-group-addon">host</span>\n                          <input type="text" class="form-control" ng-model="volume.Source" placeholder="e.g. /path/on/host">\n                        </div>\n                        \x3c!-- !bind --\x3e\n                        \x3c!-- read-only --\x3e\n                        <div class="input-group input-group-sm col-sm-5" style="margin-left: 5px;">\n                          <div class="btn-group btn-group-sm">\n                            <label class="btn btn-primary" ng-model="volume.ReadOnly" uib-btn-radio="false">Writable</label>\n                            <label class="btn btn-primary" ng-model="volume.ReadOnly" uib-btn-radio="true">Read-only</label>\n                          </div>\n                        </div>\n                        \x3c!-- !read-only --\x3e\n                      </div>\n                      \x3c!-- !volume-line2 --\x3e\n                    </div>\n                  </div>\n                </div>\n                \x3c!-- !volumes-input-list --\x3e\n              </div>\n              \x3c!-- !volumes --\x3e\n            </form>\n          </div>\n          \x3c!-- !tab-volume --\x3e\n          \x3c!-- tab-network --\x3e\n          <div class="tab-pane" id="network">\n            <form class="form-horizontal" style="margin-top: 15px;">\n              \x3c!-- network-input --\x3e\n              <div class="form-group">\n                <label for="container_network" class="col-sm-2 col-lg-1 control-label text-left">Network</label>\n                <div class="col-sm-9">\n                  <select class="form-control" ng-model="formValues.Network">\n                    <option selected disabled hidden value="">Select a network</option>\n                    <option ng-repeat="net in availableNetworks" ng-value="net.Name">{{ net.Name }}</option>\n                  </select>\n                </div>\n                <div class="col-sm-2"></div>\n              </div>\n              \x3c!-- !network-input --\x3e\n              \x3c!-- extra-networks --\x3e\n              <div class="form-group">\n                <div class="col-sm-12" style="margin-top: 5px;">\n                  <label class="control-label text-left">Extra networks</label>\n                  <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addExtraNetwork()">\n                    <i class="fa fa-plus-circle" aria-hidden="true"></i> add extra network\n                  </span>\n                </div>\n                \x3c!-- network-input-list --\x3e\n                <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                  <div ng-repeat="network in formValues.ExtraNetworks" style="margin-top: 2px;">\n                    <select class="form-control" ng-model="network.Name">\n                      <option selected disabled hidden value="">Select a network</option>\n                      <option ng-repeat="net in availableNetworks" ng-value="net.Name">{{ net.Name }}</option>\n                    </select>\n                    <button class="btn btn-sm btn-danger" type="button" ng-click="removeExtraNetwork($index)">\n                      <i class="fa fa-trash" aria-hidden="true"></i>\n                    </button>\n                  </div>\n                </div>\n                \x3c!-- !network-input-list --\x3e\n              </div>\n              \x3c!-- !extra-networks --\x3e\n            </form>\n          </div>\n          \x3c!-- !tab-network --\x3e\n          \x3c!-- tab-labels --\x3e\n          <div class="tab-pane" id="labels">\n            <form class="form-horizontal" style="margin-top: 15px;">\n              \x3c!-- labels --\x3e\n              <div class="form-group">\n                <div class="col-sm-12" style="margin-top: 5px;">\n                  <label class="control-label text-left">Service labels</label>\n                  <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addLabel()">\n                    <i class="fa fa-plus-circle" aria-hidden="true"></i> add service label\n                  </span>\n                </div>\n                \x3c!-- labels-input-list --\x3e\n                <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                  <div ng-repeat="label in formValues.Labels" style="margin-top: 2px;">\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">name</span>\n                      <input type="text" class="form-control" ng-model="label.key" placeholder="e.g. com.example.foo">\n                    </div>\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">value</span>\n                      <input type="text" class="form-control" ng-model="label.value" placeholder="e.g. bar">\n                    </div>\n                    <button class="btn btn-sm btn-danger" type="button" ng-click="removeLabel($index)">\n                      <i class="fa fa-trash" aria-hidden="true"></i>\n                    </button>\n                  </div>\n                </div>\n                \x3c!-- !labels-input-list --\x3e\n              </div>\n              \x3c!-- !labels--\x3e\n              \x3c!-- container-labels --\x3e\n              <div class="form-group">\n                <div class="col-sm-12" style="margin-top: 5px;">\n                  <label class="control-label text-left">Container labels</label>\n                  <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addContainerLabel()">\n                    <i class="fa fa-plus-circle" aria-hidden="true"></i> add container label\n                  </span>\n                </div>\n                \x3c!-- container-labels-input-list --\x3e\n                <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                  <div ng-repeat="label in formValues.ContainerLabels" style="margin-top: 2px;">\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">name</span>\n                      <input type="text" class="form-control" ng-model="label.key" placeholder="e.g. com.example.foo">\n                    </div>\n                    <div class="input-group col-sm-5 input-group-sm">\n                      <span class="input-group-addon">value</span>\n                      <input type="text" class="form-control" ng-model="label.value" placeholder="e.g. bar">\n                    </div>\n                    <button class="btn btn-sm btn-danger" type="button" ng-click="removeContainerLabel($index)">\n                      <i class="fa fa-trash" aria-hidden="true"></i>\n                    </button>\n                  </div>\n                </div>\n                \x3c!-- !container-labels-input-list --\x3e\n              </div>\n              \x3c!-- !container-labels--\x3e\n            </form>\n          </div>\n          \x3c!-- !tab-labels --\x3e\n          \x3c!-- tab-update-config --\x3e\n          <div class="tab-pane" id="update-config">\n            <form class="form-horizontal" style="margin-top: 15px;">\n              \x3c!-- parallelism-input --\x3e\n              <div class="form-group">\n                <label for="parallelism" class="col-sm-3 col-lg-1 control-label text-left">Parallelism</label>\n                <div class="col-sm-4 col-lg-3">\n                  <input type="number" class="form-control" ng-model="formValues.Parallelism" id="parallelism" placeholder="e.g. 1">\n                </div>\n                <div class="col-sm-5">\n                  <p class="small text-muted">\n                    Maximum number of tasks to be updated simultaneously (0 to update all at once).\n                  </p>\n                </div>\n              </div>\n              \x3c!-- !parallelism-input --\x3e\n              \x3c!-- delay-input --\x3e\n              <div class="form-group">\n                <label for="update-delay" class="col-sm-3 col-lg-1 control-label text-left">Delay</label>\n                <div class="col-sm-4 col-lg-3">\n                  <input type="number" class="form-control" ng-model="formValues.UpdateDelay" id="update-delay" placeholder="e.g. 10">\n                </div>\n                <div class="col-sm-5">\n                  <p class="small text-muted">\n                    Amount of time between updates.\n                  </p>\n                </div>\n              </div>\n              \x3c!-- !delay-input --\x3e\n              \x3c!-- failureAction-input --\x3e\n              <div class="form-group">\n                <label for="failure-action" class="col-sm-3 col-lg-1 control-label text-left">Failure action</label>\n                <div class="col-sm-4 col-lg-3">\n                  <div class="btn-group btn-group-sm">\n                    <label class="btn btn-primary" ng-model="formValues.FailureAction" uib-btn-radio="\'continue\'">Continue</label>\n                    <label class="btn btn-primary" ng-model="formValues.FailureAction" uib-btn-radio="\'pause\'">Pause</label>\n                  </div>\n                </div>\n                <div class="col-sm-5">\n                  <p class="small text-muted">\n                    Action taken on failure to start after update.\n                  </p>\n                </div>\n\n              </div>\n              \x3c!-- !failureAction-input --\x3e\n              \x3c!-- order-input --\x3e\n              <div class="form-group" ng-if="applicationState.endpoint.apiVersion >= 1.29">\n\n                <label for="update-order" class="col-sm-3 col-lg-1 control-label text-left">Order</label>\n                <div class="col-sm-4 col-lg-3">\n                  <div class="btn-group btn-group-sm">\n                    <label class="btn btn-primary" ng-model="formValues.UpdateOrder" uib-btn-radio="\'start-first\'">start-first</label>\n                    <label class="btn btn-primary" ng-model="formValues.UpdateOrder" uib-btn-radio="\'stop-first\'">stop-first</label>\n                  </div>\n                </div>\n                <div class="col-sm-5">\n                  <p class="small text-muted">\n                    Operation order on failure.\n                  </p>\n                </div>\n\n              </div>\n              \x3c!-- !order-input --\x3e\n            </form>\n          </div>\n          \x3c!-- !tab-update-config --\x3e\n          \x3c!-- tab-secrets --\x3e\n          <div class="tab-pane" id="secrets" ng-if="applicationState.endpoint.apiVersion >= 1.25" ng-include="\'app/components/createService/includes/secret.html\'"></div>\n          \x3c!-- !tab-secrets --\x3e\n          \x3c!-- tab-placement --\x3e\n          <div class="tab-pane" id="placement" ng-include="\'app/components/createService/includes/placement.html\'"></div>\n          \x3c!-- !tab-placement --\x3e\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),angular.module("app/components/createService/includes/placement.html",[]).run(["$templateCache",function(a){a.put("app/components/createService/includes/placement.html",'<form class="form-horizontal" style="margin-top: 15px;">\n  <div class="form-group">\n    <div class="col-sm-12" style="margin-top: 5px;">\n      <label class="control-label text-left">Placement constraints</label>\n      <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addPlacementConstraint()">\n        <i class="fa fa-plus-circle" aria-hidden="true"></i> placement constraint\n      </span>\n    </div>\n    <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n      <div ng-repeat="constraint in formValues.PlacementConstraints" style="margin-top: 2px;">\n        <div class="input-group col-sm-4 input-group-sm">\n          <span class="input-group-addon">name</span>\n          <input type="text" class="form-control" ng-model="constraint.key" placeholder="e.g. node.role">\n        </div>\n        <div class="input-group col-sm-1 input-group-sm">\n          <select name="constraintOperator" class="form-control" ng-model="constraint.operator">\n            <option value="==">==</option>\n            <option value="!=">!=</option>\n          </select>\n        </div>\n        <div class="input-group col-sm-5 input-group-sm">\n          <span class="input-group-addon">value</span>\n          <input type="text" class="form-control" ng-model="constraint.value" placeholder="e.g. manager">\n        </div>\n        <button class="btn btn-sm btn-danger" type="button" ng-click="removePlacementConstraint($index)">\n          <i class="fa fa-trash" aria-hidden="true"></i>\n        </button>\n      </div>\n    </div>\n  </div>\n</form>\n\n<form class="form-horizontal" style="margin-top: 15px;" ng-if="applicationState.endpoint.apiVersion >= 1.30">\n  <div class="form-group">\n    <div class="col-sm-12" style="margin-top: 5px;">\n      <label class="control-label text-left">Placement preferences</label>\n      <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addPlacementPreference()">\n        <i class="fa fa-plus-circle" aria-hidden="true"></i> placement preference\n      </span>\n    </div>\n    <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n      <div ng-repeat="preference in formValues.PlacementPreferences" style="margin-top: 2px;">\n        <div class="input-group col-sm-4 input-group-sm">\n          <span class="input-group-addon">strategy</span>\n          <input type="text" class="form-control" ng-model="preference.strategy" placeholder="e.g. spread">\n        </div>\n        <div class="input-group col-sm-5 input-group-sm">\n          <span class="input-group-addon">value</span>\n          <input type="text" class="form-control" ng-model="preference.value" placeholder="e.g. node.labels.datacenter">\n        </div>\n        <button class="btn btn-sm btn-danger" type="button" ng-click="removePlacementPreference($index)">\n          <i class="fa fa-trash" aria-hidden="true"></i>\n        </button>\n      </div>\n    </div>\n  </div>\n</form>\n')}]),angular.module("app/components/createService/includes/secret.html",[]).run(["$templateCache",function(a){a.put("app/components/createService/includes/secret.html",'<form class="form-horizontal" style="margin-top: 15px;">\n  <div class="form-group">\n    <div class="col-sm-12 small text-muted">\n      Secrets will be available under <code>/run/secrets/$SECRET_NAME</code> in containers.\n    </div>\n  </div>\n  <div class="form-group">\n    <div class="col-sm-12" style="margin-top: 5px;">\n      <label class="control-label text-left">Secrets</label>\n      <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addSecret()">\n        <i class="fa fa-plus-circle" aria-hidden="true"></i> add a secret\n      </span>\n    </div>\n    <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n      <div ng-repeat="secret in formValues.Secrets" style="margin-top: 2px;">\n        <div class="input-group col-sm-4 input-group-sm">\n          <span class="input-group-addon">secret</span>\n          <select class="form-control" ng-model="secret.model" ng-options="secret.Name for secret in availableSecrets">\n            <option value="" selected="selected">Select a secret</option>\n          </select>\n        </div>\n        <button class="btn btn-sm btn-danger" type="button" ng-click="removeSecret($index)">\n          <i class="fa fa-trash" aria-hidden="true"></i>\n        </button>\n      </div>\n    </div>\n  </div>\n</form>\n')}]),angular.module("app/components/createVolume/createvolume.html",[]).run(["$templateCache",function(a){
a.put("app/components/createVolume/createvolume.html",'<rd-header>\n  <rd-header-title title="Create volume">\n    <i id="loadingViewSpinner" class="fa fa-cog fa-spin"></i>\n  </rd-header-title>\n  <rd-header-content>\n    <a ui-sref="volumes">Volumes</a> &gt; Add volume\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="volume_name" class="col-sm-1 control-label text-left">Name</label>\n            <div class="col-sm-11">\n              <input type="text" class="form-control" ng-model="formValues.Name" id="volume_name" placeholder="e.g. myVolume">\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          <div class="col-sm-12 form-section-title">\n            Driver configuration\n          </div>\n          \x3c!-- driver-input --\x3e\n          <div class="form-group">\n            <label for="volume_driver" class="col-sm-1 control-label text-left">Driver</label>\n            <div class="col-sm-11">\n              <select class="form-control" ng-options="driver for driver in availableVolumeDrivers" ng-model="formValues.Driver" ng-if="availableVolumeDrivers.length > 0">\n                <option disabled hidden value="">Select a driver</option>\n              </select>\n              <input type="text" class="form-control" ng-model="formValues.Driver" id="volume_driver" placeholder="e.g. driverName" ng-if="availableVolumeDrivers.length === 0">\n            </div>\n          </div>\n          \x3c!-- !driver-input --\x3e\n          \x3c!-- driver-options --\x3e\n          <div class="form-group">\n            <div class="col-sm-12" style="margin-top: 5px;">\n              <label class="control-label text-left">\n                Driver options\n                <portainer-tooltip position="bottom" message="Driver options are specific to the selected driver. Please refer to the selected driver documentation."></portainer-tooltip>\n              </label>\n              <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addDriverOption()">\n                <i class="fa fa-plus-circle" aria-hidden="true"></i> add driver option\n              </span>\n            </div>\n            \x3c!-- driver-options-input-list --\x3e\n            <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n              <div ng-repeat="option in formValues.DriverOptions" style="margin-top: 2px;">\n                <div class="input-group col-sm-5 input-group-sm">\n                  <span class="input-group-addon">name</span>\n                  <input type="text" class="form-control" ng-model="option.name" placeholder="e.g. mountpoint">\n                </div>\n                <div class="input-group col-sm-5 input-group-sm">\n                  <span class="input-group-addon">value</span>\n                  <input type="text" class="form-control" ng-model="option.value" placeholder="e.g. /path/on/host">\n                </div>\n                <button class="btn btn-sm btn-danger" type="button" ng-click="removeDriverOption($index)">\n                  <i class="fa fa-trash" aria-hidden="true"></i>\n                </button>\n              </div>\n            </div>\n            \x3c!-- !driver-options-input-list --\x3e\n          </div>\n          \x3c!-- !driver-options --\x3e\n          \x3c!-- access-control --\x3e\n          <por-access-control-form form-data="formValues.AccessControlData" ng-if="applicationState.application.authentication"></por-access-control-form>\n          \x3c!-- !access-control --\x3e\n          \x3c!-- actions --\x3e\n          <div class="col-sm-12 form-section-title">\n            Actions\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-click="create()">Create volume</button>\n              <a type="button" class="btn btn-default btn-sm" ui-sref="volumes">Cancel</a>\n              <i id="createVolumeSpinner" class="fa fa-cog fa-spin" style="margin-left: 5px; display: none;"></i>\n              <span class="text-danger" ng-if="state.formValidationError" style="margin-left: 5px;">{{ state.formValidationError }}</span>\n            </div>\n          </div>\n          \x3c!-- !actions --\x3e\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),angular.module("app/components/dashboard/dashboard.html",[]).run(["$templateCache",function(a){a.put("app/components/dashboard/dashboard.html",'<rd-header>\n  <rd-header-title title="Home">\n    <i id="loadingViewSpinner" class="fa fa-cog fa-spin"></i>\n  </rd-header-title>\n  <rd-header-content>Dashboard</rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12" ng-if="applicationState.endpoint.mode.provider !== \'DOCKER_SWARM\'">\n    <rd-widget>\n      <rd-widget-header icon="fa-tachometer" title="Node info"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>Name</td>\n              <td>{{ infoData.Name }}</td>\n            </tr>\n            <tr>\n              <td>Docker version</td>\n              <td>{{ infoData.ServerVersion }}</td>\n            </tr>\n            <tr>\n              <td>CPU</td>\n              <td>{{ infoData.NCPU }}</td>\n            </tr>\n            <tr>\n              <td>Memory</td>\n              <td>{{ infoData.MemTotal|humansize }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n  <div class="col-lg-12 col-md-12 col-xs-12" ng-if="applicationState.endpoint.mode.provider === \'DOCKER_SWARM\'">\n    <rd-widget>\n      <rd-widget-header icon="fa-tachometer" title="Cluster info"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>Nodes</td>\n              <td>{{ infoData.SystemStatus[0][1] == \'primary\' ? infoData.SystemStatus[3][1] : infoData.SystemStatus[4][1] }}</td>\n            </tr>\n            <tr>\n              <td>Swarm version</td>\n              <td>{{ infoData.ServerVersion|swarmversion }}</td>\n            </tr>\n            <tr>\n              <td>Total CPU</td>\n              <td>{{ infoData.NCPU }}</td>\n            </tr>\n            <tr>\n              <td>Total memory</td>\n              <td>{{ infoData.MemTotal|humansize: 2 }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n  <div class="col-lg-12 col-md-12 col-xs-12" ng-if="applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\'">\n    <rd-widget>\n      <rd-widget-header icon="fa-tachometer" title="Swarm info"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td colspan="2"><span class="small text-muted">This node is part of a Swarm cluster</span></td>\n            </tr>\n            <tr >\n              <td>Node role</td>\n              <td>{{ infoData.Swarm.ControlAvailable ? \'Manager\' : \'Worker\' }}</td>\n            </tr>\n            <tr ng-if="infoData.Swarm.ControlAvailable">\n              <td>Nodes in the cluster</td>\n              <td>{{ infoData.Swarm.Nodes }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-xs-12 col-md-6">\n    <a ui-sref="containers">\n      <rd-widget>\n        <rd-widget-body>\n          <div class="widget-icon blue pull-left">\n            <i class="fa fa-server"></i>\n          </div>\n          <div class="pull-right">\n            <div><i class="fa fa-heartbeat space-right green-icon"></i>{{ containerData.running }} running</div>\n            <div><i class="fa fa-heartbeat space-right red-icon"></i>{{ containerData.stopped }} stopped</div>\n          </div>\n          <div class="title">{{ containerData.total }}</div>\n          <div class="comment">Containers</div>\n        </rd-widget-body>\n      </rd-widget>\n    </a>\n  </div>\n  <div class="col-xs-12 col-md-6">\n    <a ui-sref="images">\n      <rd-widget>\n        <rd-widget-body>\n          <div class="widget-icon blue pull-left">\n            <i class="fa fa-clone"></i>\n          </div>\n          <div class="pull-right">\n            <div><i class="fa fa-pie-chart space-right"></i>{{ imageData.size|humansize }}</div>\n          </div>\n          <div class="title">{{ imageData.total }}</div>\n          <div class="comment">Images</div>\n        </rd-widget-body>\n      </rd-widget>\n    </a>\n  </div>\n  <div class="col-xs-12 col-md-6">\n    <a ui-sref="volumes">\n      <rd-widget>\n        <rd-widget-body>\n          <div class="widget-icon blue pull-left">\n            <i class="fa fa-cubes"></i>\n          </div>\n          <div class="title">{{ volumeData.total }}</div>\n          <div class="comment">Volumes</div>\n        </rd-widget-body>\n      </rd-widget>\n    </a>\n  </div>\n  <div class="col-xs-12 col-md-6">\n    <a ui-sref="networks">\n      <rd-widget>\n        <rd-widget-body>\n          <div class="widget-icon blue pull-left">\n            <i class="fa fa-sitemap"></i>\n          </div>\n          <div class="title">{{ networkData.total }}</div>\n          <div class="comment">Networks</div>\n        </rd-widget-body>\n      </rd-widget>\n    </a>\n  </div>\n</div>\n\n<div class="row">\n</div>\n')}]),angular.module("app/components/docker/docker.html",[]).run(["$templateCache",function(a){a.put("app/components/docker/docker.html",'<rd-header>\n  <rd-header-title title="Engine overview">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="docker" ui-sref-opts="{reload: true}">\n      <i class="fa fa-refresh" aria-hidden="true"></i>\n    </a>\n    <i id="loadingViewSpinner" class="fa fa-cog fa-spin"></i>\n  </rd-header-title>\n  <rd-header-content>Docker</rd-header-content>\n</rd-header>\n\n<div class="row" ng-if="info && version">\n  <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-code" title="Engine version"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>Version</td>\n              <td>{{ version.Version }}</td>\n            </tr>\n            <tr>\n              <td>API version</td>\n              <td>{{ version.ApiVersion }}</td>\n            </tr>\n            <tr>\n              <td>Go version</td>\n              <td>{{ version.GoVersion }}</td>\n            </tr>\n            <tr>\n              <td>OS type</td>\n              <td>{{ version.Os }}</td>\n            </tr>\n            <tr>\n              <td>OS</td>\n              <td>{{ info.OperatingSystem }}</td>\n            </tr>\n            <tr>\n              <td>Architecture</td>\n              <td>{{ version.Arch }}</td>\n            </tr>\n            <tr>\n              <td>Kernel version</td>\n              <td>{{ version.KernelVersion }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row" ng-if="info && version">\n  <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-th" title="Engine status"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>Total CPU</td>\n              <td>{{ info.NCPU }}</td>\n            </tr>\n            <tr>\n              <td>Total memory</td>\n              <td>{{ info.MemTotal|humansize }}</td>\n            </tr>\n            <tr>\n              <td>Docker root directory</td>\n              <td>{{ info.DockerRootDir }}</td>\n            </tr>\n            <tr>\n              <td>Storage driver</td>\n              <td>{{ info.Driver }}</td>\n            </tr>\n            <tr>\n              <td>Logging driver</td>\n              <td>{{ info.LoggingDriver }}</td>\n            </tr>\n            <tr ng-if="info.CgroupDriver">\n              <td>Cgroup driver</td>\n              <td>{{ info.CgroupDriver }}</td>\n            </tr>\n            <tr ng-if="info.ExecutionDriver">\n              <td>Execution driver</td>\n              <td>{{ info.ExecutionDriver }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row" ng-if="info && info.Plugins">\n  <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-plug" title="Engine plugins"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr ng-if="info.Plugins.Volume">\n              <td>Volume</td>\n              <td>{{ info.Plugins.Volume|arraytostr: \', \'}}</td>\n            </tr>\n            <tr ng-if="info.Plugins.Network">\n              <td>Network</td>\n              <td>{{ info.Plugins.Network|arraytostr: \', \'}}</td>\n            </tr>\n            <tr ng-if="info.Plugins.Authorization">\n              <td>Authorization</td>\n              <td>{{ info.Plugins.Authorization|arraytostr: \', \'}}</td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),angular.module("app/components/endpoint/endpoint.html",[]).run(["$templateCache",function(a){a.put("app/components/endpoint/endpoint.html",'<rd-header>\n  <rd-header-title title="Endpoint details">\n    <i id="loadingViewSpinner" class="fa fa-cog fa-spin"></i>\n  </rd-header-title>\n  <rd-header-content>\n    <a ui-sref="endpoints">Endpoints</a> &gt; <a ui-sref="endpoint({id: endpoint.Id})">{{ endpoint.Name }}</a>\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="container_name" class="col-sm-3 col-lg-2 control-label text-left">Name</label>\n            <div class="col-sm-9 col-lg-10">\n              <input type="text" class="form-control" id="container_name" ng-model="endpoint.Name" placeholder="e.g. docker-prod01">\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          \x3c!-- endpoint-url-input --\x3e\n          <div class="form-group">\n            <label for="endpoint_url" class="col-sm-3 col-lg-2 control-label text-left">\n              Endpoint URL\n              <portainer-tooltip position="bottom" message="URL or IP address of a Docker host. The Docker API must be exposed over a TCP port. Please refer to the Docker documentation to configure it."></portainer-tooltip>\n            </label>\n            <div class="col-sm-9 col-lg-10">\n              <input ng-disabled="endpointType === \'local\'" type="text" class="form-control" id="endpoint_url" ng-model="endpoint.URL" placeholder="e.g. 10.0.0.10:2375 or mydocker.mydomain.com:2375">\n            </div>\n          </div>\n          \x3c!-- !endpoint-url-input --\x3e\n          \x3c!-- endpoint-public-url-input --\x3e\n          <div class="form-group">\n            <label for="endpoint_public_url" class="col-sm-3 col-lg-2 control-label text-left">\n              Public IP\n              <portainer-tooltip position="bottom" message="URL or IP address where exposed containers will be reachable. This field is optional and will default to the endpoint URL."></portainer-tooltip>\n            </label>\n            <div class="col-sm-9 col-lg-10">\n              <input type="text" class="form-control" id="endpoint_public_url" ng-model="endpoint.PublicURL" placeholder="e.g. 10.0.0.10 or mydocker.mydomain.com">\n            </div>\n          </div>\n          \x3c!-- !endpoint-public-url-input --\x3e\n          \x3c!-- tls-checkbox --\x3e\n          <div class="form-group" ng-if="endpointType === \'remote\'">\n            <div class="col-sm-12">\n              <label for="tls" class="control-label text-left">\n                TLS\n                <portainer-tooltip position="bottom" message="Enable this option if you need to specify TLS certificates to connect to the Docker endpoint."></portainer-tooltip>\n              </label>\n              <label class="switch" style="margin-left: 20px;">\n                <input type="checkbox" ng-model="endpoint.TLS"><i></i>\n              </label>\n            </div>\n          </div>\n          \x3c!-- !tls-checkbox --\x3e\n          \x3c!-- tls-certs --\x3e\n          <div ng-if="endpoint.TLS">\n            \x3c!-- ca-input --\x3e\n            <div class="form-group">\n              <label class="col-sm-2 control-label text-left">TLS CA certificate</label>\n              <div class="col-sm-10">\n                <button class="btn btn-sm btn-primary" ngf-select ng-model="formValues.TLSCACert">Select file</button>\n                <span style="margin-left: 5px;">\n                  <span ng-if="formValues.TLSCACert !== endpoint.TLSCACert">{{ formValues.TLSCACert.name }}</span>\n                  <i class="fa fa-check green-icon" ng-if="formValues.TLSCACert && formValues.TLSCACert === endpoint.TLSCACert" aria-hidden="true"></i>\n                  <i class="fa fa-times red-icon" ng-if="!formValues.TLSCACert" aria-hidden="true"></i>\n                  <i class="fa fa-circle-o-notch fa-spin" ng-if="state.uploadInProgress"></i>\n                </span>\n              </div>\n            </div>\n            \x3c!-- !ca-input --\x3e\n            \x3c!-- cert-input --\x3e\n            <div class="form-group">\n              <label for="tls_cert" class="col-sm-2 control-label text-left">TLS certificate</label>\n              <div class="col-sm-10">\n                <button class="btn btn-sm btn-primary" ngf-select ng-model="formValues.TLSCert">Select file</button>\n                <span style="margin-left: 5px;">\n                  <span ng-if="formValues.TLSCert !== endpoint.TLSCert">{{ formValues.TLSCert.name }}</span>\n                  <i class="fa fa-check green-icon" ng-if="formValues.TLSCert && formValues.TLSCert === endpoint.TLSCert" aria-hidden="true"></i>\n                  <i class="fa fa-times red-icon" ng-if="!formValues.TLSCert" aria-hidden="true"></i>\n                  <i class="fa fa-circle-o-notch fa-spin" ng-if="state.uploadInProgress"></i>\n                </span>\n              </div>\n            </div>\n            \x3c!-- !cert-input --\x3e\n            \x3c!-- key-input --\x3e\n            <div class="form-group">\n              <label class="col-sm-2 control-label text-left">TLS key</label>\n              <div class="col-sm-10">\n                <button class="btn btn-sm btn-primary" ngf-select ng-model="formValues.TLSKey">Select file</button>\n                <span style="margin-left: 5px;">\n                  <span ng-if="formValues.TLSKey !== endpoint.TLSKey">{{ formValues.TLSKey.name }}</span>\n                  <i class="fa fa-check green-icon" ng-if="formValues.TLSKey && formValues.TLSKey === endpoint.TLSKey" aria-hidden="true"></i>\n                  <i class="fa fa-times red-icon" ng-if="!formValues.TLSKey" aria-hidden="true"></i>\n                  <i class="fa fa-circle-o-notch fa-spin" ng-if="state.uploadInProgress"></i>\n                </span>\n              </div>\n            </div>\n            \x3c!-- !key-input --\x3e\n          </div>\n          \x3c!-- !tls-certs --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-disabled="!endpoint.Name || !endpoint.URL || (endpoint.TLS && (!formValues.TLSCACert || !formValues.TLSCert || !formValues.TLSKey))" ng-click="updateEndpoint()">Update endpoint</button>\n              <a type="button" class="btn btn-default btn-sm" ui-sref="endpoints">Cancel</a>\n              <i id="updateEndpointSpinner" class="fa fa-cog fa-spin" style="margin-left: 5px; display: none;"></i>\n              <span class="text-danger" ng-if="state.error" style="margin: 5px;">\n                <i class="fa fa-exclamation-circle" aria-hidden="true"></i> {{ state.error }}\n              </span>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),angular.module("app/components/endpointAccess/endpointAccess.html",[]).run(["$templateCache",function(a){a.put("app/components/endpointAccess/endpointAccess.html",'<rd-header>\n  <rd-header-title title="Endpoint access">\n    <i id="loadingViewSpinner" class="fa fa-cog fa-spin"></i>\n  </rd-header-title>\n  <rd-header-content>\n    <a ui-sref="endpoints">Endpoints</a> &gt; <a ui-sref="endpoint({id: endpoint.Id})">{{ endpoint.Name }}</a> &gt; Access management\n  </rd-header-content>\n</rd-header>\n\n<div class="row" ng-if="endpoint">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-plug" title="Endpoint"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>Name</td>\n              <td>\n                {{ endpoint.Name }}\n              </td>\n            </tr>\n            <tr>\n              <td>URL</td>\n              <td>\n                {{ endpoint.URL | stripprotocol }}\n              </td>\n            </tr>\n            <tr>\n              <td colspan="2">\n                <span class="small text-muted">\n                  You can select which user or team can access this endpoint by moving them to the authorized accesses table. Simply click\n                  on a user or team entry to move it from one table to the other.\n                </span>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<por-access-management ng-if="endpoint" access-controlled-entity="endpoint" update-access="updateAccess(userAccesses, teamAccesses)">\n</por-access-management>\n')}]),angular.module("app/components/endpoints/endpoints.html",[]).run(["$templateCache",function(a){
a.put("app/components/endpoints/endpoints.html",'<rd-header>\n  <rd-header-title title="Endpoints">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="endpoints" ui-sref-opts="{reload: true}">\n      <i class="fa fa-refresh" aria-hidden="true"></i>\n    </a>\n    <i id="loadEndpointsSpinner" class="fa fa-cog fa-spin" style="margin-left: 5px;"></i>\n  </rd-header-title>\n  <rd-header-content>Endpoint management</rd-header-content>\n</rd-header>\n\n<div class="row" ng-if="!applicationState.application.endpointManagement">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-exclamation-triangle" title="Endpoint management is not available">\n      </rd-widget-header>\n      <rd-widget-body>\n        <span class="small text-muted">Portainer has been started using the <code>--external-endpoints</code> flag.\n          Endpoint management via the UI is disabled.\n          <span ng-if="applicationState.application.authentication">You can still manage endpoint access.</span>\n        </span>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row" ng-if="applicationState.application.endpointManagement">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-plus" title="Add a new endpoint">\n      </rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="container_name" class="col-sm-3 col-lg-2 control-label text-left">Name</label>\n            <div class="col-sm-9 col-lg-10">\n              <input type="text" class="form-control" id="container_name" ng-model="formValues.Name" placeholder="e.g. docker-prod01">\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          \x3c!-- endpoint-url-input --\x3e\n          <div class="form-group">\n            <label for="endpoint_url" class="col-sm-3 col-lg-2 control-label text-left">\n              Endpoint URL\n              <portainer-tooltip position="bottom" message="URL or IP address of a Docker host. The Docker API must be exposed over a TCP port. Please refer to the Docker documentation to configure it."></portainer-tooltip>\n            </label>\n            <div class="col-sm-9 col-lg-10">\n              <input type="text" class="form-control" id="endpoint_url" ng-model="formValues.URL" placeholder="e.g. 10.0.0.10:2375 or mydocker.mydomain.com:2375">\n            </div>\n          </div>\n          \x3c!-- !endpoint-url-input --\x3e\n          \x3c!-- endpoint-public-url-input --\x3e\n          <div class="form-group">\n            <label for="endpoint_public_url" class="col-sm-3 col-lg-2 control-label text-left">\n              Public IP\n              <portainer-tooltip position="bottom" message="URL or IP address where exposed containers will be reachable. This field is optional and will default to the endpoint URL."></portainer-tooltip>\n            </label>\n            <div class="col-sm-9 col-lg-10">\n              <input type="text" class="form-control" id="endpoint_public_url" ng-model="formValues.PublicURL" placeholder="e.g. 10.0.0.10 or mydocker.mydomain.com">\n            </div>\n          </div>\n          \x3c!-- !endpoint-public-url-input --\x3e\n          \x3c!-- tls-checkbox --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label for="tls" class="control-label text-left">\n                TLS\n                <portainer-tooltip position="bottom" message="Enable this option if you need to specify TLS certificates to connect to the Docker endpoint."></portainer-tooltip>\n              </label>\n              <label class="switch" style="margin-left: 20px;">\n                <input type="checkbox" ng-model="formValues.TLS"><i></i>\n              </label>\n            </div>\n          </div>\n          \x3c!-- !tls-checkbox --\x3e\n          \x3c!-- tls-certs --\x3e\n          <div ng-if="formValues.TLS">\n            \x3c!-- ca-input --\x3e\n            <div class="form-group">\n              <label class="col-sm-2 control-label text-left">TLS CA certificate</label>\n              <div class="col-sm-10">\n                <button class="btn btn-sm btn-primary" ngf-select ng-model="formValues.TLSCACert">Select file</button>\n                <span style="margin-left: 5px;">\n                  {{ formValues.TLSCACert.name }}\n                  <i class="fa fa-times red-icon" ng-if="!formValues.TLSCACert" aria-hidden="true"></i>\n                  <i class="fa fa-circle-o-notch fa-spin" ng-if="state.uploadInProgress"></i>\n                </span>\n              </div>\n            </div>\n            \x3c!-- !ca-input --\x3e\n            \x3c!-- cert-input --\x3e\n            <div class="form-group">\n              <label for="tls_cert" class="col-sm-2 control-label text-left">TLS certificate</label>\n              <div class="col-sm-10">\n                <button class="btn btn-sm btn-primary" ngf-select ng-model="formValues.TLSCert">Select file</button>\n                <span style="margin-left: 5px;">\n                  {{ formValues.TLSCert.name }}\n                  <i class="fa fa-times red-icon" ng-if="!formValues.TLSCert" aria-hidden="true"></i>\n                  <i class="fa fa-circle-o-notch fa-spin" ng-if="state.uploadInProgress"></i>\n                </span>\n              </div>\n            </div>\n            \x3c!-- !cert-input --\x3e\n            \x3c!-- key-input --\x3e\n            <div class="form-group">\n              <label class="col-sm-2 control-label text-left">TLS key</label>\n              <div class="col-sm-10">\n                <button class="btn btn-sm btn-primary" ngf-select ng-model="formValues.TLSKey">Select file</button>\n                <span style="margin-left: 5px;">\n                  {{ formValues.TLSKey.name }}\n                  <i class="fa fa-times red-icon" ng-if="!formValues.TLSKey" aria-hidden="true"></i>\n                  <i class="fa fa-circle-o-notch fa-spin" ng-if="state.uploadInProgress"></i>\n                </span>\n              </div>\n            </div>\n            \x3c!-- !key-input --\x3e\n          </div>\n          \x3c!-- !tls-certs --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-disabled="!formValues.Name || !formValues.URL || (formValues.TLS && (!formValues.TLSCACert || !formValues.TLSCert || !formValues.TLSKey))" ng-click="addEndpoint()">Add endpoint</button>\n              <i id="createEndpointSpinner" class="fa fa-cog fa-spin" style="margin-left: 5px; display: none;"></i>\n              <span class="text-danger" ng-if="state.error" style="margin: 5px;">\n                <i class="fa fa-exclamation-circle" aria-hidden="true"></i> {{ state.error }}\n              </span>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-plug" title="Endpoints">\n        <div class="pull-right">\n          Items per page:\n          <select ng-model="state.pagination_count" ng-change="changePaginationCount()">\n            <option value="0">All</option>\n            <option value="10">10</option>\n            <option value="25">25</option>\n            <option value="50">50</option>\n            <option value="100">100</option>\n          </select>\n        </div>\n      </rd-widget-header>\n      <rd-widget-taskbar classes="col-lg-12">\n        <div class="pull-left" ng-if="applicationState.application.endpointManagement">\n          <button type="button" class="btn btn-danger" ng-click="removeAction()" ng-disabled="!state.selectedItemCount"><i class="fa fa-trash space-right" aria-hidden="true"></i>Remove</button>\n        </div>\n        <div class="pull-right">\n          <input type="text" id="filter" ng-model="state.filter" placeholder="Filter..." class="form-control input-sm" />\n        </div>\n      </rd-widget-taskbar>\n      <rd-widget-body classes="no-padding">\n        <div class="table-responsive">\n          <table class="table table-hover">\n            <thead>\n              <tr>\n                <th ng-if="applicationState.application.endpointManagement">\n                  <input type="checkbox" ng-model="allSelected" ng-change="selectItems(allSelected)" />\n                </th>\n                <th>\n                  <a ui-sref="endpoints" ng-click="order(\'Name\')">\n                    Name\n                    <span ng-show="sortType == \'Name\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                    <span ng-show="sortType == \'Name\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                  </a>\n                </th>\n                <th>\n                  <a ui-sref="endpoints" ng-click="order(\'URL\')">\n                    URL\n                    <span ng-show="sortType == \'URL\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                    <span ng-show="sortType == \'URL\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                  </a>\n                </th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr dir-paginate="endpoint in (state.filteredEndpoints = (endpoints | filter:state.filter | orderBy:sortType:sortReverse | itemsPerPage: state.pagination_count))">\n                <td ng-if="applicationState.application.endpointManagement"><input type="checkbox" ng-model="endpoint.Checked" ng-change="selectItem(endpoint)" /></td>\n                <td><i class="fa fa-star" aria-hidden="true" ng-if="endpoint.Id === activeEndpoint.Id"></i> {{ endpoint.Name }}</td>\n                <td>{{ endpoint.URL | stripprotocol }}</td>\n                <td>\n                  <span ng-if="applicationState.application.endpointManagement">\n                    <a ui-sref="endpoint({id: endpoint.Id})"><i class="fa fa-pencil-square-o" aria-hidden="true"></i> Edit</a>\n                  </span>\n                  <span ng-if="applicationState.application.authentication">\n                    <a ui-sref="endpoint.access({id: endpoint.Id})"><i class="fa fa-users" aria-hidden="true" style="margin-left: 7px;"></i> Manage access</a>\n                  </span>\n              </td>\n              </tr>\n              <tr ng-if="!endpoints">\n                <td colspan="5" class="text-center text-muted">Loading...</td>\n              </tr>\n              <tr ng-if="endpoints.length == 0">\n                <td colspan="5" class="text-center text-muted">No endpoints available.</td>\n              </tr>\n            </tbody>\n          </table>\n          <div ng-if="endpoints" class="pull-left pagination-controls">\n            <dir-pagination-controls></dir-pagination-controls>\n          </div>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),angular.module("app/components/events/events.html",[]).run(["$templateCache",function(a){a.put("app/components/events/events.html",'<rd-header>\n  <rd-header-title title="Event list">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="events" ui-sref-opts="{reload: true}">\n      <i class="fa fa-refresh" aria-hidden="true"></i>\n    </a>\n    <i id="loadEventsSpinner" class="fa fa-cog fa-spin" style="margin-left: 5px;"></i>\n  </rd-header-title>\n  <rd-header-content>Events</rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-history" title="Events">\n        <div class="pull-right">\n          Items per page:\n          <select ng-model="state.pagination_count" ng-change="changePaginationCount()">\n            <option value="0">All</option>\n            <option value="10">10</option>\n            <option value="25">25</option>\n            <option value="50">50</option>\n            <option value="100">100</option>\n          </select>\n        </div>\n      </rd-widget-header>\n      <rd-widget-taskbar classes="col-lg-12">\n        <div class="pull-right">\n          <input type="text" id="filter" ng-model="state.filter" placeholder="Filter..." class="form-control input-sm" />\n        </div>\n      </rd-widget-taskbar>\n      <rd-widget-body classes="no-padding">\n        <div class="table-responsive">\n          <table class="table table-hover">\n            <thead>\n              <tr>\n                <th>\n                  <a ui-sref="events" ng-click="order(\'Time\')">\n                    Date\n                    <span ng-show="sortType == \'Time\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                    <span ng-show="sortType == \'Time\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                  </a>\n                </th>\n                <th>\n                  <a ui-sref="events" ng-click="order(\'Type\')">\n                    Category\n                    <span ng-show="sortType == \'Type\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                    <span ng-show="sortType == \'Type\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                  </a>\n                </th>\n                <th>\n                  <a ui-sref="events" ng-click="order(\'Details\')">\n                    Details\n                    <span ng-show="sortType == \'Details\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                    <span ng-show="sortType == \'Details\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                  </a>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr dir-paginate="event in (events | filter:state.filter | orderBy:sortType:sortReverse | itemsPerPage: state.pagination_count)">\n                <td>{{ event.Time|getisodatefromtimestamp }}</td>\n                <td>{{ event.Type }}</td>\n                <td>{{ event.Details }}</td>\n              </tr>\n            </tbody>\n          </table>\n          <div ng-if="events" class="pull-left pagination-controls">\n            <dir-pagination-controls></dir-pagination-controls>\n          </div>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),angular.module("app/components/image/image.html",[]).run(["$templateCache",function(a){a.put("app/components/image/image.html",'<rd-header>\n  <rd-header-title title="Image details">\n    <i id="loadingViewSpinner" class="fa fa-cog fa-spin"></i>\n  </rd-header-title>\n  <rd-header-content>\n    <a ui-sref="images">Images</a> &gt; <a ui-sref="image({id: image.Id})">{{ image.Id }}</a>\n  </rd-header-content>\n</rd-header>\n\n<div class="row" ng-if="image.RepoTags.length > 0">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa fa-tags" title="Image tags"></rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          <div class="form-group">\n            <div class="row">\n              <div class="pull-left" ng-repeat="tag in image.RepoTags" style="display:table">\n                <div class="input-group col-md-1" style="padding:0 15px">\n                  <span class="input-group-addon">{{ tag }}</span>\n                  <span class="input-group-btn">\n                    <a data-toggle="tooltip" class="btn btn-primary interactive" title="Push to registry" ng-click="pushTag(tag)">\n                      <span class="fa fa-upload white-icon" aria-hidden="true"></span>\n                    </a>\n                    <a data-toggle="tooltip" class="btn btn-primary interactive" title="Pull from registry" ng-click="pullTag(tag)">\n                      <span class="fa fa-download white-icon" aria-hidden="true"></span>\n                    </a>\n                    <a data-toggle="tooltip" class="btn btn-primary interactive" title="Remove tag" ng-click="removeTag(tag)">\n                      <span class="fa fa-trash-o white-icon" aria-hidden="true"></span>\n                    </a>\n                  </span>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <span class="small text-muted">\n                Note: you can click on the upload icon <span class="fa fa-upload" aria-hidden="true"></span> to push an image\n                or on the download icon <span class="fa fa-download" aria-hidden="true"></span> to pull an image\n                or on the trash icon <span class="fa fa-trash-o" aria-hidden="true"></span> to delete a tag.\n              </span>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-tag" title="Tag the image"></rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          \x3c!-- image-and-registry --\x3e\n          <div class="form-group">\n            <por-image-registry image="formValues.Image" registry="formValues.Registry"></por-image-registry>\n          </div>\n          \x3c!-- !image-and-registry --\x3e\n          \x3c!-- tag-note --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <span class="small text-muted">Note: if you don\'t specify the tag in the image name, <span class="label label-default">latest</span> will be used.</span>\n            </div>\n          </div>\n          \x3c!-- !tag-note --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-disabled="!formValues.Image" ng-click="tagImage()">Tag</button>\n              <i id="pullImageSpinner" class="fa fa-cog fa-spin" style="margin-left: 5px; display: none;"></i>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-clone" title="Image details"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>ID</td>\n              <td>\n                {{ image.Id }}\n                <button class="btn btn-xs btn-danger" ng-click="removeImage(image.Id)"><i class="fa fa-trash space-right" aria-hidden="true"></i>Delete this image</button>\n              </td>\n            </tr>\n            <tr ng-if="image.Parent">\n              <td>Parent</td>\n              <td><a ui-sref="image({id: image.Parent})">{{ image.Parent }}</a></td>\n            </tr>\n            <tr>\n              <td>Size</td>\n              <td>{{ image.VirtualSize|humansize }}</td>\n            </tr>\n            <tr>\n              <td>Created</td>\n              <td>{{ image.Created|getisodate }}</td>\n            </tr>\n            <tr>\n              <td>Build</td>\n              <td>Docker {{ image.DockerVersion }} on {{ image.Os}}, {{ image.Architecture }}</td>\n            </tr>\n            <tr ng-if="image.Author">\n              <td>Author</td>\n              <td>{{ image.Author }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-clone" title="Dockerfile details"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>CMD</td>\n              <td><code>{{ image.Command|command }}</code></td>\n            </tr>\n            <tr ng-if="image.Entrypoint">\n              <td>ENTRYPOINT</td>\n              <td><code>{{ image.Entrypoint|command }}</code></td>\n            </tr>\n            <tr ng-if="image.ExposedPorts.length > 0">\n              <td>EXPOSE</td>\n              <td>\n                <span class="label label-default space-right" ng-repeat="port in image.ExposedPorts">\n                  {{ port }}\n                </span>\n              </td>\n            </tr>\n            <tr ng-if="image.Volumes.length > 0">\n              <td>VOLUME</td>\n              <td>\n                <span class="label label-default space-right" ng-repeat="volume in image.Volumes">\n                  {{ volume }}\n                </span>\n              </td>\n            </tr>\n            <tr ng-if="image.Env.length > 0">\n              <td>ENV</td>\n              <td>\n                <table class="table table-bordered table-condensed">\n                  <tr ng-repeat="var in image.Env">\n                    <td>{{ var|key: \'=\' }}</td>\n                    <td>{{ var|value: \'=\' }}</td>\n                  </tr>\n                </table>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row" ng-if="history.length > 0">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-clone" title="Image layers"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table id="image-layers" class="table">\n          <thead>\n            <th>\n              <a ng-click="order(\'Size\')">\n                Size\n                <span ng-show="sortType == \'Size\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                <span ng-show="sortType == \'Size\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n              </a>\n            </th>\n            <th>\n              <a ng-click="order(\'CreatedBy\')">\n                Layer\n                <span ng-show="sortType == \'CreatedBy\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                <span ng-show="sortType == \'CreatedBy\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n              </a>\n            </th>\n          </thead>\n          <tbody>\n            <tr ng-repeat="layer in history | orderBy:sortType:sortReverse">\n              <td style="white-space:nowrap;">\n                {{ layer.Size | humansize }}\n              </td>\n              <td class="expand">\n                <div ng-if="layer.CreatedBy.length > 130">\n                  <span id="layer-command-{{$index}}-full" style="display: none">\n                    {{ layer.CreatedBy | imagelayercommand }}\n                  </span>\n                  <span id="layer-command-{{$index}}-short">\n                    {{ layer.CreatedBy | imagelayercommand | truncate:130 }}\n                    <span ng-if="layer.CreatedBy.length > 130" style="margin-left: 5px;">\n                      <a id="layer-command-expander{{$index}}" class="btn" ng-click=\'toggleLayerCommand($index)\'>\n                        <i class="fa fa-plus-circle" aria-hidden="true"></i>\n                      </a>\n                    </span>\n                  </span>\n                </div>\n                <div ng-if="layer.CreatedBy.length <= 130">\n                  <span id="layer-command-{{$index}}-full">\n                    {{ layer.CreatedBy | imagelayercommand }}\n                  </span>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),angular.module("app/components/images/images.html",[]).run(["$templateCache",function(a){a.put("app/components/images/images.html",'<rd-header>\n  <rd-header-title title="Image list">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="images" ui-sref-opts="{reload: true}">\n      <i class="fa fa-refresh" aria-hidden="true"></i>\n    </a>\n    <i id="loadImagesSpinner" class="fa fa-cog fa-spin" style="margin-left: 5px;"></i>\n  </rd-header-title>\n  <rd-header-content>Images</rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-download" title="Pull image ">\n      </rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          \x3c!-- image-and-registry --\x3e\n          <div class="form-group">\n            <por-image-registry image="formValues.Image" registry="formValues.Registry"></por-image-registry>\n          </div>\n          \x3c!-- !image-and-registry --\x3e\n          \x3c!-- tag-note --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <span class="small text-muted">Note: if you don\'t specify the tag in the image name, <span class="label label-default">latest</span> will be used.</span>\n            </div>\n          </div>\n          \x3c!-- !tag-note --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-disabled="!formValues.Image" ng-click="pullImage()">Pull</button>\n              <i id="pullImageSpinner" class="fa fa-cog fa-spin" style="margin-left: 5px; display: none;"></i>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-clone" title="Images">\n        <div class="pull-right">\n          Items per page:\n          <select ng-model="state.pagination_count" ng-change="changePaginationCount()">\n            <option value="0">All</option>\n            <option value="10">10</option>\n            <option value="25">25</option>\n            <option value="50">50</option>\n            <option value="100">100</option>\n          </select>\n        </div>\n      </rd-widget-header>\n      <rd-widget-taskbar classes="col-lg-12">\n        <div class="pull-left">\n          <div class="btn-group">\n            <button type="button" class="btn btn-danger" ng-click="removeAction()" ng-disabled="!state.selectedItemCount"><i class="fa fa-trash space-right" aria-hidden="true"></i>Remove</button>\n            <button type="button" class="btn btn-danger dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" ng-disabled="!state.selectedItemCount" >\n              <span class="caret"></span>\n              <span class="sr-only">Toggle Dropdown</span>\n            </button>\n            <ul class="dropdown-menu">\n              <li><a ng-click="confirmRemovalAction(true)" ng-disabled="!state.selectedItemCount" >Force Remove</a></li>\n            </ul>\n          </div>\n        </div>\n        <div class="pull-right">\n          <input type="text" id="filter" ng-model="state.filter" placeholder="Filter..." class="form-control input-sm" />\n        </div>\n        <span class="btn-group btn-group-sm pull-right" style="margin-right: 20px;">\n          <label class="btn btn-primary" ng-model="state.containersCountFilter" uib-btn-radio="undefined">\n            All\n          </label>\n          <label class="btn btn-primary" ng-model="state.containersCountFilter" uib-btn-radio="\'!\' + 0">\n            Used\n          </label>\n          <label class="btn btn-primary" ng-model="state.containersCountFilter" uib-btn-radio="0">\n            Unused\n          </label>\n        </span>\n      </rd-widget-taskbar>\n      <rd-widget-body classes="no-padding">\n        <div class="table-responsive">\n          <table class="table table-hover">\n            <thead>\n              <tr>\n                <th>\n                  <input type="checkbox" ng-model="allSelected" ng-change="selectItems(allSelected)" />\n                </th>\n                <th>\n                  <a ui-sref="images" ng-click="order(\'Id\')">\n                    Id\n                    <span ng-show="sortType == \'Id\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                    <span ng-show="sortType == \'Id\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                  </a>\n                </th>\n                <th>\n                  <a ui-sref="images" ng-click="order(\'RepoTags\')">\n                    Tags\n                    <span ng-show="sortType == \'RepoTags\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                    <span ng-show="sortType == \'RepoTags\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                  </a>\n                </th>\n                <th>\n                  <a ui-sref="images" ng-click="order(\'VirtualSize\')">\n                    Size\n                    <span ng-show="sortType == \'VirtualSize\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                    <span ng-show="sortType == \'VirtualSize\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                  </a>\n                </th>\n                <th>\n                  <a ui-sref="images" ng-click="order(\'Created\')">\n                    Created\n                    <span ng-show="sortType == \'Created\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                    <span ng-show="sortType == \'Created\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                  </a>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr dir-paginate="image in (state.filteredImages = (images | filter:{ ContainerCount: state.containersCountFilter } | filter:state.filter | orderBy:sortType:sortReverse | itemsPerPage: state.pagination_count))">\n                <td><input type="checkbox" ng-model="image.Checked" ng-change="selectItem(image)" /></td>\n                <td>\n                  <a class="monospaced" ui-sref="image({id: image.Id})">{{ image.Id|truncate:20}}</a>\n                  <span style="margin-left: 10px;" class="label label-warning image-tag"\n                    ng-if="::image.ContainerCount === 0">\n                    Unused\n                  </span>\n                </td>\n                <td>\n                  <span class="label label-primary image-tag" ng-repeat="tag in (image|repotags)">{{ tag }}</span>\n                </td>\n                <td>{{ image.VirtualSize|humansize }}</td>\n                <td>{{ image.Created|getisodatefromtimestamp }}</td>\n              </tr>\n              <tr ng-if="!images">\n                <td colspan="5" class="text-center text-muted">Loading...</td>\n              </tr>\n              <tr ng-if="state.filteredImages.length === 0">\n                <td colspan="5" class="text-center text-muted">No images available.</td>\n              </tr>\n            </tbody>\n          </table>\n          <div ng-if="images" class="pull-left pagination-controls">\n            <dir-pagination-controls></dir-pagination-controls>\n          </div>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),angular.module("app/components/initAdmin/initAdmin.html",[]).run(["$templateCache",function(a){
a.put("app/components/initAdmin/initAdmin.html",'<div class="page-wrapper">\n  \x3c!-- simple box --\x3e\n  <div class="container simple-box">\n    <div class="col-md-8 col-md-offset-2 col-sm-10 col-sm-offset-1">\n      \x3c!-- simple box logo --\x3e\n      <div class="row">\n        <img ng-if="logo" ng-src="{{ logo }}" class="simple-box-logo">\n        <img ng-if="!logo" src="images/logo_alt.png" class="simple-box-logo" alt="Portainer">\n      </div>\n      \x3c!-- !simple box logo --\x3e\n      \x3c!-- init password panel --\x3e\n      <div class="panel panel-default">\n        <div class="panel-body">\n          \x3c!-- init password form --\x3e\n          <form class="simple-box-form form-horizontal">\n            \x3c!-- note --\x3e\n            <div class="form-group">\n              <div class="col-sm-12">\n                <span class="small text-muted">\n                  Please create the initial administrator user.\n                </span>\n              </div>\n            </div>\n            \x3c!-- !note --\x3e\n            \x3c!-- username-input --\x3e\n            <div class="form-group">\n              <label for="username" class="col-sm-4 control-label text-left">\n                Username\n              </label>\n              <div class="col-sm-8">\n                <input type="text" class="form-control" id="username" ng-model="formValues.Username" placeholder="e.g. admin">\n              </div>\n            </div>\n            \x3c!-- !username-input --\x3e\n            \x3c!-- new-password-input --\x3e\n            <div class="form-group">\n              <label for="password" class="col-sm-4 control-label text-left">Password</label>\n              <div class="col-sm-8">\n                <input type="password" class="form-control" ng-model="formValues.Password" id="password">\n              </div>\n            </div>\n            \x3c!-- !new-password-input --\x3e\n            \x3c!-- confirm-password-input --\x3e\n            <div class="form-group">\n              <label for="confirm_password" class="col-sm-4 control-label text-left">Confirm password</label>\n              <div class="col-sm-8">\n                <div class="input-group">\n                  <input type="password" class="form-control" ng-model="formValues.ConfirmPassword" id="confirm_password">\n                  <span class="input-group-addon"><i ng-class="{true: \'fa fa-check green-icon\', false: \'fa fa-times red-icon\'}[formValues.Password !== \'\' && formValues.Password === formValues.ConfirmPassword]" aria-hidden="true"></i></span>\n                </div>\n              </div>\n            </div>\n            \x3c!-- !confirm-password-input --\x3e\n            \x3c!-- note --\x3e\n            <div class="form-group">\n              <div class="col-sm-12">\n                <span class="small text-muted">\n                  <i ng-class="{true: \'fa fa-check green-icon\', false: \'fa fa-times red-icon\'}[formValues.Password.length >= 8]" aria-hidden="true"></i>\n                  The password must be at least 8 characters long\n                </span>\n              </div>\n            </div>\n            \x3c!-- !note --\x3e\n            \x3c!-- actions --\x3e\n            <div class="form-group">\n              <div class="col-sm-12">\n                <button type="submit" class="btn btn-primary btn-sm" ng-disabled="formValues.Password.length < 8 || formValues.Password !== formValues.ConfirmPassword" ng-click="createAdminUser()"><i class="fa fa-user-plus" aria-hidden="true"></i> Create user</button>\n                <i id="createResourceSpinner" class="fa fa-cog fa-spin" style="margin-left: 5px; display: none;"></i>\n              </div>\n            </div>\n            \x3c!-- !actions --\x3e\n          </form>\n          \x3c!-- !init password form --\x3e\n        </div>\n      </div>\n      \x3c!-- !init password panel --\x3e\n    </div>\n  </div>\n  \x3c!-- !simple box --\x3e\n</div>\n')}]),angular.module("app/components/initEndpoint/initEndpoint.html",[]).run(["$templateCache",function(a){a.put("app/components/initEndpoint/initEndpoint.html",'<div class="page-wrapper">\n  \x3c!-- simple box --\x3e\n  <div class="container simple-box">\n    <div class="col-md-8 col-md-offset-2 col-sm-10 col-sm-offset-1">\n      \x3c!-- simple box logo --\x3e\n      <div class="row">\n        <img ng-if="logo" ng-src="{{ logo }}" class="simple-box-logo">\n        <img ng-if="!logo" src="images/logo_alt.png" class="simple-box-logo" alt="Portainer">\n      </div>\n      \x3c!-- !simple box logo --\x3e\n      \x3c!-- init-endpoint panel --\x3e\n      <div class="panel panel-default">\n        <div class="panel-body">\n          \x3c!-- init-endpoint form --\x3e\n          <form class="simple-box-form form-horizontal">\n            \x3c!-- note --\x3e\n            <div class="form-group">\n              <div class="col-sm-12">\n                <span class="small text-muted">\n                  Connect Portainer to the Docker environment you want to manage.\n                </span>\n              </div>\n            </div>\n            \x3c!-- !note --\x3e\n            \x3c!-- endpoint-type --\x3e\n            <div class="form-group" style="margin-bottom: 0">\n              <div class="boxselector_wrapper">\n                <div>\n                  <input type="radio" id="local_endpoint" ng-model="formValues.EndpointType" value="local">\n                  <label for="local_endpoint">\n                    <div class="boxselector_header">\n                      <i class="fa fa-bolt" aria-hidden="true" style="margin-right: 2px;"></i>\n                      Local\n                    </div>\n                    <p>Manage the Docker environment where Portainer is running</p>\n                  </label>\n                </div>\n                <div>\n                  <input type="radio" id="remote_endpoint" ng-model="formValues.EndpointType" value="remote">\n                  <label for="remote_endpoint">\n                    <div class="boxselector_header">\n                      <i class="fa fa-plug" aria-hidden="true" style="margin-right: 2px;"></i>\n                      Remote\n                    </div>\n                    <p>Manage a remote Docker environment</p>\n                  </label>\n                </div>\n              </div>\n            </div>\n            \x3c!-- !endpoint-type  --\x3e\n            \x3c!-- local-endpoint --\x3e\n            <div ng-if="formValues.EndpointType === \'local\'">\n              <div class="form-group">\n                <div class="col-sm-12">\n                  <span class="small">\n                    <p class="text-muted">\n                      <i class="fa fa-exclamation-triangle orange-icon" aria-hidden="true" style="margin-right: 2px;"></i>\n                      This feature is not yet available for <u>native Docker Windows containers</u>.\n                    </p>\n                    <p class="text-primary">\n                      Please ensure that you have started the Portainer container with the following Docker flag <code>-v "/var/run/docker.sock:/var/run/docker.sock"</code> in order to connect to the local Docker environment.\n                    </p>\n                  </span>\n                </div>\n              </div>\n              \x3c!-- actions --\x3e\n              <div class="form-group">\n                <div class="col-sm-12">\n                  <button type="submit" class="btn btn-primary btn-sm" ng-click="createLocalEndpoint()"><i class="fa fa-bolt" aria-hidden="true"></i> Connect</button>\n                  <i id="createResourceSpinner" class="fa fa-cog fa-spin" style="margin-left: 5px; display: none;"></i>\n                </div>\n              </div>\n              \x3c!-- !actions --\x3e\n            </div>\n            \x3c!-- !local-endpoint --\x3e\n            \x3c!-- remote-endpoint --\x3e\n            <div ng-if="formValues.EndpointType === \'remote\'">\n              \x3c!-- name-input --\x3e\n              <div class="form-group">\n                <label for="endpoint_name" class="col-sm-4 col-lg-3 control-label text-left">Name</label>\n                <div class="col-sm-8 col-lg-9">\n                  <input type="text" class="form-control" id="endpoint_name" ng-model="formValues.Name" placeholder="e.g. docker-prod01">\n                </div>\n              </div>\n              \x3c!-- !name-input --\x3e\n              \x3c!-- endpoint-url-input --\x3e\n              <div class="form-group">\n                <label for="endpoint_url" class="col-sm-4 col-lg-3 control-label text-left">\n                  Endpoint URL\n                  <portainer-tooltip position="bottom" message="URL or IP address of a Docker host. The Docker API must be exposed over a TCP port. Please refer to the Docker documentation to configure it."></portainer-tooltip>\n                </label>\n                <div class="col-sm-8 col-lg-9">\n                  <input type="text" class="form-control" id="endpoint_url" ng-model="formValues.URL" placeholder="e.g. 10.0.0.10:2375 or mydocker.mydomain.com:2375">\n                </div>\n              </div>\n              \x3c!-- !endpoint-url-input --\x3e\n              \x3c!-- tls-checkbox --\x3e\n              <div class="form-group">\n                <div class="col-sm-12">\n                  <label for="tls" class="control-label text-left">\n                    TLS\n                    <portainer-tooltip position="bottom" message="Enable this option if you need to specify TLS certificates to connect to the Docker endpoint."></portainer-tooltip>\n                  </label>\n                  <label class="switch" style="margin-left: 20px;">\n                    <input type="checkbox" ng-model="formValues.TLS"><i></i>\n                  </label>\n                </div>\n              </div>\n              \x3c!-- !tls-checkbox --\x3e\n              \x3c!-- tls-certs --\x3e\n              <div ng-if="formValues.TLS">\n                \x3c!-- ca-input --\x3e\n                <div class="form-group">\n                  <label class="col-sm-3 control-label text-left">TLS CA certificate</label>\n                  <div class="col-sm-9">\n                    <button class="btn btn-sm btn-primary" ngf-select ng-model="formValues.TLSCACert">Select file</button>\n                    <span style="margin-left: 5px;">\n                      {{ formValues.TLSCACert.name }}\n                      <i class="fa fa-times red-icon" ng-if="!formValues.TLSCACert" aria-hidden="true"></i>\n                      <i class="fa fa-circle-o-notch fa-spin" ng-if="state.uploadInProgress"></i>\n                    </span>\n                  </div>\n                </div>\n                \x3c!-- !ca-input --\x3e\n                \x3c!-- cert-input --\x3e\n                <div class="form-group">\n                  <label for="tls_cert" class="col-sm-3 control-label text-left">TLS certificate</label>\n                  <div class="col-sm-9">\n                    <button class="btn btn-sm btn-primary" ngf-select ng-model="formValues.TLSCert">Select file</button>\n                    <span style="margin-left: 5px;">\n                      {{ formValues.TLSCert.name }}\n                      <i class="fa fa-times red-icon" ng-if="!formValues.TLSCert" aria-hidden="true"></i>\n                      <i class="fa fa-circle-o-notch fa-spin" ng-if="state.uploadInProgress"></i>\n                    </span>\n                  </div>\n                </div>\n                \x3c!-- !cert-input --\x3e\n                \x3c!-- key-input --\x3e\n                <div class="form-group">\n                  <label class="col-sm-3 control-label text-left">TLS key</label>\n                  <div class="col-sm-9">\n                    <button class="btn btn-sm btn-primary" ngf-select ng-model="formValues.TLSKey">Select file</button>\n                    <span style="margin-left: 5px;">\n                      {{ formValues.TLSKey.name }}\n                      <i class="fa fa-times red-icon" ng-if="!formValues.TLSKey" aria-hidden="true"></i>\n                      <i class="fa fa-circle-o-notch fa-spin" ng-if="state.uploadInProgress"></i>\n                    </span>\n                  </div>\n                </div>\n                \x3c!-- !key-input --\x3e\n              </div>\n              \x3c!-- !tls-certs --\x3e\n              \x3c!-- actions --\x3e\n              <div class="form-group">\n                <div class="col-sm-12">\n                  <button type="submit" class="btn btn-primary btn-sm" ng-disabled="!formValues.Name || !formValues.URL || (formValues.TLS && (!formValues.TLSCACert || !formValues.TLSCert || !formValues.TLSKey))" ng-click="createRemoteEndpoint()"><i class="fa fa-plug" aria-hidden="true"></i> Connect</button>\n                  <i id="createResourceSpinner" class="fa fa-cog fa-spin" style="margin-left: 5px; display: none;"></i>\n                </div>\n              </div>\n              \x3c!-- !actions --\x3e\n            </div>\n            \x3c!-- !remote-endpoint --\x3e\n          </form>\n          \x3c!-- !init-endpoint form --\x3e\n        </div>\n      </div>\n      \x3c!-- !init-endpoint panel --\x3e\n    </div>\n  </div>\n  \x3c!-- !simple box --\x3e\n</div>\n')}]),angular.module("app/components/network/network.html",[]).run(["$templateCache",function(a){a.put("app/components/network/network.html",'<rd-header>\n  <rd-header-title title="Network details">\n    <i id="loadingViewSpinner" class="fa fa-cog fa-spin"></i>\n  </rd-header-title>\n  <rd-header-content>\n    <a ui-sref="networks">Networks</a> &gt; <a ui-sref="network({id: network.Id})">{{ network.Name }}</a>\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-sitemap" title="Network details"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>Name</td>\n              <td>{{ network.Name }}</td>\n            </tr>\n            <tr>\n              <td>ID</td>\n              <td>\n                {{ network.Id }}\n                <button class="btn btn-xs btn-danger" ng-click="removeNetwork(network.Id)"><i class="fa fa-trash space-right" aria-hidden="true"></i>Delete this network</button>\n              </td>\n            </tr>\n            <tr>\n              <td>Driver</td>\n              <td>{{ network.Driver }}</td>\n            </tr>\n            <tr>\n              <td>Scope</td>\n              <td>{{ network.Scope }}</td>\n            </tr>\n            <tr ng-if="network.IPAM.Config[0].Subnet">\n              <td>Subnet</td>\n              <td>{{ network.IPAM.Config[0].Subnet }}</td>\n            </tr>\n            <tr ng-if="network.IPAM.Config[0].Gateway">\n              <td>Gateway</td>\n              <td>{{ network.IPAM.Config[0].Gateway }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row" ng-if="!(network.Options | emptyobject)">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-cogs" title="Network options"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr ng-repeat="(key, value) in network.Options">\n              <td>{{ key }}</td>\n              <td>{{ value }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n\n<div class="row" ng-if="containersInNetwork.length > 0">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-server" title="Containers in network"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <thead>\n            <th>Container Name</th>\n            <th>IPv4 Address</th>\n            <th>IPv6 Address</th>\n            <th>MacAddress</th>\n            <th>Actions</th>\n          </thead>\n          <tbody>\n            <tr ng-repeat="container in containersInNetwork">\n              <td><a ui-sref="container({id: container.Id})">{{ container.Name }}</a></td>\n              <td>{{ container.IPv4Address || \'-\' }}</td>\n              <td>{{ container.IPv6Address || \'-\' }}</td>\n              <td>{{ container.MacAddress || \'-\' }}</td>\n              <td>\n                <button type="button" class="btn btn-xs btn-danger" ng-click="containerLeaveNetwork(network, container.Id)"><i class="fa fa-trash space-right" aria-hidden="true"></i>Leave Network</button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),angular.module("app/components/networks/networks.html",[]).run(["$templateCache",function(a){a.put("app/components/networks/networks.html",'<rd-header>\n  <rd-header-title title="Network list">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="networks" ui-sref-opts="{reload: true}">\n      <i class="fa fa-refresh" aria-hidden="true"></i>\n    </a>\n    <i id="loadNetworksSpinner" class="fa fa-cog fa-spin" style="margin-left: 5px;"></i>\n  </rd-header-title>\n  <rd-header-content>Networks</rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-plus" title="Add a network">\n      </rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="network_name" class="col-sm-1 control-label text-left">Name</label>\n            <div class="col-sm-11">\n              <input type="text" class="form-control" ng-model="config.Name" id="network_name" placeholder="e.g. myNetwork">\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          \x3c!-- tag-note --\x3e\n          <div class="form-group" ng-if="applicationState.endpoint.mode.provider === \'DOCKER_SWARM\' || applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\'">\n            <div class="col-sm-12">\n              <span class="small text-muted">Note: The network will be created using the overlay driver and will allow containers to communicate across the hosts of your cluster.</span>\n            </div>\n          </div>\n          <div class="form-group" ng-if="applicationState.endpoint.mode.provider === \'DOCKER_STANDALONE\' || applicationState.endpoint.mode.provider === \'VMWARE_VIC\'">\n            <div class="col-sm-12">\n              <span class="small text-muted">Note: The network will be created using the bridge driver.</span>\n            </div>\n          </div>\n          \x3c!-- !tag-note --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-disabled="!config.Name" ng-click="createNetwork()">Create</button>\n              <button type="button" class="btn btn-primary btn-sm" ui-sref="actions.create.network">Advanced settings...</button>\n              <i id="createNetworkSpinner" class="fa fa-cog fa-spin" style="margin-left: 5px; display: none;"></i>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-sitemap" title="Networks">\n        <div class="pull-right">\n          Items per page:\n          <select ng-model="state.pagination_count" ng-change="changePaginationCount()">\n            <option value="0">All</option>\n            <option value="10">10</option>\n            <option value="25">25</option>\n            <option value="50">50</option>\n            <option value="100">100</option>\n          </select>\n        </div>\n      </rd-widget-header>\n      <rd-widget-taskbar classes="col-lg-12">\n        <div class="pull-left">\n          <button type="button" class="btn btn-danger" ng-click="removeAction()" ng-disabled="!state.selectedItemCount"><i class="fa fa-trash space-right" aria-hidden="true"></i>Remove</button>\n        </div>\n        <div class="pull-right">\n          <input type="text" id="filter" ng-model="state.filter" placeholder="Filter..." class="form-control input-sm" />\n        </div>\n      </rd-widget-taskbar>\n      <rd-widget-body classes="no-padding">\n        <div class="table-responsive">\n          <table class="table table-hover">\n            <thead>\n              <tr>\n                <th>\n                  <input type="checkbox" ng-model="allSelected" ng-change="selectItems(allSelected)" />\n                </th>\n                <th>\n                  <a ui-sref="networks" ng-click="order(\'Name\')">\n                    Name\n                    <span ng-show="sortType == \'Name\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                    <span ng-show="sortType == \'Name\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                  </a>\n                </th>\n                <th>\n                  <a ui-sref="networks" ng-click="order(\'Id\')">\n                    Id\n                    <span ng-show="sortType == \'Id\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                    <span ng-show="sortType == \'Id\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                  </a>\n                </th>\n                <th>\n                  <a ui-sref="networks" ng-click="order(\'Scope\')">\n                    Scope\n                    <span ng-show="sortType == \'Scope\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                    <span ng-show="sortType == \'Scope\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                  </a>\n                </th>\n                <th>\n                  <a ui-sref="networks" ng-click="order(\'Driver\')">\n                    Driver\n                    <span ng-show="sortType == \'Driver\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                    <span ng-show="sortType == \'Driver\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                  </a>\n                </th>\n                <th>\n                  <a ui-sref="networks" ng-click="order(\'IPAM.Driver\')">\n                    IPAM Driver\n                    <span ng-show="sortType == \'IPAM.Driver\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                    <span ng-show="sortType == \'IPAM.Driver\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                  </a>\n                </th>\n                <th>\n                  <a ui-sref="networks" ng-click="order(\'IPAM.Config[0].Subnet\')">\n                    IPAM Subnet\n                    <span ng-show="sortType == \'IPAM.Config[0].Subnet\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                    <span ng-show="sortType == \'IPAM.Config[0].Subnet\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                  </a>\n                </th>\n                <th>\n                  <a ui-sref="networks" ng-click="order(\'IPAM.Config[0].Gateway\')">\n                    IPAM Gateway\n                    <span ng-show="sortType == \'IPAM.Config[0].Gateway\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                    <span ng-show="sortType == \'IPAM.Config[0].Gateway\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                  </a>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr dir-paginate="network in ( state.filteredNetworks = (networks | filter:state.filter | orderBy:sortType:sortReverse | itemsPerPage: state.pagination_count))">\n                <td><input type="checkbox" ng-model="network.Checked" ng-change="selectItem(network)"/></td>\n                <td><a ui-sref="network({id: network.Id})">{{ network.Name|truncate:40}}</a></td>\n                <td class="monospaced">{{ network.Id|truncate:20 }}</td>\n                <td>{{ network.Scope }}</td>\n                <td>{{ network.Driver }}</td>\n                <td>{{ network.IPAM.Driver }}</td>\n                <td>{{ network.IPAM.Config[0].Subnet ? network.IPAM.Config[0].Subnet : \'-\' }}</td>\n                <td>{{ network.IPAM.Config[0].Gateway ? network.IPAM.Config[0].Gateway : \'-\' }}</td>\n              </tr>\n              <tr ng-if="!networks">\n                <td colspan="8" class="text-center text-muted">Loading...</td>\n              </tr>\n              <tr ng-if="networks.length == 0">\n                <td colspan="8" class="text-center text-muted">No networks available.</td>\n              </tr>\n            </tbody>\n          </table>\n          <div ng-if="networks" class="pull-left pagination-controls">\n            <dir-pagination-controls></dir-pagination-controls>\n          </div>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),angular.module("app/components/node/node.html",[]).run(["$templateCache",function(a){
a.put("app/components/node/node.html",'<rd-header>\n  <rd-header-title title="Node details">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="node({id: node.Id})" ui-sref-opts="{reload: true}">\n      <i class="fa fa-refresh" aria-hidden="true"></i>\n    </a>\n  </rd-header-title>\n  <rd-header-content>\n    <a ui-sref="swarm">Swarm nodes</a> &gt; <a ui-sref="node({id: node.Id})">{{ node.Hostname }}</a>\n  </rd-header-content>\n</rd-header>\n\n<div class="row" ng-if="!node">\n  <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">\n    <div ng-if="loading">\n      <i class="fa fa-cog fa-spin"></i> Loading...\n    </div>\n\n    <rd-widget ng-if="!loading">\n      <rd-widget-header icon="fa-object-group" title="Node does not exist"></rd-widget-header>\n      <rd-widget-body>\n        <p>It looks like the node you wish to inspect does not exist.</p>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row" ng-if="node">\n  <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-object-group" title="Node specification"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>Name</td>\n              <td>\n                <input type="text" class="input-sm" ng-model="node.Name" placeholder="e.g. my-manager" ng-change="updateNodeAttribute(node, \'Name\')">\n              </td>\n            </tr>\n            <tr>\n              <td>Host name</td>\n              <td>{{ node.Hostname }}</td>\n            </tr>\n            <tr>\n              <td>Role</td>\n              <td>{{ node.Role }}</td>\n            </tr>\n            <tr>\n              <td>Availability</td>\n              <td>\n                <div class="input-group input-group-sm">\n                  <select name="nodeAvailability" class="selectpicker form-control" ng-model="node.Availability" ng-change="updateNodeAttribute(node, \'Availability\')">\n                    <option value="active">Active</option>\n                    <option value="pause">Pause</option>\n                    <option value="drain">Drain</option>\n                  </select>\n                </div>\n              </td>\n            </tr>\n            <tr>\n              <td>Status</td>\n              <td><span class="label label-{{ node.Status|nodestatusbadge }}">{{ node.Status }}</span></td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n      <rd-widget-footer>\n        <p class="small text-muted">\n          View the Docker Swarm mode Node documentation <a href="https://docs.docker.com/engine/swarm/manage-nodes/" target="self">here</a>.\n        </p>\n        <div class="btn-toolbar" role="toolbar">\n          <div class="btn-group" role="group">\n            <button type="button" class="btn btn-primary" ng-disabled="!hasChanges(node, [\'Name\', \'Availability\'])" ng-click="updateNode(node)">Apply changes</button>\n            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n              <span class="caret"></span>\n            </button>\n            <ul class="dropdown-menu">\n              <li><a ng-click="cancelChanges(node)">Reset changes</a></li>\n            </ul>\n          </div>\n        </div>\n      </rd-widget-footer>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row" ng-if="node && node.Role === \'manager\'">\n  <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-object-group" title="Manager status"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>Leader</td>\n              <td>\n                <span ng-if="node.Leader"><i class="fa fa-check green-icon" aria-hidden="true"></i> Yes</span>\n                <span ng-if="!node.Leader"><i class="fa fa-times red-icon" aria-hidden="true"></i> No</span>\n              </td>\n            </tr>\n            <tr>\n              <td>Reachability</td>\n              <td>{{ node.Reachability }}</td>\n            </tr>\n            <tr>\n              <td>Manager address</td>\n              <td>{{ node.ManagerAddr }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row" ng-if="node">\n  <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-object-group" title="Node description"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>CPU</td>\n              <td>{{ node.CPUs / 1000000000 }}</td>\n            </tr>\n            <tr>\n              <td>Memory</td>\n              <td>{{ node.Memory|humansize: 2 }}</td>\n            </tr>\n            <tr>\n              <td>Platform</td>\n              <td>{{ node.PlatformOS }} {{ node.PlatformArchitecture }} </td>\n            </tr>\n            <tr>\n              <td>Docker Engine version</td>\n              <td>{{ node.EngineVersion }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row" ng-if="node">\n  <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-tasks" title="Node labels">\n        <div class="nopadding">\n          <a class="btn btn-default btn-sm pull-right" ng-click="addLabel(node)">\n            <i class="fa fa-plus-circle" aria-hidden="true"></i> label\n          </a>\n        </div>\n      </rd-widget-header>\n      <rd-widget-body ng-if="!node.Labels || node.Labels.length === 0">\n        <p>There are no labels for this node.</p>\n      </rd-widget-body>\n      <rd-widget-body classes="no-padding" ng-if="node.Labels && node.Labels.length > 0">\n        <table class="table">\n          <thead>\n            <tr>\n              <th>Label</th>\n              <th>Value</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr ng-repeat="label in node.Labels">\n              <td>\n                <div class="input-group input-group-sm">\n                  <span class="input-group-addon fit-text-size">name</span>\n                  <input type="text" class="form-control" ng-model="label.key" placeholder="e.g. com.example.foo" ng-change="updateLabel(node, label)">\n                </div>\n              </td>\n              <td>\n                <div class="input-group input-group-sm">\n                  <span class="input-group-addon fit-text-size">value</span>\n                  <input type="text" class="form-control" ng-model="label.value" placeholder="e.g. bar" ng-change="updateLabel(node, label)">\n                  <span class="input-group-btn">\n                    <button class="btn btn-sm btn-danger" type="button" ng-click="removeLabel(node, $index)">\n                      <i class="fa fa-trash" aria-hidden="true"></i>\n                    </button>\n                  </span>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n      <rd-widget-footer>\n        <div class="btn-toolbar" role="toolbar">\n          <div class="btn-group" role="group">\n            <button type="button" class="btn btn-primary btn-sm" ng-disabled="!hasChanges(node, [\'Labels\'])" ng-click="updateNode(node)">Apply changes</button>\n            <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n              <span class="caret"></span>\n            </button>\n            <ul class="dropdown-menu">\n              <li><a ng-click="cancelChanges(node)">Reset changes</a></li>\n            </ul>\n          </div>\n        </div>\n      </rd-widget-footer>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row" ng-if="node && tasks.length > 0">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-tasks" title="Associated tasks">\n        <div class="pull-right">\n          Items per page:\n          <select ng-model="state.pagination_count" ng-change="changePaginationCount()">\n            <option value="0">All</option>\n            <option value="10">10</option>\n            <option value="25">25</option>\n            <option value="50">50</option>\n            <option value="100">100</option>\n          </select>\n        </div>\n      </rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <thead>\n            <tr>\n              <th>Id</th>\n              <th>\n                <a ui-sref="node" ng-click="order(\'Status\')">\n                  Status\n                  <span ng-show="sortType == \'Status\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                  <span ng-show="sortType == \'Status\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                </a>\n              </th>\n              <th>\n                <a ui-sref="node" ng-click="order(\'Slot\')">\n                  Slot\n                  <span ng-show="sortType == \'Slot\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                  <span ng-show="sortType == \'Slot\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                </a>\n              </th>\n              <th>\n                <a ui-sref="node" ng-click="order(\'Spec.ContainerSpec.Image\')">\n                  Image\n                  <span ng-show="sortType == \'Spec.ContainerSpec.Image\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                  <span ng-show="sortType == \'Spec.ContainerSpec.Image\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                </a>\n              </th>\n              <th>\n                <a ui-sref="node" ng-click="order(\'Updated\')">\n                  Last update\n                  <span ng-show="sortType == \'Updated\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                  <span ng-show="sortType == \'Updated\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr dir-paginate="task in (filteredTasks = ( tasks | orderBy:sortType:sortReverse | itemsPerPage: state.pagination_count))">\n              <td><a ui-sref="task({ id: task.Id })">{{ task.Id }}</a></td>\n              <td><span class="label label-{{ task.Status.State|taskstatusbadge }}">{{ task.Status.State }}</span></td>\n              <td>{{ task.Slot ? task.Slot : \'-\' }}</td>\n              <td>{{ task.Spec.ContainerSpec.Image | hideshasum }}</td>\n              <td>{{ task.Updated | getisodate }}</td>\n            </tr>\n          </tbody>\n        </table>\n        <div ng-if="tasks" class="pagination-controls">\n          <dir-pagination-controls></dir-pagination-controls>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),angular.module("app/components/registries/registries.html",[]).run(["$templateCache",function(a){a.put("app/components/registries/registries.html",'<rd-header>\n  <rd-header-title title="Registries">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="registries" ui-sref-opts="{reload: true}">\n      <i class="fa fa-refresh" aria-hidden="true"></i>\n    </a>\n    <i id="loadingViewSpinner" class="fa fa-cog fa-spin" style="margin-left: 5px;"></i>\n  </rd-header-title>\n  <rd-header-content>Registry management</rd-header-content>\n</rd-header>\n\n<div class="row" ng-if="dockerhub">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-database" title="DockerHub">\n      </rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          \x3c!-- note --\x3e\n          <div class="form-group">\n            <span class="col-sm-12 text-muted small">\n              The DockerHub registry can be used by any user. You can specify the credentials that will be used to push &amp; pull images here.\n            </span>\n          </div>\n          \x3c!-- !note --\x3e\n          \x3c!-- authentication-checkbox --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label for="registry_auth" class="control-label text-left">\n                Authentication\n                <portainer-tooltip position="bottom" message="Enable this option if you need to specify credentials to connect to push/pull private images."></portainer-tooltip>\n              </label>\n              <label class="switch" style="margin-left: 20px;">\n                <input type="checkbox" ng-model="dockerhub.Authentication"><i></i>\n              </label>\n            </div>\n          </div>\n          \x3c!-- !authentication-checkbox --\x3e\n          \x3c!-- authentication-credentials --\x3e\n          <div ng-if="dockerhub.Authentication">\n            \x3c!-- credentials-user --\x3e\n            <div class="form-group">\n              <label for="hub_username" class="col-sm-3 col-lg-2 control-label text-left">Username</label>\n              <div class="col-sm-9 col-lg-10">\n                <input type="text" class="form-control" id="hub_username" ng-model="dockerhub.Username">\n              </div>\n            </div>\n            \x3c!-- !credentials-user --\x3e\n            \x3c!-- credentials-password --\x3e\n            <div class="form-group">\n              <label for="hub_password" class="col-sm-3 col-lg-2 control-label text-left">Password</label>\n              <div class="col-sm-9 col-lg-10">\n                <input type="password" class="form-control" id="hub_password" ng-model="dockerhub.Password">\n              </div>\n            </div>\n            \x3c!-- !credentials-password --\x3e\n          </div>\n          \x3c!-- !authentication-credentials --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-disabled="dockerhub.Authentication && (!dockerhub.Username || !dockerhub.Password)" ng-click="updateDockerHub()">Update</button>\n              <i id="updateDockerhubSpinner" class="fa fa-cog fa-spin" style="margin-left: 5px; display: none;"></i>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-database" title="Available registries">\n        <div class="pull-right">\n          Items per page:\n          <select ng-model="state.pagination_count" ng-change="changePaginationCount()">\n            <option value="0">All</option>\n            <option value="10">10</option>\n            <option value="25">25</option>\n            <option value="50">50</option>\n            <option value="100">100</option>\n          </select>\n        </div>\n      </rd-widget-header>\n      <rd-widget-taskbar classes="col-lg-12">\n        <div class="pull-left">\n          <button type="button" class="btn btn-danger" ng-click="removeAction()" ng-disabled="!state.selectedItemCount"><i class="fa fa-trash space-right" aria-hidden="true"></i>Remove</button>\n          <a class="btn btn-primary" type="button" ui-sref="actions.create.registry"><i class="fa fa-plus space-right" aria-hidden="true"></i>Add registry</a>\n        </div>\n        <div class="pull-right">\n          <input type="text" id="filter" ng-model="state.filter" placeholder="Filter..." class="form-control input-sm" />\n        </div>\n      </rd-widget-taskbar>\n      <rd-widget-body classes="no-padding">\n        <div class="table-responsive">\n          <table class="table table-hover">\n            <thead>\n              <tr>\n                <th>\n                  <input type="checkbox" ng-model="allSelected" ng-change="selectItems(allSelected)" />\n                </th>\n                <th>\n                  <a ui-sref="registries" ng-click="order(\'Name\')">\n                    Name\n                    <span ng-show="sortType == \'Name\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                    <span ng-show="sortType == \'Name\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                  </a>\n                </th>\n                <th>\n                  <a ui-sref="registries" ng-click="order(\'URL\')">\n                    URL\n                    <span ng-show="sortType == \'URL\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                    <span ng-show="sortType == \'URL\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                  </a>\n                </th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr dir-paginate="registry in (state.filteredRegistries = (registries | filter:state.filter | orderBy:sortType:sortReverse | itemsPerPage: state.pagination_count))">\n                <td><input type="checkbox" ng-model="registry.Checked" ng-change="selectItem(registry)" /></td>\n                <td>\n                  <a ui-sref="registry({id: registry.Id})">{{ registry.Name }}</a>\n                  <span ng-if="registry.Authentication" style="margin-left: 5px;">\n                    <i class="fa fa-shield" aria-hidden="true" tooltip-placement="bottom" tooltip-class="portainer-tooltip" uib-tooltip="Authentication is enabled for this registry."></i>\n                  </span>\n                </td>\n                <td>{{ registry.URL }}</td>\n                <td>\n                  <span ng-if="applicationState.application.authentication">\n                    <a ui-sref="registry.access({id: registry.Id})"><i class="fa fa-users" aria-hidden="true" style="margin-left: 7px;"></i> Manage access</a>\n                  </span>\n                </td>\n              </tr>\n              <tr ng-if="!registries">\n                <td colspan="4" class="text-center text-muted">Loading...</td>\n              </tr>\n              <tr ng-if="registries.length == 0">\n                <td colspan="4" class="text-center text-muted">No registries available.</td>\n              </tr>\n            </tbody>\n          </table>\n          <div ng-if="registries" class="pull-left pagination-controls">\n            <dir-pagination-controls></dir-pagination-controls>\n          </div>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),angular.module("app/components/registry/registry.html",[]).run(["$templateCache",function(a){a.put("app/components/registry/registry.html",'<rd-header>\n  <rd-header-title title="Registry details">\n    <i id="loadingViewSpinner" class="fa fa-cog fa-spin"></i>\n  </rd-header-title>\n  <rd-header-content>\n    <a ui-sref="registries">Registries</a> &gt; <a ui-sref="registry({id: registry.Id})">{{ registry.Name }}</a>\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="registry_name" class="col-sm-3 col-lg-2 control-label text-left">Name</label>\n            <div class="col-sm-9 col-lg-10">\n              <input type="text" class="form-control" id="registry_name" ng-model="registry.Name" placeholder="e.g. my-registry">\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          \x3c!-- registry-url-input --\x3e\n          <div class="form-group">\n            <label for="registry_url" class="col-sm-3 col-lg-2 control-label text-left">\n              Registry URL\n              <portainer-tooltip position="bottom" message="URL or IP address of a Docker registry."></portainer-tooltip>\n            </label>\n            <div class="col-sm-9 col-lg-10">\n              <input type="text" class="form-control" id="registry_url" ng-model="registry.URL" placeholder="e.g. 10.0.0.10:5000 or myregistry.domain.tld">\n            </div>\n          </div>\n          \x3c!-- !registry-url-input --\x3e\n          \x3c!-- authentication-checkbox --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label for="registry_auth" class="control-label text-left">\n                Authentication\n                <portainer-tooltip position="bottom" message="Enable this option if you need to specify credentials to connect to this registry."></portainer-tooltip>\n              </label>\n              <label class="switch" style="margin-left: 20px;">\n                <input type="checkbox" ng-model="registry.Authentication"><i></i>\n              </label>\n            </div>\n          </div>\n          \x3c!-- !authentication-checkbox --\x3e\n          \x3c!-- authentication-credentials --\x3e\n          <div ng-if="registry.Authentication">\n            \x3c!-- credentials-user --\x3e\n            <div class="form-group">\n              <label for="credentials_username" class="col-sm-3 col-lg-2 control-label text-left">Username</label>\n              <div class="col-sm-9 col-lg-10">\n                <input type="text" class="form-control" id="credentials_username" ng-model="registry.Username">\n              </div>\n            </div>\n            \x3c!-- !credentials-user --\x3e\n            \x3c!-- credentials-password --\x3e\n            <div class="form-group">\n              <label for="credentials_password" class="col-sm-3 col-lg-2 control-label text-left">Password</label>\n              <div class="col-sm-9 col-lg-10">\n                <input type="password" class="form-control" id="credentials_password" ng-model="registry.Password">\n              </div>\n            </div>\n            \x3c!-- !credentials-password --\x3e\n          </div>\n          \x3c!-- !authentication-credentials --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-disabled="!registry.Name || !registry.URL || (registry.Authentication && (!registry.Username || !registry.Password))" ng-click="updateRegistry()">Update registry</button>\n              <a type="button" class="btn btn-default btn-sm" ui-sref="registries">Cancel</a>\n              <i id="updateRegistrySpinner" class="fa fa-cog fa-spin" style="margin-left: 5px; display: none;"></i>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),angular.module("app/components/registryAccess/registryAccess.html",[]).run(["$templateCache",function(a){a.put("app/components/registryAccess/registryAccess.html",'<rd-header>\n  <rd-header-title title="Registry access">\n    <i id="loadingViewSpinner" class="fa fa-cog fa-spin"></i>\n  </rd-header-title>\n  <rd-header-content>\n    <a ui-sref="registries">Registries</a> &gt; <a ui-sref="registry({id: registry.Id})">{{ registry.Name }}</a> &gt; Access management\n  </rd-header-content>\n</rd-header>\n\n<div class="row" ng-if="registry">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-plug" title="Registry"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>Name</td>\n              <td>\n                {{ registry.Name }}\n              </td>\n            </tr>\n            <tr>\n              <td>URL</td>\n              <td>\n                {{ registry.URL }}\n              </td>\n            </tr>\n            <tr>\n              <td colspan="2">\n                <span class="small text-muted">\n                  You can select which user or team can access this registry by moving them to the authorized accesses table. Simply click\n                  on a user or team entry to move it from one table to the other.\n                </span>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<por-access-management ng-if="registry" access-controlled-entity="registry" update-access="updateAccess(userAccesses, teamAccesses)">\n</por-access-management>\n')}]),angular.module("app/components/secret/secret.html",[]).run(["$templateCache",function(a){a.put("app/components/secret/secret.html",'<rd-header>\n  <rd-header-title title="Secret details">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="secret({id: secret.Id})" ui-sref-opts="{reload: true}">\n      <i class="fa fa-refresh" aria-hidden="true"></i>\n    </a>\n    <i id="loadingViewSpinner" class="fa fa-cog fa-spin"></i>\n  </rd-header-title>\n  <rd-header-content>\n    <a ui-sref="secrets">Secrets</a> &gt; <a ui-sref="secret({id: secret.Id})">{{ secret.Name }}</a>\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-user-secret" title="Secret details"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>Name</td>\n              <td>{{ secret.Name }}</td>\n            </tr>\n            <tr>\n              <td>ID</td>\n              <td>\n                {{ secret.Id }}\n                <button class="btn btn-xs btn-danger" ng-click="removeSecret(secret.Id)"><i class="fa fa-trash space-right" aria-hidden="true"></i>Delete this secret</button>\n              </td>\n            </tr>\n            <tr>\n              <td>Created</td>\n              <td>{{ secret.CreatedAt | getisodate }}</td>\n            </tr>\n            <tr>\n              <td>Last updated</td>\n              <td>{{ secret.UpdatedAt | getisodate }}</td>\n            </tr>\n            <tr ng-if="!(secret.Labels | emptyobject)">\n              <td>Labels</td>\n              <td>\n                <table class="table table-bordered table-condensed">\n                  <tr ng-repeat="(k, v) in secret.Labels">\n                    <td>{{ k }}</td>\n                    <td>{{ v }}</td>\n                  </tr>\n                </table>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),angular.module("app/components/secrets/secrets.html",[]).run(["$templateCache",function(a){a.put("app/components/secrets/secrets.html",'<rd-header>\n  <rd-header-title title="Secrets list">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="secrets" ui-sref-opts="{reload: true}">\n      <i class="fa fa-refresh" aria-hidden="true"></i>\n    </a>\n    <i id="loadingViewSpinner" class="fa fa-cog fa-spin" style="margin-left: 5px;"></i>\n  </rd-header-title>\n  <rd-header-content>Secrets</rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-user-secret" title="Secrets">\n      </rd-widget-header>\n      <rd-widget-taskbar classes="col-lg-12 col-md-12 col-xs-12">\n        <div class="pull-left">\n          <button type="button" class="btn btn-danger" ng-click="removeAction()" ng-disabled="!state.selectedItemCount"><i class="fa fa-trash space-right" aria-hidden="true"></i>Remove</button>\n          <a class="btn btn-primary" type="button" ui-sref="actions.create.secret">Add secret</a>\n        </div>\n        <div class="pull-right">\n          <input type="text" id="filter" ng-model="state.filter" placeholder="Filter..." class="form-control input-sm" />\n        </div>\n      </rd-widget-taskbar>\n      <rd-widget-body classes="no-padding">\n        <div class="table-responsive">\n          <table class="table table-hover">\n            <thead>\n              <th>\n                <input type="checkbox" ng-model="allSelected" ng-change="selectItems(allSelected)" />\n              </th>\n              <th>\n                <a ui-sref="secrets" ng-click="order(\'Name\')">\n                  Name\n                  <span ng-show="sortType == \'Name\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                  <span ng-show="sortType == \'Name\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                </a>\n              </th>\n              <th>\n                <a ui-sref="secrets" ng-click="order(\'CreatedAt\')">\n                  Created at\n                  <span ng-show="sortType == \'Image\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                  <span ng-show="sortType == \'Image\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                </a>\n              </th>\n            </thead>\n            <tbody>\n              <tr dir-paginate="secret in (state.filteredSecrets = ( secrets | filter:state.filter | orderBy:sortType:sortReverse | itemsPerPage: pagination_count))">\n                <td><input type="checkbox" ng-model="secret.Checked" ng-change="selectItem(secret)"/></td>\n                <td><a ui-sref="secret({id: secret.Id})">{{ secret.Name }}</a></td>\n                <td>{{ secret.CreatedAt | getisodate }}</td>\n              </tr>\n              <tr ng-if="!secrets">\n                <td colspan="3" class="text-center text-muted">Loading...</td>\n              </tr>\n              <tr ng-if="secrets.length == 0">\n                <td colspan="3" class="text-center text-muted">No secrets available.</td>\n              </tr>\n            </tbody>\n          </table>\n          <div ng-if="secrets" class="pull-left pagination-controls">\n            <dir-pagination-controls></dir-pagination-controls>\n          </div>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),angular.module("app/components/service/includes/constraints.html",[]).run(["$templateCache",function(a){
a.put("app/components/service/includes/constraints.html",'<div ng-if="service.ServiceConstraints" id="service-placement-constraints">\n  <rd-widget>\n    <rd-widget-header icon="fa-tasks" title="Placement constraints">\n      <div class="nopadding">\n        <a class="btn btn-default btn-sm pull-right" ng-click="isUpdating || addPlacementConstraint(service)" ng-disabled="isUpdating">\n          <i class="fa fa-plus-circle" aria-hidden="true"></i> placement constraint\n        </a>\n      </div>\n    </rd-widget-header>\n    <rd-widget-body ng-if="service.ServiceConstraints.length === 0">\n      <p>There are no placement constraints for this service.</p>\n    </rd-widget-body>\n    <rd-widget-body ng-if="service.ServiceConstraints.length > 0" classes="no-padding">\n      <table class="table" >\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Operator</th>\n            <th>Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr ng-repeat="constraint in service.ServiceConstraints">\n            <td>\n              <div class="input-group input-group-sm">\n                <input type="text" class="form-control" ng-model="constraint.key" placeholder="e.g. node.role" ng-change="updatePlacementConstraint(service, constraint)" ng-disabled="isUpdating">\n              </div>\n            </td>\n            <td>\n              <div class="input-group input-group-sm">\n                <select name="constraintOperator" class="form-control" ng-model="constraint.operator" ng-change="updatePlacementConstraint(service, constraint)" ng-disabled="isUpdating">\n                  <option value="==">==</option>\n                  <option value="!=">!=</option>\n                </select>\n              </div>\n            </td>\n            <td>\n              <div class="input-group input-group-sm">\n                <input type="text" class="form-control" ng-model="constraint.value" placeholder="e.g. manager" ng-change="updatePlacementConstraint(service, constraint)" ng-disabled="isUpdating">\n                <span class="input-group-btn">\n                  <button class="btn btn-sm btn-danger" type="button" ng-click="removePlacementConstraint(service, $index)" ng-disabled="isUpdating">\n                    <i class="fa fa-trash" aria-hidden="true"></i>\n                  </button>\n                </span>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </rd-widget-body>\n    <rd-widget-footer>\n      <div class="btn-toolbar" role="toolbar">\n        <div class="btn-group" role="group">\n          <button type="button" class="btn btn-primary btn-sm" ng-disabled="!hasChanges(service, [\'ServiceConstraints\'])" ng-click="updateService(service)">Apply changes</button>\n          <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n            <span class="caret"></span>\n          </button>\n          <ul class="dropdown-menu">\n            <li><a ng-click="cancelChanges(service, [\'ServiceConstraints\'])">Reset changes</a></li>\n            <li><a ng-click="cancelChanges(service)">Reset all changes</a></li>\n          </ul>\n        </div>\n      </div>\n    </rd-widget-footer>\n  </rd-widget>\n</div>\n')}]),angular.module("app/components/service/includes/container-specs.html",[]).run(["$templateCache",function(a){a.put("app/components/service/includes/container-specs.html",'<div>\n  <rd-widget>\n    <rd-widget-header icon="fa-list-alt" title="Container spec"></rd-widget-header>\n    <rd-widget-body classes="no-padding">\n      <table class="table">\n        <tbody>\n          <tr>\n            <td>CMD</td>\n            <td><code ng-if="service.Command">{{ service.Command|command }}</code></td>\n            <td>\n              <p class="small text-muted" style="margin-top: 10px;">\n                Command to execute.\n              </p>\n            </td>\n          </tr>\n          <tr>\n            <td>Args</td>\n            <td><code ng-if="service.Arguments">{{ service.Arguments }}</code></td>\n            <td>\n              <p class="small text-muted" style="margin-top: 10px;">\n                Arguments passed to command in container.\n              </p>\n            </td>\n          </tr>\n          <tr>\n            <td>User</td>\n            <td>{{ service.User }}</td>\n            <td>\n              <p class="small text-muted" style="margin-top: 10px;">\n                Username or UID.\n              </p>\n            </td>\n          </tr>\n          <tr>\n            <td>Working directory</td>\n            <td>{{ service.Dir }}</td>\n            <td>\n              <p class="small text-muted" style="margin-top: 10px;">\n                Working directory inside the container.\n              </p>\n            </td>\n          </tr>\n          <tr>\n            <td>Stop grace period</td>\n            <td>{{ service.StopGracePeriod }}</td>\n            <td>\n              <p class="small text-muted" style="margin-top: 10px;">\n                Time to wait before force killing a container (default none).\n              </p>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),angular.module("app/components/service/includes/containerlabels.html",[]).run(["$templateCache",function(a){a.put("app/components/service/includes/containerlabels.html",'<div id="service-container-labels">\n  <rd-widget>\n    <rd-widget-header icon="fa-tasks" title="Container labels">\n      <div class="nopadding">\n        <a class="btn btn-default btn-sm pull-right" ng-click="isUpdating ||addContainerLabel(service)" ng-disabled="isUpdating">\n          <i class="fa fa-plus-circle" aria-hidden="true"></i> container label\n        </a>\n      </div>\n    </rd-widget-header>\n    <rd-widget-body ng-if="service.ServiceContainerLabels.length === 0">\n      <p>There are no container labels for this service.</p>\n    </rd-widget-body>\n    <rd-widget-body ng-if="service.ServiceContainerLabels.length > 0" classes="no-padding">\n      <table class="table" >\n        <thead>\n          <tr>\n            <th>Label</th>\n            <th>Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr ng-repeat="label in service.ServiceContainerLabels">\n            <td>\n              <div class="input-group input-group-sm">\n                <span class="input-group-addon fit-text-size">name</span>\n                <input type="text" class="form-control" ng-model="label.key" placeholder="e.g. com.example.foo" ng-change="updateContainerLabel(service, label)" ng-disabled="isUpdating">\n              </div>\n            </td>\n            <td>\n              <div class="input-group input-group-sm">\n                <span class="input-group-addon fit-text-size">value</span>\n                <input type="text" class="form-control" ng-model="label.value" placeholder="e.g. bar" ng-change="updateContainerLabel(service, label)" ng-disabled="isUpdating">\n                <span class="input-group-btn">\n                  <button class="btn btn-sm btn-danger" type="button" ng-click="removeContainerLabel(service, $index)" ng-disabled="isUpdating">\n                    <i class="fa fa-trash" aria-hidden="true"></i>\n                  </button>\n                </span>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </rd-widget-body>\n    <rd-widget-footer>\n      <div class="btn-toolbar" role="toolbar">\n        <div class="btn-group" role="group">\n          <button type="button" class="btn btn-primary btn-sm" ng-disabled="!hasChanges(service, [\'ServiceContainerLabels\'])" ng-click="updateService(service)">Apply changes</button>\n          <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n            <span class="caret"></span>\n          </button>\n          <ul class="dropdown-menu">\n            <li><a ng-click="cancelChanges(service, [\'ServiceContainerLabels\'])">Reset changes</a></li>\n            <li><a ng-click="cancelChanges(service)">Reset all changes</a></li>\n          </ul>\n        </div>\n      </div>\n    </rd-widget-footer>\n  </rd-widget>\n</div>\n')}]),angular.module("app/components/service/includes/environmentvariables.html",[]).run(["$templateCache",function(a){a.put("app/components/service/includes/environmentvariables.html",'<div ng-if="service.EnvironmentVariables" id="service-env-variables">\n  <rd-widget>\n    <rd-widget-header icon="fa-tasks" title="Environment variables">\n      <div class="nopadding">\n        <a class="btn btn-default btn-sm pull-right" ng-click="isUpdating ||addEnvironmentVariable(service)" ng-disabled="isUpdating">\n          <i class="fa fa-plus-circle" aria-hidden="true"></i> environment variable\n        </a>\n      </div>\n    </rd-widget-header>\n    <rd-widget-body ng-if="service.EnvironmentVariables.length === 0">\n      <p>There are no environment variables for this service.</p>\n    </rd-widget-body>\n    <rd-widget-body ng-if="service.EnvironmentVariables.length > 0" classes="no-padding">\n      <table class="table" >\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr ng-repeat="var in service.EnvironmentVariables">\n            <td>\n              <div class="input-group input-group-sm">\n                <span class="input-group-addon fit-text-size">name</span>\n                <input type="text" class="form-control" ng-model="var.key" ng-disabled="var.added || isUpdating" placeholder="e.g. FOO">\n              </div>\n            </td>\n            <td>\n              <div class="input-group input-group-sm">\n                <span class="input-group-addon fit-text-size">value</span>\n                <input type="text" class="form-control" ng-model="var.value" ng-change="updateEnvironmentVariable(service, var)" placeholder="e.g. bar" ng-disabled="isUpdating">\n                <span class="input-group-btn">\n                  <button class="btn btn-sm btn-danger" type="button" ng-click="removeEnvironmentVariable(service, $index)" ng-disabled="isUpdating">\n                    <i class="fa fa-trash" aria-hidden="true"></i>\n                  </button>\n                </span>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </rd-widget-body>\n    <rd-widget-footer>\n      <div class="btn-toolbar" role="toolbar">\n        <div class="btn-group" role="group">\n          <button type="button" class="btn btn-primary btn-sm" ng-disabled="!hasChanges(service, [\'EnvironmentVariables\'])" ng-click="updateService(service)">Apply changes</button>\n          <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n            <span class="caret"></span>\n          </button>\n          <ul class="dropdown-menu">\n            <li><a ng-click="cancelChanges(service, [\'EnvironmentVariables\'])">Reset changes</a></li>\n            <li><a ng-click="cancelChanges(service)">Reset all changes</a></li>\n          </ul>\n        </div>\n      </div>\n    </rd-widget-footer>\n  </rd-widget>\n</div>\n')}]),angular.module("app/components/service/includes/mounts.html",[]).run(["$templateCache",function(a){a.put("app/components/service/includes/mounts.html",'<div ng-if="service.ServiceMounts" id="service-mounts">\n  <rd-widget>\n    <rd-widget-header icon="fa-tasks" title="Mounts">\n      <div class="nopadding">\n        <a class="btn btn-default btn-sm pull-right" ng-click="isUpdating ||addMount(service)" ng-disabled="isUpdating">\n          <i class="fa fa-plus-circle" aria-hidden="true"></i> mount\n        </a>\n      </div>\n    </rd-widget-header>\n    <rd-widget-body ng-if="service.ServiceMounts.length === 0">\n      <p>There are no mounts for this service.</p>\n    </rd-widget-body>\n    <rd-widget-body ng-if="service.ServiceMounts.length > 0" classes="no-padding">\n      <table class="table" >\n        <thead>\n          <tr>\n            <th>Type</th>\n            <th>Source</th>\n            <th>Target</th>\n            <th>Read only</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr ng-repeat="mount in service.ServiceMounts">\n            <td>\n              <select name="mountType" class="form-control" ng-model="mount.Type" ng-disabled="isUpdating">\n                <option value="volume">Volume</option>\n                <option value="bind">Bind</option>\n              </select>\n            </td>\n            <td>\n              <input type="text" class="form-control" ng-model="mount.Source" placeholder="e.g. /tmp/portainer/data" ng-change="updateMount(service, mount)" ng-disabled="isUpdating">\n            </td>\n            <td>\n              <input type="text" class="form-control" ng-model="mount.Target" placeholder="e.g. /tmp/portainer/data" ng-change="updateMount(service, mount)" ng-disabled="isUpdating">\n            </td>\n            <td>\n              <input type="checkbox" class="form-control" ng-model="mount.ReadOnly" ng-change="updateMount(service, mount)" ng-disabled="isUpdating">\n            </td>\n            <td>\n              <span class="input-group-btn">\n                <button class="btn btn-sm btn-danger" type="button" ng-click="removeMount(service, $index)" ng-disabled="isUpdating">\n                  <i class="fa fa-trash" aria-hidden="true"></i>\n                </button>\n              </span>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </rd-widget-body>\n    <rd-widget-footer>\n      <div class="btn-toolbar" role="toolbar">\n        <div class="btn-group" role="group">\n          <button type="button" class="btn btn-primary btn-sm" ng-disabled="!hasChanges(service, [\'ServiceMounts\'])" ng-click="updateService(service)">Apply changes</button>\n          <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n            <span class="caret"></span>\n          </button>\n          <ul class="dropdown-menu">\n            <li><a ng-click="cancelChanges(service, [\'ServiceMounts\'])">Reset changes</a></li>\n            <li><a ng-click="cancelChanges(service)">Reset all changes</a></li>\n          </ul>\n        </div>\n      </div>\n    </rd-widget-footer>\n  </rd-widget>\n</div>\n')}]),angular.module("app/components/service/includes/networks.html",[]).run(["$templateCache",function(a){a.put("app/components/service/includes/networks.html",'<div id="service-network-specs">\n  <rd-widget>\n    <rd-widget-header icon="fa-tasks" title="Networks"></rd-widget-header>\n    <rd-widget-body ng-if="!service.VirtualIPs || service.VirtualIPs.length === 0">\n      <p>This service is not connected to any networks.</p>\n    </rd-widget-body>\n    <rd-widget-body ng-if="service.VirtualIPs && service.VirtualIPs.length > 0" classes="no-padding">\n      <table class="table" >\n        <thead>\n          <tr>\n            <th>ID</th>\n            <th>IP address</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr ng-repeat="network in service.VirtualIPs">\n            <td>\n              <a ui-sref="network({id: network.NetworkID})">{{ network.NetworkID }}</a>\n            </td>\n            <td>{{ network.Addr }}</td>\n          </tr>\n        </tbody>\n      </table>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),angular.module("app/components/service/includes/placementPreferences.html",[]).run(["$templateCache",function(a){a.put("app/components/service/includes/placementPreferences.html",'<div ng-if="service.ServicePreferences" id="service-placement-preferences">\n  <rd-widget>\n    <rd-widget-header icon="fa-tasks" title="Placement preferences">\n      <div class="nopadding">\n        <a class="btn btn-default btn-sm pull-right" ng-click="isUpdating || addPlacementPreference(service)" ng-disabled="isUpdating">\n          <i class="fa fa-plus-circle" aria-hidden="true"></i> placement preference\n        </a>\n      </div>\n    </rd-widget-header>\n    <rd-widget-body ng-if="service.ServicePreferences.length === 0">\n      <p>There are no placement preferences for this service.</p>\n    </rd-widget-body>\n    <rd-widget-body ng-if="service.ServicePreferences.length > 0" classes="no-padding">\n      <table class="table" >\n        <thead>\n          <tr>\n            <th>Strategy</th>\n            <th>Value</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr ng-repeat="preference in service.ServicePreferences">\n            <td>\n              <div class="input-group input-group-sm">\n                <input type="text" class="form-control" ng-model="preference.strategy" placeholder="e.g. node.role" ng-change="updatePlacementPreference(service, preference)" ng-disabled="isUpdating">\n              </div>\n            </td>\n            <td>\n              <div class="input-group input-group-sm">\n                <input type="text" class="form-control" ng-model="preference.value" placeholder="e.g. manager" ng-change="updatePlacementPreference(service, preference)" ng-disabled="isUpdating">\n                <span class="input-group-btn">\n                  <button class="btn btn-sm btn-danger" type="button" ng-click="removePlacementPreference(service, $index)" ng-disabled="isUpdating">\n                    <i class="fa fa-trash" aria-hidden="true"></i>\n                  </button>\n                </span>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </rd-widget-body>\n    <rd-widget-footer>\n      <div class="btn-toolbar" role="toolbar">\n        <div class="btn-group" role="group">\n          <button type="button" class="btn btn-primary btn-sm" ng-disabled="!hasChanges(service, [\'ServicePreferences\'])" ng-click="updateService(service)">Apply changes</button>\n          <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n            <span class="caret"></span>\n          </button>\n          <ul class="dropdown-menu">\n            <li><a ng-click="cancelChanges(service, [\'ServicePreferences\'])">Reset changes</a></li>\n            <li><a ng-click="cancelChanges(service)">Reset all changes</a></li>\n          </ul>\n        </div>\n      </div>\n    </rd-widget-footer>\n  </rd-widget>\n</div>\n')}]),angular.module("app/components/service/includes/ports.html",[]).run(["$templateCache",function(a){a.put("app/components/service/includes/ports.html",'<div>\n  <rd-widget>\n    <rd-widget-header icon="fa-tasks" title="Published ports">\n      <div class="nopadding">\n        <a class="btn btn-default btn-sm pull-right" ng-click="isUpdating ||addPublishedPort(service)" ng-disabled="isUpdating">\n          <i class="fa fa-plus-circle" aria-hidden="true"></i> port mapping\n        </a>\n      </div>\n    </rd-widget-header>\n    <rd-widget-body ng-if="!service.Ports || service.Ports.length === 0">\n      <p>This service has no ports published.</p>\n    </rd-widget-body>\n    <rd-widget-body ng-if="service.Ports && service.Ports.length > 0" classes="no-padding">\n      <table class="table" >\n        <thead>\n          <tr>\n            <th>Host port</th>\n            <th>Container port</th>\n            <th>Protocol</th>\n            <th>Publish mode</th>\n            <th>Actions</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr ng-repeat="portBinding in service.Ports">\n            <td>\n              <div class="input-group input-group-sm">\n                <span class="input-group-addon">host</span>\n                <input type="number" class="form-control" ng-model="portBinding.PublishedPort" placeholder="e.g. 8080" ng-change="updatePublishedPort(service, mapping)" ng-disabled="isUpdating">\n              </div>\n            </td>\n            <td>\n              <div class="input-group input-group-sm">\n                <span class="input-group-addon">container</span>\n                <input type="number" class="form-control" ng-model="portBinding.TargetPort" placeholder="e.g. 80" ng-change="updatePublishedPort(service, mapping)" ng-disabled="isUpdating">\n              </div>\n            </td>\n            <td>\n              <div class="input-group input-group-sm">\n                <select class="selectpicker form-control" ng-model="portBinding.Protocol" ng-change="updatePublishedPort(service, mapping)" ng-disabled="isUpdating">\n                  <option value="tcp">tcp</option>\n                  <option value="udp">udp</option>\n                </select>\n              </div>\n            </td>\n            <td>\n              <div class="input-group input-group-sm">\n                <select class="selectpicker form-control" ng-model="portBinding.PublishMode" ng-change="updatePublishedPort(service, mapping)" ng-disabled="isUpdating">\n                  <option value="ingress">ingress</option>\n                  <option value="host">host</option>\n                </select>\n              </div>\n            </td>\n            <td>\n              <span class="input-group-btn">\n                <button class="btn btn-sm btn-danger" type="button" ng-click="removePortPublishedBinding(service, $index)" ng-disabled="isUpdating">\n                  <i class="fa fa-trash" aria-hidden="true"></i>\n                </button>\n              </span>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </rd-widget-body>\n    <rd-widget-footer>\n      <div class="btn-toolbar" role="toolbar">\n        <div class="btn-group" role="group">\n          <button type="button" class="btn btn-primary btn-sm" ng-disabled="!hasChanges(service, [\'Ports\'])" ng-click="updateService(service)">Apply changes</button>\n          <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n            <span class="caret"></span>\n          </button>\n          <ul class="dropdown-menu">\n            <li><a ng-click="cancelChanges(service, [\'Ports\'])">Reset changes</a></li>\n            <li><a ng-click="cancelChanges(service)">Reset all changes</a></li>\n          </ul>\n        </div>\n      </div>\n    </rd-widget-footer>\n  </rd-widget>\n</div>\n')}]),angular.module("app/components/service/includes/resources.html",[]).run(["$templateCache",function(a){a.put("app/components/service/includes/resources.html",'<div id="service-resources">\n  <rd-widget>\n    <rd-widget-header icon="fa-list-alt" title="Resource limits and reservations">\n    </rd-widget-header>\n    <rd-widget-body classes="no-padding">\n      <table class="table">\n        <tbody>\n          <tr>\n            <td>CPU limits</td>\n            <td ng-if="service.LimitNanoCPUs">\n              {{ service.LimitNanoCPUs / 1000000000 }}\n            </td>\n            <td ng-if="!service.LimitNanoCPUs">None</td>\n          </tr>\n          <tr>\n            <td>Memory limits</td>\n            <td ng-if="service.LimitMemoryBytes">{{service.LimitMemoryBytes|humansize}}</td>\n            <td ng-if="!service.LimitMemoryBytes">None</td>\n          </tr>\n          <tr>\n            <td>CPU reservation</td>\n            <td ng-if="service.ReservationNanoCPUs">\n              {{service.ReservationNanoCPUs / 1000000000}}\n            </td>\n            <td ng-if="!service.ReservationNanoCPUs">None</td>\n          </tr>\n          <tr>\n            <td>Memory reservation</td>\n            <td ng-if="service.ReservationMemoryBytes">{{service.ReservationMemoryBytes|humansize}}</td>\n            <td ng-if="!service.ReservationMemoryBytes">None</td>\n          </tr>\n        </tbody>\n      </table>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),angular.module("app/components/service/includes/restart.html",[]).run(["$templateCache",function(a){a.put("app/components/service/includes/restart.html",'<div id="service-restart-policy">\n  <rd-widget>\n    <rd-widget-header icon="fa-list-alt" title="Restart policy">\n    </rd-widget-header>\n    <rd-widget-body classes="no-padding">\n      <table class="table">\n        <tbody>\n          <tr>\n            <td>Restart condition</td>\n            <td>\n              <div class="input-group input-group-sm">\n                <select class="selectpicker form-control" ng-model="service.RestartCondition" ng-change="updateServiceAttribute(service, \'RestartCondition\')" ng-disabled="isUpdating">\n                  <option value="none">None</option>\n                  <option value="on-failure">On failure</option>\n                  <option value="any">Any</option>\n                </select>\n              </div>\n            </td>\n            <td>\n              <p class="small text-muted" style="margin-top: 10px;">\n                Condition for restart.\n              </p>\n            </td>\n          </tr>\n          <tr>\n            <td>Restart delay</td>\n            <td>\n              <input class="input-sm" type="number" ng-model="service.RestartDelay" ng-change="updateServiceAttribute(service, \'RestartDelay\')" ng-disabled="isUpdating"/>\n            </td>\n            <td>\n              <p class="small text-muted" style="margin-top: 10px;">\n                Delay between restart attempts. Time in seconds.\n              </p>\n            </td>\n          </tr>\n          <tr>\n            <td>Restart max attempts</td>\n            <td>\n              <input class="input-sm" type="number" ng-model="service.RestartMaxAttempts" ng-change="updateServiceAttribute(service, \'RestartMaxAttempts\')" ng-disabled="isUpdating"/>\n            </td>\n            <td>\n              <p class="small text-muted" style="margin-top: 10px;">\n                Maximum attempts to restart a given container before giving up (default value is 0, which is ignored).\n              </p>\n            </td>\n          </tr>\n          <tr>\n            <td>Restart window</td>\n            <td>\n              <input class="input-sm" type="number" ng-model="service.RestartWindow" ng-change="updateServiceAttribute(service, \'RestartWindow\')" ng-disabled="isUpdating"/>\n            </td>\n            <td>\n              <p class="small text-muted" style="margin-top: 10px;">\n                The time window used to evaluate the restart policy (default value is 0, which is unbounded).\n              </p>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </rd-widget-body>\n    <rd-widget-footer>\n      <div class="btn-toolbar" role="toolbar">\n        <div class="btn-group" role="group">\n          <button type="button" class="btn btn-primary btn-sm" ng-disabled="!hasChanges(service, [\'RestartCondition\', \'RestartDelay\', \'RestartMaxAttempts\', \'RestartWindow\'])" ng-click="updateService(service)">Apply changes</button>\n          <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n            <span class="caret"></span>\n          </button>\n          <ul class="dropdown-menu">\n'+"            <li><a ng-click=\"cancelChanges(service, ['RestartCondition', 'RestartDelay', 'RestartMaxAttempts', 'RestartWindow'])\">Reset changes</a></li>\n            <li><a ng-click=\"cancelChanges(service)\">Reset all changes</a></li>\n          </ul>\n        </div>\n      </div>\n    </rd-widget-footer>\n  </rd-widget>\n</div>\n")}]),angular.module("app/components/service/includes/secrets.html",[]).run(["$templateCache",function(a){a.put("app/components/service/includes/secrets.html",'<div ng-if="applicationState.endpoint.apiVersion >= 1.25" id="service-secrets">\n  <rd-widget>\n    <rd-widget-header icon="fa-tasks" title="Secrets">\n    </rd-widget-header>\n    <rd-widget-body classes="no-padding">\n      <div class="form-inline" style="padding: 10px;">\n        Add a secret:\n        <select class="form-control" ng-options="secret.Name for secret in secrets" ng-model="newSecret">\n          <option selected disabled hidden value="">Select a secret</option>\n        </select>\n        <a class="btn btn-default btn-sm" ng-click="addSecret(service, newSecret)">\n          <i class="fa fa-plus-circle" aria-hidden="true"></i> add secret\n        </a>\n      </div>\n      <table class="table" style="margin-top: 5px;">\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>File name</th>\n            <th>UID</th>\n            <th>GID</th>\n            <th>Mode</th>\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr ng-repeat="secret in service.ServiceSecrets">\n            <td><a ui-sref="secret({id: secret.Id})">{{ secret.Name }}</a></td>\n            <td>{{ secret.FileName }}</td>\n            <td>{{ secret.Uid }}</td>\n            <td>{{ secret.Gid }}</td>\n            <td>{{ secret.Mode }}</td>\n            <td>\n              <button class="btn btn-xs btn-danger pull-right" type="button" ng-click="removeSecret(service, $index)" ng-disabled="isUpdating">\n                <i class="fa fa-trash" aria-hidden="true"></i> Remove secret\n              </button>\n            </td>\n          </tr>\n          <tr ng-if="service.ServiceSecrets.length === 0">\n            <td colspan="6" class="text-center text-muted">No secrets associated to this service.</td>\n          </tr>\n        </tbody>\n      </table>\n    </rd-widget-body>\n    <rd-widget-footer>\n      <div class="btn-toolbar" role="toolbar">\n        <div class="btn-group" role="group">\n          <button type="button" class="btn btn-primary btn-sm" ng-disabled="!hasChanges(service, [\'ServiceSecrets\'])" ng-click="updateService(service)">Apply changes</button>\n          <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n            <span class="caret"></span>\n          </button>\n          <ul class="dropdown-menu">\n            <li><a ng-click="cancelChanges(service, [\'ServiceSecrets\'])">Reset changes</a></li>\n            <li><a ng-click="cancelChanges(service)">Reset all changes</a></li>\n          </ul>\n        </div>\n      </div>\n    </rd-widget-footer>\n  </rd-widget>\n</div>\n')}]),angular.module("app/components/service/includes/servicelabels.html",[]).run(["$templateCache",function(a){
a.put("app/components/service/includes/servicelabels.html",'<div id="service-labels">\n  <rd-widget>\n    <rd-widget-header icon="fa-tasks" title="Service labels">\n      <div class="nopadding">\n        <a class="btn btn-default btn-sm pull-right" ng-click="isUpdating || addLabel(service)" ng-disabled="isUpdating">\n          <i class="fa fa-plus-circle" aria-hidden="true"></i> label\n        </a>\n      </div>\n    </rd-widget-header>\n    <rd-widget-body ng-if="service.ServiceLabels.length === 0">\n      <p>There are no labels for this service.</p>\n    </rd-widget-body>\n    <rd-widget-body classes="no-padding" ng-if="service.ServiceLabels.length > 0">\n      <table class="table">\n        <thead>\n          <tr>\n            <th>\n              Label\n            </th>\n            <th>\n              Value\n            </th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr ng-repeat="label in service.ServiceLabels">\n            <td>\n              <div class="input-group input-group-sm">\n                <span class="input-group-addon fit-text-size">name</span>\n                <input type="text" class="form-control" ng-model="label.key" placeholder="e.g. com.example.foo" ng-change="updateLabel(service, label)" ng-disabled="isUpdating">\n              </div>\n            </td>\n            <td>\n              <div class="input-group input-group-sm">\n                <span class="input-group-addon fit-text-size">value</span>\n                <input type="text" class="form-control" ng-model="label.value" placeholder="e.g. bar" ng-change="updateLabel(service, label)" ng-disabled="isUpdating">\n                <span class="input-group-btn">\n                  <button class="btn btn-sm btn-danger" type="button" ng-click="removeLabel(service, $index)" ng-disabled="isUpdating">\n                    <i class="fa fa-trash" aria-hidden="true"></i>\n                  </button>\n                </span>\n              </div>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </rd-widget-body>\n    <rd-widget-footer>\n      <div class="btn-toolbar" role="toolbar">\n        <div class="btn-group" role="group">\n          <button type="button" class="btn btn-primary btn-sm" ng-disabled="!hasChanges(service, [\'ServiceLabels\'])" ng-click="updateService(service)">Apply changes</button>\n          <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n            <span class="caret"></span>\n          </button>\n          <ul class="dropdown-menu">\n            <li><a ng-click="cancelChanges(service, [\'ServiceLabels\'])">Reset changes</a></li>\n            <li><a ng-click="cancelChanges(service)">Reset all changes</a></li>\n          </ul>\n        </div>\n      </div>\n    </rd-widget-footer>\n  </rd-widget>\n</div>\n')}]),angular.module("app/components/service/includes/tasks.html",[]).run(["$templateCache",function(a){a.put("app/components/service/includes/tasks.html",'<div ng-if="tasks.length > 0 && nodes" id="service-tasks">\n  <rd-widget>\n    <rd-widget-header icon="fa-tasks" title="Associated tasks">\n      <div class="pull-right">\n      Items per page:\n      <select ng-model="state.pagination_count" ng-change="changePaginationCount()">\n        <option value="0">All</option>\n        <option value="10">10</option>\n        <option value="25">25</option>\n        <option value="50">50</option>\n        <option value="100">100</option>\n      </select>\n      </div>\n    </rd-widget-header>\n    <rd-widget-body classes="no-padding">\n      <table class="table">\n      <thead>\n        <tr>\n        <th>Id</th>\n        <th>\n          <a ng-click="order(\'Status.State\')">\n          Status\n          <span ng-show="sortType == \'Status.State\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n          <span ng-show="sortType == \'Status.State\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n          </a>\n        </th>\n        <th ng-if="service.Mode !== \'global\'">\n          <a ng-click="order(\'Slot\')">\n          Slot\n          <span ng-show="sortType == \'Slot\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n          <span ng-show="sortType == \'Slot\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n          </a>\n        </th>\n        <th>\n          <a ng-click="order(\'NodeId\')">\n          Node\n          <span ng-show="sortType == \'NodeId\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n          <span ng-show="sortType == \'NodeId\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n          </a>\n        </th>\n        <th>\n          <a ng-click="order(\'Updated\')">\n          Last update\n          <span ng-show="sortType == \'Updated\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n          <span ng-show="sortType == \'Updated\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n          </a>\n        </th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr dir-paginate="task in (filteredTasks = ( tasks | orderBy:sortType:sortReverse | itemsPerPage: state.pagination_count))">\n        <td><a ui-sref="task({ id: task.Id })" class="monospaced">{{ task.Id }}</a></td>\n        <td><span class="label label-{{ task.Status.State|taskstatusbadge }}">{{ task.Status.State }}</span></td>\n        <td ng-if="service.Mode !== \'global\'">{{ task.Slot }}</td>\n        <td>{{ task.NodeId | tasknodename: nodes }}</td>\n        <td>{{ task.Updated | getisodate }}</td>\n        </tr>\n      </tbody>\n      </table>\n      <div ng-if="tasks" class="pagination-controls" >\n      <dir-pagination-controls></dir-pagination-controls>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n\n')}]),angular.module("app/components/service/includes/updateconfig.html",[]).run(["$templateCache",function(a){a.put("app/components/service/includes/updateconfig.html",'<div id="service-update-config">\n  <rd-widget>\n    <rd-widget-header icon="fa-list-alt" title="Update configuration">\n    </rd-widget-header>\n    <rd-widget-body classes="no-padding">\n      <table class="table">\n        <tbody>\n          <tr>\n            <td>Update Parallelism</td>\n            <td>\n              <input class="input-sm" type="number" ng-model="service.UpdateParallelism" ng-change="updateServiceAttribute(service, \'UpdateParallelism\')" ng-disabled="isUpdating"/>\n            </td>\n            <td>\n              <p class="small text-muted" style="margin-top: 10px;">\n                Maximum number of tasks to be updated simultaneously (0 to update all at once).\n              </p>\n            </td>\n          </tr>\n          <tr>\n            <td>Update Delay</td>\n            <td>\n              <input class="input-sm" type="number" ng-model="service.UpdateDelay" ng-change="updateServiceAttribute(service, \'UpdateDelay\')" ng-disabled="isUpdating"/>\n            </td>\n            <td>\n              <p class="small text-muted" style="margin-top: 10px;">\n                Amount of time between updates.\n              </p>\n            </td>\n          </tr>\n          <tr>\n            <td>Update Failure Action</td>\n            <td>\n              <div class="form-group">\n                <label class="radio-inline">\n                  <input type="radio" name="failure_action" ng-model="service.UpdateFailureAction" value="continue" ng-change="updateServiceAttribute(service, \'UpdateFailureAction\')" ng-disabled="isUpdating">\n                  Continue\n                </label>\n                <label class="radio-inline">\n                  <input type="radio" name="failure_action" ng-model="service.UpdateFailureAction" value="pause" ng-change="updateServiceAttribute(service, \'UpdateFailureAction\')" ng-disabled="isUpdating">\n                  Pause\n                </label>\n              </div>\n            </td>\n            <td>\n              <p class="small text-muted" style="margin-top: 10px;">\n                Action taken on failure to start after update.\n              </p>\n            </td>\n          </tr>\n          <tr ng-if="applicationState.endpoint.apiVersion >= 1.29">\n            <td>Order</td>\n            <td>\n              <div class="form-group">\n                <label class="radio-inline">\n                  <input type="radio" name="updateconfig_order" ng-model="service.UpdateOrder" value="start-first" ng-change="updateServiceAttribute(service, \'UpdateOrder\')" ng-disabled="isUpdating">\n                  start-first\n                </label>\n                <label class="radio-inline">\n                  <input type="radio" name="updateconfig_order" ng-model="service.UpdateOrder" value="stop-first" ng-change="updateServiceAttribute(service, \'UpdateOrder\')" ng-disabled="isUpdating">\n                  stop-first\n                </label>\n              </div>\n            </td>\n            <td>\n              <p class="small text-muted" style="margin-top: 10px;">\n                Operation order on failure.\n              </p>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </rd-widget-body>\n    <rd-widget-footer>\n      <div class="btn-toolbar" role="toolbar">\n        <div class="btn-group" role="group">\n          <button type="button" class="btn btn-primary btn-sm" ng-disabled="!hasChanges(service, [\'UpdateFailureAction\', \'UpdateDelay\', \'UpdateParallelism\', \'UpdateOrder\'])" ng-click="updateService(service)">Apply changes</button>\n          <button type="button" class="btn btn-default btn-sm dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n            <span class="caret"></span>\n          </button>\n          <ul class="dropdown-menu">\n'+"            <li><a ng-click=\"cancelChanges(service, ['UpdateFailureAction', 'UpdateDelay', 'UpdateParallelism', 'UpdateOrder'])\">Reset changes</a></li>\n            <li><a ng-click=\"cancelChanges(service)\">Reset all changes</a></li>\n          </ul>\n        </div>\n      </div>\n    </rd-widget-footer>\n  </rd-widget>\n</div>\n")}]),angular.module("app/components/service/service.html",[]).run(["$templateCache",function(a){a.put("app/components/service/service.html",'<rd-header>\n  <rd-header-title title="Service details">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="service({id: service.Id})" ui-sref-opts="{reload: true}">\n      <i class="fa fa-refresh" aria-hidden="true"></i>\n    </a>\n    <i id="loadingViewSpinner" class="fa fa-cog fa-spin"></i>\n  </rd-header-title>\n  <rd-header-content>\n    <a ui-sref="services">Services</a> &gt; <a ui-sref="service({id: service.Id})">{{ service.Name }}</a>\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div ng-if="isUpdating" class="col-lg-12 col-md-12 col-xs-12">\n    <div class="alert alert-info" role="alert" id="service-update-alert">\n      <p>This service is being updated. Editing this service is currently disabled.</p>\n      <a ui-sref="service({id: service.Id}, {reload: true})">Refresh to see if this service has finished updated.</a>\n    </div>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-lg-9 col-md-9 col-xs-9">\n    <rd-widget>\n      <rd-widget-header icon="fa-list-alt" title="Service details"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>Name</td>\n              <td ng-if="applicationState.endpoint.apiVersion <= 1.24">\n                <input type="text" class="form-control" ng-model="service.Name" ng-change="updateServiceAttribute(service, \'Name\')" ng-disabled="isUpdating">\n              </td>\n              <td ng-if="applicationState.endpoint.apiVersion >= 1.25">\n                {{ service.Name }}\n              </td>\n            </tr>\n            <tr>\n              <td>ID</td>\n              <td>\n                {{ service.Id }}\n                <button class="btn btn-xs btn-danger" ng-click="removeService()"><i class="fa fa-trash space-right" aria-hidden="true" ng-disabled="isUpdating"></i>Delete this service</button>\n              </td>\n            </tr>\n            <tr ng-if="service.CreatedAt">\n              <td>Created at</td>\n              <td>{{ service.CreatedAt|getisodate}}</td>\n            </tr>\n            <tr ng-if="service.UpdatedAt">\n              <td>Last updated at</td>\n              <td>{{ service.UpdatedAt|getisodate }}</td>\n            </tr>\n            <tr ng-if="service.Version">\n              <td>Version</td>\n              <td>{{ service.Version }}</td>\n            </tr>\n            <tr>\n              <td>Scheduling mode</td>\n              <td>{{ service.Mode }}</td>\n            </tr>\n            <tr ng-if="service.Mode === \'replicated\'">\n              <td>Replicas</td>\n              <td>\n                <span ng-if="service.Mode === \'replicated\'">\n                  <input class="input-sm" type="number" ng-model="service.Replicas" ng-change="updateServiceAttribute(service, \'Replicas\')" ng-disabled="isUpdating" />\n                </span>\n              </td>\n            </tr>\n            <tr>\n              <td>Image</td>\n              <td>\n                <input type="text" class="form-control" ng-model="service.Image" ng-change="updateServiceAttribute(service, \'Image\')" ng-disabled="isUpdating" />\n              </td>\n            </tr>\n            <tr ng-if="applicationState.endpoint.apiVersion >= 1.30">\n              <td colspan="2">\n                <div class="btn-group" role="group" aria-label="...">\n                  <a class="btn btn-outline-secondary" type="button" ui-sref="servicelogs({id: service.Id})"><i class="fa fa-exclamation-circle space-right" aria-hidden="true"></i>Logs</a>\n                </div>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n      <rd-widget-footer>\n        <p class="small text-muted">\n          Do you need help? View the Docker Service documentation <a href="https://docs.docker.com/engine/reference/commandline/service_update/" target="self">here</a>.\n        </p>\n        <div class="btn-toolbar" role="toolbar">\n          <div class="btn-group" role="group">\n            <button type="button" class="btn btn-primary" ng-disabled="!hasChanges(service, [\'Mode\', \'Replicas\', \'Image\', \'Name\'])" ng-click="updateService(service)">Apply changes</button>\n            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">\n              <span class="caret"></span>\n            </button>\n            <ul class="dropdown-menu">\n              <li><a ng-click="cancelChanges(service, [\'Mode\', \'Replicas\', \'Image\', \'Name\'])">Reset changes</a></li>\n              <li><a ng-click="cancelChanges(service)">Reset all changes</a></li>\n            </ul>\n          </div>\n        </div>\n      </rd-widget-footer>\n    </rd-widget>\n  </div>\n\n  <div class="col-lg-3 col-md-3 col-xs-3">\n    <rd-widget>\n      <rd-widget-header icon="fa-bars" title="Quick navigation"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <ul class="nav nav-pills nav-stacked">\n          <li><a href ng-click="goToItem(\'service-env-variables\')">Environment variables</a></li>\n          <li><a href ng-click="goToItem(\'service-container-labels\')">Container labels</a></li>\n          <li><a href ng-click="goToItem(\'service-mounts\')">Mounts</a></li>\n          <li><a href ng-click="goToItem(\'service-network-specs\')">Network &amp; published ports</a></li>\n          <li><a href ng-click="goToItem(\'service-resources\')">Resource limits &amp; reservations</a></li>\n          <li><a href ng-click="goToItem(\'service-placement-constraints\')">Placement constraints</a></li>\n          <li ng-if="applicationState.endpoint.apiVersion >= 1.30"><a href ng-click="goToItem(\'service-placement-preferences\')">Placement preferences</a></li>\n          <li><a href ng-click="goToItem(\'service-restart-policy\')">Restart policy</a></li>\n          <li><a href ng-click="goToItem(\'service-update-config\')">Update configuration</a></li>\n          <li><a href ng-click="goToItem(\'service-labels\')">Service labels</a></li>\n          <li ng-if="applicationState.endpoint.apiVersion >= 1.25"><a href ng-click="goToItem(\'service-secrets\')">Secrets</a></li>\n          <li><a href ng-click="goToItem(\'service-tasks\')">Tasks</a></li>\n        </ul>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n\x3c!-- access-control-panel --\x3e\n<por-access-control-panel\n  ng-if="service && applicationState.application.authentication"\n  resource-id="service.Id"\n  resource-control="service.ResourceControl"\n  resource-type="\'service\'">\n</por-access-control-panel>\n\x3c!-- !access-control-panel --\x3e\n\n<div class="row">\n  <hr>\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <h3 id="container-specs">Container specification</h3>\n    <div id="service-container-spec" class="padding-top" ng-include="\'app/components/service/includes/container-specs.html\'"></div>\n    <div id="service-env-variables" class="padding-top" ng-include="\'app/components/service/includes/environmentvariables.html\'"></div>\n    <div id="service-container-labels" class="padding-top" ng-include="\'app/components/service/includes/containerlabels.html\'"></div>\n    <div id="service-mounts" class="padding-top" ng-include="\'app/components/service/includes/mounts.html\'"></div>\n  </div>\n</div>\n\n<div class="row">\n  <hr>\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <h3 id="service-network-specs">Networks &amp; ports</h3>\n    <div id="service-networks" class="padding-top" ng-include="\'app/components/service/includes/networks.html\'"></div>\n    <div id="service-published-ports" class="padding-top" ng-include="\'app/components/service/includes/ports.html\'"></div>\n  </div>\n</div>\n\n<div class="row">\n  <hr>\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <h3 id="service-specs">Service specification</h3>\n    <div id="service-resources" class="padding-top" ng-include="\'app/components/service/includes/resources.html\'"></div>\n    <div id="service-placement-constraints" class="padding-top" ng-include="\'app/components/service/includes/constraints.html\'"></div>\n    <div id="service-placement-preferences" ng-if="applicationState.endpoint.apiVersion >= 1.30" class="padding-top" ng-include="\'app/components/service/includes/placementPreferences.html\'"></div>\n    <div id="service-restart-policy" class="padding-top" ng-include="\'app/components/service/includes/restart.html\'"></div>\n    <div id="service-update-config" class="padding-top" ng-include="\'app/components/service/includes/updateconfig.html\'"></div>\n    <div id="service-labels" class="padding-top" ng-include="\'app/components/service/includes/servicelabels.html\'"></div>\n    <div id="service-secrets" ng-if="applicationState.endpoint.apiVersion >= 1.25" class="padding-top" ng-include="\'app/components/service/includes/secrets.html\'"></div>\n    <div id="service-tasks" class="padding-top" ng-include="\'app/components/service/includes/tasks.html\'"></div>\n  </div>\n</div>\n')}]),angular.module("app/components/serviceLogs/servicelogs.html",[]).run(["$templateCache",function(a){a.put("app/components/serviceLogs/servicelogs.html",'<rd-header>\n  <rd-header-title title="Service logs">\n      <i id="loadingViewSpinner" class="fa fa-cog fa-spin"></i>\n  </rd-header-title>\n  <rd-header-content>\n    <a ui-sref="services">Services</a> > <a ui-sref="service({id: service.ID})">{{ service.Spec.Name }}</a> > Logs\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-body>\n        <div class="widget-icon grey pull-left">\n          <i class="fa fa-list-alt"></i>\n        </div>\n        <div class="title">{{ service.Spec.Name }}</div>\n        <div class="comment">Name</div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-info-circle" title="Stdout logs"></rd-widget-header>\n      <rd-widget-taskbar>\n        <input type="checkbox" ng-model="state.displayTimestampsOut" id="displayAllTsOut" ng-change="toggleTimestampsOut()"/>\n        <label for="displayAllTsOut">Display timestamps</label>\n      </rd-widget-taskbar>\n      <rd-widget-body classes="no-padding">\n        <div class="panel-body">\n          <pre id="stdoutLog" class="pre-scrollable pre-x-scrollable">{{stdout}}</pre>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-exclamation-triangle" title="Stderr logs"></rd-widget-header>\n      <rd-widget-taskbar>\n        <input type="checkbox" ng-model="state.displayTimestampsErr" id="displayAllTsErr" ng-change="toggleTimestampsErr()"/>\n        <label for="displayAllTsErr">Display timestamps</label>\n      </rd-widget-taskbar>\n      <rd-widget-body classes="no-padding">\n        <div class="panel-body">\n          <pre id="stderrLog" class="pre-scrollable pre-x-scrollable">{{stderr}}</pre>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),angular.module("app/components/services/services.html",[]).run(["$templateCache",function(a){a.put("app/components/services/services.html",'<rd-header>\n  <rd-header-title title="Service list">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="services" ui-sref-opts="{reload: true}">\n      <i class="fa fa-refresh" aria-hidden="true"></i>\n    </a>\n    <i id="loadServicesSpinner" class="fa fa-cog fa-spin" style="margin-left: 5px;"></i>\n  </rd-header-title>\n  <rd-header-content>Services</rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-list-alt" title="Services">\n        <div class="pull-right">\n          Items per page:\n          <select ng-model="state.pagination_count" ng-change="changePaginationCount()">\n            <option value="0">All</option>\n            <option value="10">10</option>\n            <option value="25">25</option>\n            <option value="50">50</option>\n            <option value="100">100</option>\n          </select>\n        </div>\n      </rd-widget-header>\n      <rd-widget-taskbar classes="col-lg-12 col-md-12 col-xs-12">\n        <div class="pull-left">\n          <button type="button" class="btn btn-danger" ng-click="removeAction()" ng-disabled="!state.selectedItemCount"><i class="fa fa-trash space-right" aria-hidden="true"></i>Remove</button>\n          <a class="btn btn-primary" type="button" ui-sref="actions.create.service"><i class="fa fa-plus space-right" aria-hidden="true"></i>Add service</a>\n        </div>\n        <div class="pull-right">\n          <input type="text" id="filter" ng-model="state.filter" placeholder="Filter..." class="form-control input-sm" />\n        </div>\n      </rd-widget-taskbar>\n      <rd-widget-body classes="no-padding">\n        <div class="table-responsive">\n          <table class="table table-hover">\n            <thead>\n              <th></th>\n              <th>\n                <a ui-sref="services" ng-click="order(\'Name\')">\n                  Name\n                  <span ng-show="sortType == \'Name\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                  <span ng-show="sortType == \'Name\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                </a>\n              </th>\n              <th>\n                <a ui-sref="services" ng-click="order(\'Image\')">\n                  Image\n                  <span ng-show="sortType == \'Image\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                  <span ng-show="sortType == \'Image\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                </a>\n              </th>\n              <th>\n                <a ui-sref="services" ng-click="order(\'Mode\')">\n                  Scheduling mode\n                  <span ng-show="sortType == \'Mode\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                  <span ng-show="sortType == \'Mode\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                </a>\n              </th>\n              <th>\n                <a ui-sref="services" ng-click="order(\'Ports\')">\n                  Published Ports\n                  <span ng-show="sortType == \'Ports\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                  <span ng-show="sortType == \'Ports\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                </a>\n              </th>\n              <th>\n                <a ui-sref="services" ng-click="order(\'UpdatedAt\')">\n                  Updated at\n                  <span ng-show="sortType == \'UpdatedAt\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                  <span ng-show="sortType == \'UpdatedAt\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                </a>\n              </th>\n              <th ng-if="applicationState.application.authentication">\n                <a ui-sref="services" ng-click="order(\'ResourceControl.Ownership\')">\n                  Ownership\n                  <span ng-show="sortType == \'ResourceControl.Ownership\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                  <span ng-show="sortType == \'ResourceControl.Ownership\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                </a>\n              </th>\n            </thead>\n            <tbody>\n              <tr dir-paginate="service in (state.filteredServices = ( services | filter:state.filter | orderBy:sortType:sortReverse | itemsPerPage: state.pagination_count))">\n                <td><input type="checkbox" ng-model="service.Checked" ng-change="selectItem(service)"/></td>\n                <td><a ui-sref="service({id: service.Id})">{{ service.Name }}</a></td>\n                <td>{{ service.Image | hideshasum }}</td>\n                <td>\n                  {{ service.Mode }}\n                  <code data-toggle="tooltip" title="Replicas">{{ service.Running }}</code>\n                  /\n                  <code data-toggle="tooltip" title="Replicas">{{ service.Replicas }}</code>\n                  <span ng-if="service.Mode === \'replicated\' && !service.Scale">\n                    <a class="interactive" ng-click="service.Scale = true; service.ReplicaCount = service.Replicas;"><i class="fa fa-arrows-v" aria-hidden="true"></i> Scale</a>\n                  </span>\n                  <span ng-if="service.Mode === \'replicated\' && service.Scale">\n                    <input class="input-sm" type="number" ng-model="service.Replicas" />\n                    <a class="interactive" ng-click="service.Scale = false;"><i class="fa fa-times"></i></a>\n                    <a class="interactive" ng-click="scaleService(service)"><i class="fa fa-check-square-o"></i></a>\n                  </span>\n                </td>\n                <td>\n                  <a ng-if="service.Ports && service.Ports.length > 0 && swarmManagerIP" ng-repeat="p in service.Ports" class="image-tag" ng-href="http://{{swarmManagerIP}}:{{p.PublishedPort}}" target="_blank">\n                    <i class="fa fa-external-link" aria-hidden="true"></i> {{ p.PublishedPort }}:{{ p.TargetPort }}\n                  </a>\n                  <span ng-if="!service.Ports || service.Ports.length === 0 || !swarmManagerIP" >-</span>\n                </td>\n                <td>\n                  {{ service.UpdatedAt|getisodate }}\n                </td>\n                <td ng-if="applicationState.application.authentication">\n                  <span>\n                    <i ng-class="service.ResourceControl.Ownership | ownershipicon" aria-hidden="true"></i>\n                    {{ service.ResourceControl.Ownership ? service.ResourceControl.Ownership : service.ResourceControl.Ownership = \'public\' }}\n                  </span>\n                </td>\n              </tr>\n              <tr ng-if="!services">\n                <td colspan="7" class="text-center text-muted">Loading...</td>\n              </tr>\n              <tr ng-if="services.length == 0">\n                <td colspan="7" class="text-center text-muted">No services available.</td>\n              </tr>\n            </tbody>\n          </table>\n          <div ng-if="services" class="pull-left pagination-controls">\n            <dir-pagination-controls></dir-pagination-controls>\n          </div>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),angular.module("app/components/settings/settings.html",[]).run(["$templateCache",function(a){
a.put("app/components/settings/settings.html",'<rd-header>\n  <rd-header-title title="Settings">\n    <i id="loadingViewSpinner" class="fa fa-cog fa-spin" style="margin-left: 5px;"></i>\n  </rd-header-title>\n  <rd-header-content>Settings</rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-cogs" title="Application settings"></rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          \x3c!-- logo --\x3e\n          <div class="col-sm-12 form-section-title">\n            Logo\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label for="toggle_logo" class="control-label text-left">\n                Use custom logo\n              </label>\n              <label class="switch" style="margin-left: 20px;">\n                <input type="checkbox" name="toggle_logo" ng-model="formValues.customLogo"><i></i>\n              </label>\n            </div>\n          </div>\n          <div ng-if="formValues.customLogo">\n            <div class="form-group">\n              <span class="col-sm-12 text-muted small">\n                You can specify the URL to your logo here. For an optimal display, logo dimensions should be 155px by 55px.\n              </span>\n            </div>\n            <div class="form-group">\n              <label for="logo_url" class="col-sm-1 control-label text-left">\n                URL\n              </label>\n              <div class="col-sm-11">\n                <input type="text" class="form-control" ng-model="settings.LogoURL" id="logo_url" placeholder="https://mycompany.com/logo.png">\n              </div>\n            </div>\n          </div>\n          \x3c!-- !logo --\x3e\n          \x3c!-- app-templates --\x3e\n          <div class="col-sm-12 form-section-title">\n            App Templates\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label for="toggle_templates" class="control-label text-left">\n                Use custom templates\n              </label>\n              <label class="switch" style="margin-left: 20px;">\n                <input type="checkbox" name="toggle_templates" ng-model="formValues.customTemplates"><i></i>\n              </label>\n            </div>\n          </div>\n          <div ng-if="formValues.customTemplates">\n            <div class="form-group">\n              <span class="col-sm-12 text-muted small">\n                You can specify the URL to your own template definitions file here. See <a href="https://portainer.readthedocs.io/en/stable/templates.html" target="_blank">Portainer documentation</a> for more details.\n              </span>\n            </div>\n            <div class="form-group" >\n              <label for="templates_url" class="col-sm-1 control-label text-left">\n                URL\n              </label>\n              <div class="col-sm-11">\n                <input type="text" class="form-control" ng-model="settings.TemplatesURL" id="templates_url" placeholder="https://myserver.mydomain/templates.json">\n              </div>\n            </div>\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <label for="toggle_external_contrib" class="control-label text-left">\n                Hide external contributions\n                <portainer-tooltip position="bottom" message="When enabled, external contributions such as LinuxServer.io will not be displayed in the sidebar."></portainer-tooltip>\n              </label>\n              <label class="switch" style="margin-left: 20px;">\n                <input type="checkbox" name="toggle_external_contrib" ng-model="formValues.externalContributions"><i></i>\n              </label>\n            </div>\n          </div>\n          \x3c!-- !app-templates --\x3e\n          \x3c!-- actions --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-click="saveApplicationSettings()">Save</button>\n              <i id="updateSettingsSpinner" class="fa fa-cog fa-spin" style="margin-left: 5px; display: none;"></i>\n              \x3c!-- <span class="text-danger" ng-if="state.formValidationError" style="margin-left: 5px;">{{ state.formValidationError }}</span> --\x3e\n            </div>\n          </div>\n          \x3c!-- !actions --\x3e\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-tags" title="Hidden containers"></rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          <div class="form-group">\n            <span class="col-sm-12 text-muted small">\n              You can hide containers with specific labels from Portainer UI. You need to specify the label name and value.\n            </span>\n          </div>\n          <div class="form-group">\n            <label for="header_name" class="col-sm-1 control-label text-left">Name</label>\n            <div class="col-sm-11 col-md-4">\n              <input type="text" class="form-control" id="header_name" ng-model="formValues.labelName" placeholder="e.g. com.example.foo">\n            </div>\n            <label for="header_value" class="col-sm-1 margin-sm-top control-label text-left">Value</label>\n            <div class="col-sm-11 col-md-4 margin-sm-top">\n              <input type="text" class="form-control" id="header_value" ng-model="formValues.labelValue" placeholder="e.g. bar">\n            </div>\n            <div class="col-sm-12 col-md-2 margin-sm-top">\n              <button type="button" class="btn btn-primary btn-sm" ng-click="addFilteredContainerLabel()" ng-disabled="!formValues.labelValue || !formValues.labelName"><i class="fa fa-plus space-right" aria-hidden="true"></i>Add filter</button>\n            </div>\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12 table-responsive">\n              <table class="table table-hover">\n                <thead>\n                  <tr>\n                    <th>Name</th>\n                    <th>Value</th>\n                    <th></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr ng-repeat="label in settings.BlackListedLabels">\n                    <td>{{ label.name }}</td>\n                    <td>{{ label.value }}</td>\n                    <td><button type="button" class="btn btn-danger btn-xs" ng-click="removeFilteredContainerLabel($index)"><i class="fa fa-trash space-right" aria-hidden="true"></i>Remove</button></td>\n                  </tr>\n                  <tr ng-if="settings.BlackListedLabels.length === 0">\n                    <td colspan="3" class="text-center text-muted">No filter available.</td>\n                  </tr>\n                  <tr ng-if="!settings.BlackListedLabels">\n                    <td colspan="3" class="text-center text-muted">Loading...</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n          \x3c!-- !filtered-labels --\x3e\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),angular.module("app/components/settingsAuthentication/settingsAuthentication.html",[]).run(["$templateCache",function(a){a.put("app/components/settingsAuthentication/settingsAuthentication.html",'<rd-header>\n  <rd-header-title title="Authentication settings">\n    <i id="loadingViewSpinner" class="fa fa-cog fa-spin" style="margin-left: 5px;"></i>\n  </rd-header-title>\n  <rd-header-content>\n    <a ui-sref="settings">Settings</a> &gt; Authentication\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-users" title="Authentication"></rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          <div class="col-sm-12 form-section-title">\n            Authentication method\n          </div>\n          <div class="form-group"></div>\n          <div class="form-group" style="margin-bottom: 0">\n            <div class="boxselector_wrapper">\n              <div>\n                <input type="radio" id="registry_quay" ng-model="settings.AuthenticationMethod" ng-value="1">\n                <label for="registry_quay">\n                  <div class="boxselector_header">\n                    <i class="fa fa-users" aria-hidden="true" style="margin-right: 2px;"></i>\n                    Internal\n                  </div>\n                  <p>Internal authentication mechanism</p>\n                </label>\n              </div>\n              <div>\n                <input type="radio" id="registry_custom" ng-model="settings.AuthenticationMethod" ng-value="2">\n                <label for="registry_custom">\n                  <div class="boxselector_header">\n                    <i class="fa fa-users" aria-hidden="true" style="margin-right: 2px;"></i>\n                    LDAP\n                  </div>\n                  <p>LDAP authentication</p>\n                </label>\n              </div>\n            </div>\n          </div>\n          <div class="col-sm-12 form-section-title">\n            Information\n          </div>\n          <div class="form-group" ng-if="settings.AuthenticationMethod === 1">\n            <span class="col-sm-12 text-muted small">\n              When using internal authentication, Portainer will encrypt user passwords and store credentials locally.\n            </span>\n          </div>\n          <div class="form-group" ng-if="settings.AuthenticationMethod === 2">\n            <span class="col-sm-12 text-muted small">\n              When using LDAP authentication, Portainer will delegate user authentication to a LDAP server (exception for the <b>admin</b> user that always uses internal authentication).\n              <p style="margin-top:5px;">\n                <i class="fa fa-exclamation-triangle orange-icon" aria-hidden="true" style="margin-right: 2px;"></i>\n                <u>Users still need to be created in Portainer beforehand.</u>\n              </p>\n            </span>\n          </div>\n\n          <div ng-if="settings.AuthenticationMethod === 2">\n            <div class="col-sm-12 form-section-title">\n              LDAP configuration\n            </div>\n\n            <div class="form-group">\n              <label for="ldap_url" class="col-sm-3 col-lg-2 control-label text-left">\n                LDAP URL\n                <portainer-tooltip position="bottom" message="URL or IP address of the LDAP server."></portainer-tooltip>\n              </label>\n              <div class="col-sm-9 col-lg-10">\n                <input type="text" class="form-control" id="ldap_url" ng-model="LDAPSettings.URL" placeholder="e.g. 10.0.0.10:389 or myldap.domain.tld:389">\n              </div>\n            </div>\n\n            <div class="form-group">\n              <label for="ldap_username" class="col-sm-3 col-lg-2 control-label text-left">\n                Reader DN\n                <portainer-tooltip position="bottom" message="Account that will be used to search for users."></portainer-tooltip>\n              </label>\n              <div class="col-sm-9 col-lg-10">\n                <input type="text" class="form-control" id="ldap_username" ng-model="LDAPSettings.ReaderDN" placeholder="cn=readonly-account,dc=ldap,dc=domain,dc=tld">\n              </div>\n            </div>\n\n            <div class="form-group">\n              <label for="ldap_password" class="col-sm-3 col-lg-2 control-label text-left">\n                Password\n              </label>\n              <div class="col-sm-9 col-lg-10">\n                <input type="password" class="form-control" id="ldap_password" ng-model="LDAPSettings.Password" placeholder="password">\n              </div>\n            </div>\n\n            <div class="form-group" ng-if="!LDAPSettings.TLSConfig.TLS && !LDAPSettings.StartTLS">\n              <label for="ldap_password" class="col-sm-3 col-lg-2 control-label text-left">\n                Connectivity check\n                <i class="fa fa-check green-icon" style="margin-left: 5px;" ng-if="state.successfulConnectivityCheck"></i>\n                <i class="fa fa-times red-icon" style="margin-left: 5px;" ng-if="state.failedConnectivityCheck"></i>\n              </label>\n              <div class="col-sm-9 col-lg-10">\n                <button type="button" class="btn btn-primary btn-sm" ng-disabled="!LDAPSettings.URL || !LDAPSettings.ReaderDN || !LDAPSettings.Password" ng-click="LDAPConnectivityCheck()">Test connectivity</button>\n                <i id="connectivityCheckSpinner" class="fa fa-cog fa-spin" style="margin-left: 5px; display: none;"></i>\n              </div>\n            </div>\n\n            <div class="col-sm-12 form-section-title">\n              LDAP security\n            </div>\n\n            \x3c!-- starttls --\x3e\n            <div class="form-group" ng-if="!LDAPSettings.TLSConfig.TLS">\n              <div class="col-sm-12">\n                <label for="tls" class="control-label text-left">\n                  Use StartTLS\n                  <portainer-tooltip position="bottom" message="Enable this option if want to use StartTLS to secure the connection to the server. Ignored if Use TLS is selected."></portainer-tooltip>\n                </label>\n                <label class="switch" style="margin-left: 20px;">\n                  <input type="checkbox" ng-model="LDAPSettings.StartTLS"><i></i>\n                </label>\n              </div>\n            </div>\n            \x3c!-- !starttls --\x3e\n\n            \x3c!-- tls-checkbox --\x3e\n            <div class="form-group" ng-if="!LDAPSettings.StartTLS">\n              <div class="col-sm-12">\n                <label for="tls" class="control-label text-left">\n                  Use TLS\n                  <portainer-tooltip position="bottom" message="Enable this option if you need to specify TLS certificates to connect to the LDAP server."></portainer-tooltip>\n                </label>\n                <label class="switch" style="margin-left: 20px;">\n                  <input type="checkbox" ng-model="LDAPSettings.TLSConfig.TLS"><i></i>\n                </label>\n              </div>\n            </div>\n            \x3c!-- !tls-checkbox --\x3e\n\n            \x3c!-- tls-skip-verify --\x3e\n            <div class="form-group">\n              <div class="col-sm-12">\n                <label for="tls" class="control-label text-left">\n                  Skip verification of server certificate\n                  <portainer-tooltip position="bottom" message="Skip the verification of the server TLS certificate. Not recommended on unsecured networks."></portainer-tooltip>\n                </label>\n                <label class="switch" style="margin-left: 20px;">\n                  <input type="checkbox" ng-model="LDAPSettings.TLSConfig.TLSSkipVerify"><i></i>\n                </label>\n              </div>\n            </div>\n            \x3c!-- !tls-skip-verify --\x3e\n\n            \x3c!-- tls-certs --\x3e\n            <div ng-if="LDAPSettings.TLSConfig.TLS || LDAPSettings.StartTLS">\n              \x3c!-- ca-input --\x3e\n              <div class="form-group" ng-if="!LDAPSettings.TLSConfig.TLSSkipVerify">\n                <label class="col-sm-2 control-label text-left">TLS CA certificate</label>\n                <div class="col-sm-10">\n                  <button class="btn btn-sm btn-primary" ngf-select ng-model="formValues.TLSCACert">Select file</button>\n                  <span style="margin-left: 5px;">\n                    {{ formValues.TLSCACert.name }}\n                    <i class="fa fa-check green-icon" ng-if="formValues.TLSCACert && formValues.TLSCACert === LDAPSettings.TLSConfig.TLSCACert" aria-hidden="true"></i>\n                    <i class="fa fa-times red-icon" ng-if="!formValues.TLSCACert" aria-hidden="true"></i>\n                    <i class="fa fa-circle-o-notch fa-spin" ng-if="state.uploadInProgress"></i>\n                  </span>\n                </div>\n              </div>\n              \x3c!-- !ca-input --\x3e\n            </div>\n            \x3c!-- !tls-certs --\x3e\n\n            <div class="form-group" ng-if="LDAPSettings.TLSConfig.TLS || LDAPSettings.StartTLS">\n              <label for="ldap_password" class="col-sm-3 col-lg-2 control-label text-left">\n                Connectivity check\n                <i class="fa fa-check green-icon" style="margin-left: 5px;" ng-if="state.successfulConnectivityCheck"></i>\n                <i class="fa fa-times red-icon" style="margin-left: 5px;" ng-if="state.failedConnectivityCheck"></i>\n              </label>\n              <div class="col-sm-9 col-lg-10">\n                <button type="button" class="btn btn-primary btn-sm" ng-click="LDAPConnectivityCheck()" ng-disabled="!LDAPSettings.URL || !LDAPSettings.ReaderDN || !LDAPSettings.Password || (!formValues.TLSCACert && !LDAPSettings.TLSConfig.TLSSkipVerify)">Test connectivity</button>\n                <i id="connectivityCheckSpinner" class="fa fa-cog fa-spin" style="margin-left: 5px; display: none;"></i>\n              </div>\n            </div>\n\n            <div class="col-sm-12 form-section-title">\n              User search configurations\n            </div>\n\n            \x3c!-- search-settings --\x3e\n            <div ng-repeat="config in LDAPSettings.SearchSettings | limitTo: (1 - LDAPSettings.SearchSettings)" style="margin-top: 5px;">\n\n              <div class="form-group" ng-if="$index > 0">\n                <span class="col-sm-12 text-muted small">\n                  Extra search configuration\n                </span>\n              </div>\n\n              <div class="form-group">\n                <label for="ldap_basedn_{{$index}}" class="col-sm-4 col-md-2 control-label text-left">\n                  Base DN\n                  <portainer-tooltip position="bottom" message="The distinguished name of the element from which the LDAP server will search for users."></portainer-tooltip>\n                </label>\n                <div class="col-sm-8 col-md-4">\n                  <input type="text" class="form-control" id="ldap_basedn_{{$index}}" ng-model="config.BaseDN" placeholder="dc=ldap,dc=domain,dc=tld">\n                </div>\n\n                <label for="ldap_username_att_{{$index}}" class="col-sm-4 col-md-3 col-lg-2 margin-sm-top control-label text-left">\n                  Username attribute\n                  <portainer-tooltip position="bottom" message="LDAP attribute which denotes the username."></portainer-tooltip>\n                </label>\n                <div class="col-sm-8 col-md-3 col-lg-4 margin-sm-top">\n                  <input type="text" class="form-control" id="ldap_username_att_{{$index}}" ng-model="config.UserNameAttribute" placeholder="uid">\n                </div>\n              </div>\n              <div class="form-group">\n                <label for="ldap_filter_{{$index}}" class="col-sm-4 col-md-2 control-label text-left">\n                  Filter\n                  <portainer-tooltip position="bottom" message="The LDAP search filter used to select user elements, optional."></portainer-tooltip>\n                </label>\n                <div class="col-sm-7 col-md-9">\n                  <input type="text" class="form-control" id="ldap_filter_{{$index}}" ng-model="config.Filter" placeholder="(objectClass=account)">\n                </div>\n                <div class="col-sm-1" ng-if="$index > 0">\n                  <button class="btn btn-sm btn-danger" type="button" ng-click="removeSearchConfiguration($index)">\n                    <i class="fa fa-trash" aria-hidden="true"></i>\n                  </button>\n                </div>\n              </div>\n\n              <div class="form-group">\n                <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addSearchConfiguration()">\n                  <i class="fa fa-plus-circle" aria-hidden="true"></i> add search configuration\n                </span>\n              </div>\n\n            </div>\n            \x3c!-- !search-settings --\x3e\n          </div>\n\n          \x3c!-- actions --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-click="saveSettings()">Save</button>\n              <i id="updateSettingsSpinner" class="fa fa-cog fa-spin" style="margin-left: 5px; display: none;"></i>\n              \x3c!-- <span class="text-danger" ng-if="state.formValidationError" style="margin-left: 5px;">{{ state.formValidationError }}</span> --\x3e\n            </div>\n          </div>\n          \x3c!-- !actions --\x3e\n\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),angular.module("app/components/sidebar/sidebar.html",[]).run(["$templateCache",function(a){a.put("app/components/sidebar/sidebar.html",'\x3c!-- Sidebar --\x3e\n<div id="sidebar-wrapper">\n  <ul class="sidebar">\n    <li class="sidebar-main">\n      <a ng-click="toggleSidebar()" class="interactive">\n        <img ng-if="logo" ng-src="{{ logo }}" class="img-responsive logo">\n        <img ng-if="!logo" src="images/logo.png" class="img-responsive logo" alt="Portainer">\n        <span class="menu-icon glyphicon glyphicon-transfer"></span>\n      </a>\n    </li>\n    <li class="sidebar-title">\n      <span>Active endpoint</span>\n    </li>\n    <li class="sidebar-title">\n      <select class="select-endpoint form-control" ng-options="endpoint.Name for endpoint in endpoints" ng-model="activeEndpoint" ng-change="switchEndpoint(activeEndpoint)">\n      </select>\n    </li>\n    <li class="sidebar-title"><span>Endpoint actions</span></li>\n    <li class="sidebar-list">\n      <a ui-sref="dashboard" ui-sref-active="active">Dashboard <span class="menu-icon fa fa-tachometer"></span></a>\n    </li>\n    <li class="sidebar-list">\n      <a ui-sref="templates" ui-sref-active="active">App Templates <span class="menu-icon fa fa-rocket"></span></a>\n      <div class="sidebar-sublist" ng-if="toggle && displayExternalContributors && ($state.current.name === \'templates\' || $state.current.name === \'templates_linuxserver\')">\n        <a ui-sref="templates_linuxserver" ui-sref-active="active">LinuxServer.io</a>\n      </div>\n    </li>\n    <li class="sidebar-list" ng-if="applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\' && applicationState.endpoint.mode.role === \'MANAGER\'">\n      <a ui-sref="services" ui-sref-active="active">Services <span class="menu-icon fa fa-list-alt"></span></a>\n    </li>\n    <li class="sidebar-list">\n      <a ui-sref="containers" ui-sref-active="active">Containers <span class="menu-icon fa fa-server"></span></a>\n    </li>\n    <li class="sidebar-list">\n      <a ui-sref="images" ui-sref-active="active">Images <span class="menu-icon fa fa-clone"></span></a>\n    </li>\n    <li class="sidebar-list">\n      <a ui-sref="networks" ui-sref-active="active">Networks <span class="menu-icon fa fa-sitemap"></span></a>\n    </li>\n    <li class="sidebar-list">\n      <a ui-sref="volumes" ui-sref-active="active">Volumes <span class="menu-icon fa fa-cubes"></span></a>\n    </li>\n    <li class="sidebar-list" ng-if="applicationState.endpoint.apiVersion >= 1.25 && applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\' && applicationState.endpoint.mode.role === \'MANAGER\'">\n      <a ui-sref="secrets" ui-sref-active="active">Secrets <span class="menu-icon fa fa-user-secret"></span></a>\n    </li>\n    <li class="sidebar-list" ng-if="applicationState.endpoint.mode.provider === \'DOCKER_STANDALONE\' || applicationState.endpoint.mode.provider === \'VMWARE_VIC\'">\n      <a ui-sref="events" ui-sref-active="active">Events <span class="menu-icon fa fa-history"></span></a>\n    </li>\n    <li class="sidebar-list" ng-if="applicationState.endpoint.mode.provider === \'DOCKER_SWARM\' || (applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\' && applicationState.endpoint.mode.role === \'MANAGER\')">\n      <a ui-sref="swarm" ui-sref-active="active">Swarm <span class="menu-icon fa fa-object-group"></span></a>\n    </li>\n    <li class="sidebar-list" ng-if="applicationState.endpoint.mode.provider === \'DOCKER_STANDALONE\' || applicationState.endpoint.mode.provider === \'VMWARE_VIC\'">\n      <a ui-sref="docker" ui-sref-active="active">Docker <span class="menu-icon fa fa-th"></span></a>\n    </li>\n    <li class="sidebar-title" ng-if="!applicationState.application.authentication || isAdmin || isTeamLeader">\n      <span>Portainer settings</span>\n    </li>\n    <li class="sidebar-list" ng-if="applicationState.application.authentication && (isAdmin || isTeamLeader)">\n      <a ui-sref="users" ui-sref-active="active">User management <span class="menu-icon fa fa-users"></span></a>\n      <div class="sidebar-sublist" ng-if="toggle && ($state.current.name === \'users\' || $state.current.name === \'user\' || $state.current.name === \'teams\' || $state.current.name === \'team\')">\n        <a ui-sref="teams" ui-sref-active="active">Teams</a>\n      </div>\n    </li>\n    <li class="sidebar-list" ng-if="!applicationState.application.authentication || isAdmin">\n      <a ui-sref="endpoints" ui-sref-active="active">Endpoints <span class="menu-icon fa fa-plug"></span></a>\n    </li>\n    <li class="sidebar-list" ng-if="!applicationState.application.authentication || isAdmin">\n      <a ui-sref="registries" ui-sref-active="active">Registries <span class="menu-icon fa fa-database"></span></a>\n    </li>\n    <li class="sidebar-list" ng-if="!applicationState.application.authentication || isAdmin">\n      <a ui-sref="settings" ui-sref-active="active">Settings <span class="menu-icon fa fa-cogs"></span></a>\n      <div class="sidebar-sublist" ng-if="toggle && ($state.current.name === \'settings\' || $state.current.name === \'settings_authentication\') && applicationState.application.authentication && isAdmin">\n        <a ui-sref="settings_authentication" ui-sref-active="active">Authentication</a>\n      </div>\n    </li>\n  </ul>\n  <div class="sidebar-footer">\n    <div class="col-xs-12">\n      <a href="https://github.com/portainer/portainer" target="_blank">\n        <i class="fa fa-github" aria-hidden="true"></i>\n        Portainer {{ uiVersion }}\n      </a>\n    </div>\n  </div>\n</div>\n\x3c!-- End Sidebar --\x3e\n')}]),angular.module("app/components/stats/stats.html",[]).run(["$templateCache",function(a){a.put("app/components/stats/stats.html",'<rd-header>\n  <rd-header-title title="Container stats"></rd-header-title>\n  <rd-header-content>\n    <a ui-sref="containers">Containers</a> &gt; <a ui-sref="container({id: container.Id})">{{ container.Name|trimcontainername }}</a> &gt; Stats\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-body>\n        <div class="widget-icon grey pull-left">\n          <i class="fa fa-server"></i>\n        </div>\n        <div class="title">{{ container.Name|trimcontainername }}</div>\n        <div class="comment">\n          Name\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-lg-6">\n    <rd-widget>\n      <rd-widget-header icon="fa-area-chart" title="CPU usage"></rd-widget-header>\n      <rd-widget-body>\n        <canvas id="cpu-stats-chart" width="770" height="230"></canvas>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n  <div class="col-lg-6">\n    <rd-widget>\n      <rd-widget-header icon="fa-area-chart" title="Memory usage"></rd-widget-header>\n      <rd-widget-body>\n        <canvas id="memory-stats-chart" width="770" height="230"></canvas>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-lg-6">\n    <rd-widget>\n      <rd-widget-header icon="fa-area-chart" title="Network usage"></rd-widget-header>\n      <rd-widget-body>\n        <canvas id="network-stats-chart" width="770" height="230"></canvas>\n        <div class="comment">\n          <div id="network-legend" style="margin-bottom: 20px;"></div>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n  <div class="col-lg-6" ng-if="applicationState.endpoint.mode.provider !== \'VMWARE_VIC\'">\n    <rd-widget>\n      <rd-widget-header icon="fa-tasks" title="Processes">\n        <div class="pull-right">\n          Items per page:\n          <select ng-model="state.pagination_count" ng-change="changePaginationCount()">\n            <option value="0">All</option>\n            <option value="10">10</option>\n            <option value="25">25</option>\n            <option value="50">50</option>\n            <option value="100">100</option>\n          </select>\n        </div>\n      </rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table table-striped">\n          <thead>\n            <tr>\n              <th ng-repeat="title in containerTop.Titles">\n                <a ui-sref="stats({id: container.Id})" ng-click="order(title)">\n                  {{title}}\n                  <span ng-show="sortType == title && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                  <span ng-show="sortType == title && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr dir-paginate="processInfos in state.filteredProcesses = (containerTop.Processes | orderBy:sortType:sortReverse |  itemsPerPage: state.pagination_count)">\n              <td ng-repeat="processInfo in processInfos track by $index">{{processInfo}}</td>\n            </tr>\n          </tbody>\n        </table>\n        <div ng-if="containerTop.Processes" class="pagination-controls">\n          <dir-pagination-controls></dir-pagination-controls>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),angular.module("app/components/swarm/swarm.html",[]).run(["$templateCache",function(a){
a.put("app/components/swarm/swarm.html",'<rd-header>\n  <rd-header-title title="Cluster overview">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="swarm" ui-sref-opts="{reload: true}">\n      <i class="fa fa-refresh" aria-hidden="true"></i>\n    </a>\n    <i id="loadingViewSpinner" class="fa fa-cog fa-spin" style="margin-left: 5px;"></i>\n  </rd-header-title>\n  <rd-header-content>Swarm</rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-object-group" title="Cluster status"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>Nodes</td>\n              <td ng-if="applicationState.endpoint.mode.provider === \'DOCKER_SWARM\'">{{ swarm.Nodes }}</td>\n              <td ng-if="applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\'">{{ info.Swarm.Nodes }}</td>\n            </tr>\n            <tr ng-if="applicationState.endpoint.mode.provider === \'DOCKER_SWARM\'">\n              <td>Images</td>\n              <td>{{ info.Images }}</td>\n            </tr>\n            <tr ng-if="applicationState.endpoint.mode.provider === \'DOCKER_SWARM\'">\n              <td>Swarm version</td>\n              <td>{{ docker.Version|swarmversion }}</td>\n            </tr>\n            <tr>\n              <td>Docker API version</td>\n              <td>{{ docker.ApiVersion }}</td>\n            </tr>\n            <tr ng-if="applicationState.endpoint.mode.provider === \'DOCKER_SWARM\'">\n              <td>Strategy</td>\n              <td>{{ swarm.Strategy }}</td>\n            </tr>\n            <tr>\n              <td>Total CPU</td>\n              <td ng-if="applicationState.endpoint.mode.provider === \'DOCKER_SWARM\'">{{ info.NCPU }}</td>\n              <td ng-if="applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\'">{{ totalCPU }}</td>\n            </tr>\n            <tr>\n              <td>Total memory</td>\n              <td ng-if="applicationState.endpoint.mode.provider === \'DOCKER_SWARM\'">{{ info.MemTotal|humansize: 2 }}</td>\n              <td ng-if="applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\'">{{ totalMemory|humansize: 2 }}</td>\n            </tr>\n            <tr ng-if="applicationState.endpoint.mode.provider === \'DOCKER_SWARM\'">\n              <td>Operating system</td>\n              <td>{{ info.OperatingSystem }}</td>\n            </tr>\n            <tr ng-if="applicationState.endpoint.mode.provider === \'DOCKER_SWARM\'">\n              <td>Kernel version</td>\n              <td>{{ info.KernelVersion }}</td>\n            </tr>\n            <tr ng-if="applicationState.endpoint.mode.provider === \'DOCKER_SWARM\'">\n              <td>Go version</td>\n              <td>{{ docker.GoVersion }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12" ng-if="applicationState.endpoint.mode.provider === \'DOCKER_SWARM\'">\n    <rd-widget>\n      <rd-widget-header icon="fa-hdd-o" title="Node status">\n        <div class="pull-right">\n          Items per page:\n          <select ng-model="state.pagination_count" ng-change="changePaginationCount()">\n            <option value="0">All</option>\n            <option value="10">10</option>\n            <option value="25">25</option>\n            <option value="50">50</option>\n            <option value="100">100</option>\n          </select>\n        </div>\n      </rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table table-striped">\n          <thead>\n            <tr>\n              <th>\n                <a ui-sref="swarm" ng-click="order(\'name\')">\n                  Name\n                  <span ng-show="sortType == \'name\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                  <span ng-show="sortType == \'name\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                </a>\n              </th>\n              <th>\n                <a ui-sref="swarm" ng-click="order(\'cpu\')">\n                  CPU\n                  <span ng-show="sortType == \'cpu\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                  <span ng-show="sortType == \'cpu\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                </a>\n              </th>\n              <th>\n                <a ui-sref="swarm" ng-click="order(\'memory\')">\n                  Memory\n                  <span ng-show="sortType == \'memory\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                  <span ng-show="sortType == \'memory\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                </a>\n              </th>\n              <th>\n                <a ui-sref="swarm" ng-click="order(\'ip\')">\n                  IP\n                  <span ng-show="sortType == \'ip\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                  <span ng-show="sortType == \'ip\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                </a>\n              </th>\n              <th>\n                <a ui-sref="swarm" ng-click="order(\'version\')">\n                  Engine\n                  <span ng-show="sortType == \'version\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                  <span ng-show="sortType == \'version\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                </a>\n              </th>\n              <th>\n                <a ui-sref="swarm" ng-click="order(\'status\')">\n                  Status\n                  <span ng-show="sortType == \'status\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                  <span ng-show="sortType == \'status\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr dir-paginate="node in (state.filteredNodes = (swarm.Status | filter:state.filter | orderBy:sortType:sortReverse | itemsPerPage: state.pagination_count))">\n              <td>{{ node.name }}</td>\n              <td>{{ node.cpu }}</td>\n              <td>{{ node.memory }}</td>\n              <td>{{ node.ip }}</td>\n              <td>{{ node.version }}</td>\n              <td><span class="label label-{{ node.status|nodestatusbadge }}">{{ node.status }}</span></td>\n            </tr>\n          </tbody>\n        </table>\n        <div class="pagination-controls">\n          <dir-pagination-controls></dir-pagination-controls>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n  <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12" ng-if="applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\'">\n    <rd-widget>\n      <rd-widget-header icon="fa-hdd-o" title="Node status">\n        <div class="pull-right">\n          Items per page:\n          <select ng-model="state.pagination_count" ng-change="changePaginationCount()">\n            <option value="0">All</option>\n            <option value="10">10</option>\n            <option value="25">25</option>\n            <option value="50">50</option>\n            <option value="100">100</option>\n          </select>\n        </div>\n      </rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table table-striped">\n          <thead>\n            <tr>\n              <th>\n                <a ui-sref="swarm" ng-click="order(\'Hostname\')">\n                  Name\n                  <span ng-show="sortType == \'Hostname\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                  <span ng-show="sortType == \'Hostname\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                </a>\n              </th>\n              <th>\n                <a ui-sref="swarm" ng-click="order(\'Role\')">\n                  Role\n                  <span ng-show="sortType == \'Role\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                  <span ng-show="sortType == \'Role\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                </a>\n              </th>\n              <th>\n                <a ui-sref="swarm" ng-click="order(\'CPUs\')">\n                  CPU\n                  <span ng-show="sortType == \'CPUs\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                  <span ng-show="sortType == \'CPUs\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                </a>\n              </th>\n              <th>\n                <a ui-sref="swarm" ng-click="order(\'Memory\')">\n                  Memory\n                  <span ng-show="sortType == \'Memory\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                  <span ng-show="sortType == \'Memory\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                </a>\n              </th>\n              <th>\n                <a ui-sref="swarm" ng-click="order(\'EngineVersion\')">\n                  Engine\n                  <span ng-show="sortType == \'EngineVersion\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                  <span ng-show="sortType == \'EngineVersion\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                </a>\n              </th>\n              <th ng-if="applicationState.endpoint.apiVersion >= 1.25">\n                <a ui-sref="swarm" ng-click="order(\'Addr\')">\n                  IP Address\n                  <span ng-show="sortType == \'Addr\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                  <span ng-show="sortType == \'Addr\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                </a>\n              </th>\n              <th>\n                <a ui-sref="swarm" ng-click="order(\'Status\')">\n                  Status\n                  <span ng-show="sortType == \'Status\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                  <span ng-show="sortType == \'Status\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr dir-paginate="node in (state.filteredNodes = (nodes | filter:state.filter | orderBy:sortType:sortReverse | itemsPerPage: state.pagination_count))">\n              <td><a ui-sref="node({id: node.Id})">{{ node.Hostname }}</a></td>\n              <td>{{ node.Role }}</td>\n              <td>{{ node.CPUs / 1000000000 }}</td>\n              <td>{{ node.Memory|humansize }}</td>\n              <td>{{ node.EngineVersion }}</td>\n              <td ng-if="applicationState.endpoint.apiVersion >= 1.25">{{ node.Addr }}</td>\n              <td><span class="label label-{{ node.Status|nodestatusbadge }}">{{ node.Status }}</span></td>\n            </tr>\n          </tbody>\n        </table>\n        <div class="pagination-controls">\n          <dir-pagination-controls></dir-pagination-controls>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),angular.module("app/components/task/task.html",[]).run(["$templateCache",function(a){a.put("app/components/task/task.html",'<rd-header>\n  <rd-header-title title="Task details">\n    <i id="loadingViewSpinner" class="fa fa-cog fa-spin"></i>\n  </rd-header-title>\n  <rd-header-content ng-if="task && service">\n    <a ui-sref="services">Services</a> &gt; <a ui-sref="service({id: service.Id })">{{ service.Name }}</a> &gt; {{ task.Id }}\n  </rd-header-content>\n</rd-header>\n\n<div class="row" ng-if="task && service">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-tasks" title="Task status"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>ID</td>\n              <td>{{ task.Id }}</td>\n            </tr>\n            <tr>\n              <td>State</td>\n              <td><span class="label label-{{ task.Status.State|taskstatusbadge }}">{{ task.Status.State }}</span></td>\n            </tr>\n            <tr>\n              <td>State Message</td>\n              <td>{{ task.Status.Message }}</td>\n            </tr>\n            <tr ng-if="task.Status.Err">\n              <td>Error message</td>\n              <td><code>{{ task.Status.Err }}</code></td>\n            </tr>\n            <tr>\n              <td>Image</td>\n              <td>{{ task.Spec.ContainerSpec.Image | hideshasum }}</td>\n            </tr>\n            <tr ng-if="service.Mode !== \'global\'">\n              <td>Slot</td>\n              <td>{{ task.Slot }}</td>\n            </tr>\n            <tr>\n              <td>Created</td>\n              <td>{{ task.Created|getisodate }}</td>\n            </tr>\n            <tr ng-if="task.Status.ContainerStatus.ContainerID">\n              <td>Container ID</td>\n              <td>{{ task.Status.ContainerStatus.ContainerID }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),angular.module("app/components/team/team.html",[]).run(["$templateCache",function(a){a.put("app/components/team/team.html",'<rd-header>\n  <rd-header-title title="Team details">\n    <i id="loadingViewSpinner" class="fa fa-cog fa-spin"></i>\n  </rd-header-title>\n  <rd-header-content>\n    <a ui-sref="teams">Teams</a> &gt; <a ui-sref="team({id: team.Id})">{{ team.Name }}</a>\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-users" title="Team details"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>Name</td>\n              <td>\n                {{ team.Name }}\n                <button class="btn btn-xs btn-danger" ng-if="isAdmin" ng-click="deleteTeam()"><i class="fa fa-trash space-right" aria-hidden="true"></i>Delete this team</button>\n              </td>\n            </tr>\n            <tr>\n              <td>Leaders</td>\n              <td>{{ leaderCount }}</td>\n            </tr>\n            <tr>\n              <td>Total users in team</td>\n              <td>{{ teamMembers.length }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row" ng-if="team">\n  <div class="col-sm-6">\n    <rd-widget>\n      <rd-widget-header classes="col-sm-12 col-md-6 nopadding" icon="fa-users" title="Users">\n        <div class="pull-md-right pull-lg-right">\n          Items per page:\n          <select ng-model="state.pagination_count_users" ng-change="changePaginationCountUsers()">\n            <option value="0">All</option>\n            <option value="10">10</option>\n            <option value="25">25</option>\n            <option value="50">50</option>\n            <option value="100">100</option>\n          </select>\n        </div>\n      </rd-widget-header>\n      <rd-widget-taskbar classes="col-sm-12 nopadding">\n        <div class="col-sm-12 col-md-6 nopadding">\n          <button class="btn btn-primary btn-sm" ng-click="addAllUsers()" ng-if="isAdmin" ng-disabled="users.length ===  0 || filteredUsers.length === 0"><i class="fa fa-user-plus space-right" aria-hidden="true"></i>Add all users</button>\n        </div>\n        <div class="col-sm-12 col-md-6 nopadding">\n          <input type="text" id="filter" ng-model="state.filterUsers" placeholder="Filter..." class="form-control input-sm" />\n        </div>\n      </rd-widget-taskbar>\n      <rd-widget-body classes="no-padding">\n        <div class="table-responsive">\n          <table class="table table-hover">\n            <thead>\n              <tr>\n                <th>\n                  <a ng-click="orderUsers(\'Username\')">\n                    Name\n                    <span ng-show="sortTypeUsers == \'Username\' && !sortReverseUsers" class="glyphicon glyphicon-chevron-down"></span>\n                    <span ng-show="sortTypeUsers == \'Username\' && sortReverseUsers" class="glyphicon glyphicon-chevron-up"></span>\n                  </a>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr pagination-id="table1" dir-paginate="user in users | filter:state.filterUsers | orderBy:sortTypeUsers:sortReverseUsers | itemsPerPage: state.pagination_count_users">\n                <td>\n                  {{ user.Username }}\n                  <span style="margin-left: 5px;">\n                    <a class="btn-outline-secondary" ng-click="addUser(user)"><i class="fa fa-plus-circle space-right" aria-hidden="true"></i>Add</a>\n                  </span>\n                </td>\n              </tr>\n              <tr ng-if="!users">\n                <td colspan="2" class="text-center text-muted">Loading...</td>\n              </tr>\n              <tr ng-if="users.length === 0 || (users | filter:state.filterUsers).length === 0">\n                <td colspan="2" class="text-center text-muted">No users.</td>\n              </tr>\n            </tbody>\n          </table>\n          <div ng-if="users" class="pull-left pagination-controls">\n            <dir-pagination-controls pagination-id="table1"></dir-pagination-controls>\n          </div>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n  <div class="col-sm-6">\n    <rd-widget>\n      <rd-widget-header classes="col-sm-12 col-md-6 nopadding" icon="fa-users" title="Team members">\n        <div class="pull-md-right pull-lg-right">\n          Items per page:\n          <select ng-model="state.pagination_count_members" ng-change="changePaginationCountGroupMembers()">\n            <option value="0">All</option>\n            <option value="10">10</option>\n            <option value="25">25</option>\n            <option value="50">50</option>\n            <option value="100">100</option>\n          </select>\n        </div>\n      </rd-widget-header>\n      <rd-widget-taskbar classes="col-sm-12 nopadding">\n        <div class="col-sm-12 col-md-6 nopadding">\n          <button class="btn btn-primary btn-sm" ng-click="removeAllUsers()" ng-if="isAdmin" ng-disabled="teamMembers.length ===  0 || filteredGroupMembers.length === 0"><i class="fa fa-user-times space-right" aria-hidden="true"></i>Remove all users</button>\n        </div>\n        <div class="col-sm-12 col-md-6 nopadding">\n          <input type="text" id="filter" ng-model="state.filterGroupMembers" placeholder="Filter..." class="form-control input-sm" />\n        </div>\n      </rd-widget-taskbar>\n      <rd-widget-body classes="no-padding">\n        <div class="table-responsive">\n          <table class="table table-hover">\n            <thead>\n              <tr>\n                <th>\n                  <a ng-click="orderGroupMembers(\'Username\')">\n                    Name\n                    <span ng-show="sortTypeGroupMembers == \'Username\' && !sortReverseGroupMembers" class="glyphicon glyphicon-chevron-down"></span>\n                    <span ng-show="sortTypeGroupMembers == \'Username\' && sortReverseGroupMembers" class="glyphicon glyphicon-chevron-up"></span>\n                  </a>\n                </th>\n                <th>\n                  <a ng-click="orderGroupMembers(\'TeamRole\')">\n                    Team Role\n                    <span ng-show="sortTypeGroupMembers == \'TeamRole\' && !sortReverseGroupMembers" class="glyphicon glyphicon-chevron-down"></span>\n                    <span ng-show="sortTypeGroupMembers == \'TeamRole\' && sortReverseGroupMembers" class="glyphicon glyphicon-chevron-up"></span>\n                  </a>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr pagination-id="table2" dir-paginate="user in teamMembers | filter:state.filterGroupMembers | orderBy:sortTypeGroupMembers:sortReverseGroupMembers | itemsPerPage: state.pagination_count_groupMembers">\n                <td>\n                  {{ user.Username }}\n                  <span style="margin-left: 5px;" ng-if="isAdmin || user.TeamRole === \'Member\'">\n                    <a class="btn-outline-secondary" ng-click="removeUser(user)"><i class="fa fa-minus-circle space-right" aria-hidden="true"></i>Remove</a>\n                  </span>\n                </td>\n                <td>\n                  <i ng-if="user.TeamRole === \'Leader\'" class="fa fa-user-plus" aria-hidden="true" style="margin-right: 2px;"></i>\n                  <i ng-if="user.TeamRole === \'Member\'" class="fa fa-user" aria-hidden="true" style="margin-right: 2px;"></i>\n                  {{ user.TeamRole }}\n                  <span style="margin-left: 5px;" ng-if="isAdmin">\n                    <a class="btn-outline-secondary" style="margin-left: 5px;" ng-click="promoteToLeader(user)" ng-if="user.TeamRole === \'Member\'"><i class="fa fa-user-plus space-right" aria-hidden="true"></i>Leader</a>\n                    <a class="btn-outline-secondary" style="margin-left: 5px;" ng-click="demoteToMember(user)" ng-if="user.TeamRole === \'Leader\'"><i class="fa fa-user-times space-right" aria-hidden="true"></i>Member</a>\n                  </span>\n                </td>\n              </tr>\n              <tr ng-if="!teamMembers">\n                <td colspan="2" class="text-center text-muted">Loading...</td>\n              </tr>\n              <tr ng-if="teamMembers.length === 0 || (teamMembers | filter:state.filterGroupMembers).length === 0">\n                <td colspan="2" class="text-center text-muted">No team members.</td>\n              </tr>\n            </tbody>\n          </table>\n          <div ng-if="teamMembers" class="pull-left pagination-controls">\n            <dir-pagination-controls pagination-id="table2"></dir-pagination-controls>\n          </div>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]);angular.module("app/components/teams/teams.html",[]).run(["$templateCache",function(a){a.put("app/components/teams/teams.html",'<rd-header>\n  <rd-header-title title="Teams">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="teams" ui-sref-opts="{reload: true}">\n      <i class="fa fa-refresh" aria-hidden="true"></i>\n    </a>\n    <i id="loadingViewSpinner" class="fa fa-cog fa-spin" style="margin-left: 5px;"></i>\n  </rd-header-title>\n  <rd-header-content>Teams management</rd-header-content>\n</rd-header>\n\n<div class="row" ng-if="isAdmin">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-plus" title="Add a new team">\n      </rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="teamname" class="col-sm-1 control-label text-left">Name</label>\n            <div class="col-sm-9">\n              <div class="input-group">\n                <input type="text" class="form-control" id="teamname" ng-model="formValues.Name" ng-change="checkNameValidity()" placeholder="e.g. development">\n                <span class="input-group-addon"><i ng-class="{true: \'fa fa-check green-icon\', false: \'fa fa-times red-icon\'}[state.validName]" aria-hidden="true"></i></span>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          \x3c!-- team-leaders --\x3e\n          <div class="form-group" ng-if="users.length > 0">\n            <div class="col-sm-12" >\n              <label class="control-label text-left">\n                Select team leader(s)\n                <portainer-tooltip position="bottom" message="You can assign one or more leaders to this team. Team leaders can manage their teams users and resources."></portainer-tooltip>\n              </label>\n              <span isteven-multi-select\n               ng-if="users.length > 0"\n               input-model="users"\n               output-model="formValues.Leaders"\n               button-label="Username"\n               item-label="Username"\n               tick-property="ticked"\n               helper-elements="filter"\n               search-property="Username"\n               translation="{nothingSelected: \'Select one or more team leaders\', search: \'Search...\'}"\n               style="margin-left: 20px;">\n              </span>\n            </div>\n          </div>\n          \x3c!-- !team-leaders --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-disabled="!state.validName || formValues.Name === \'\'" ng-click="addTeam()"><i class="fa fa-plus" aria-hidden="true"></i> Add team</button>\n              <i id="createTeamSpinner" class="fa fa-cog fa-spin" style="margin-left: 5px; display: none;"></i>\n              <span class="text-danger" ng-if="state.teamCreationError" style="margin: 5px;">\n                <i class="fa fa-exclamation-circle" aria-hidden="true"></i> {{ state.teamCreationError }}\n              </span>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-users" title="Teams">\n        <div class="pull-right">\n          Items per page:\n          <select ng-model="state.pagination_count" ng-change="changePaginationCount()">\n            <option value="0">All</option>\n            <option value="10">10</option>\n            <option value="25">25</option>\n            <option value="50">50</option>\n            <option value="100">100</option>\n          </select>\n        </div>\n      </rd-widget-header>\n      <rd-widget-taskbar classes="col-lg-12">\n        <div class="pull-left" ng-if="isAdmin">\n          <button type="button" class="btn btn-danger" ng-click="removeAction()" ng-disabled="!state.selectedItemCount"><i class="fa fa-trash space-right" aria-hidden="true"></i>Remove</button>\n        </div>\n        <div class="pull-right">\n          <input type="text" id="filter" ng-model="state.filter" placeholder="Filter..." class="form-control input-sm" />\n        </div>\n      </rd-widget-taskbar>\n      <rd-widget-body classes="no-padding">\n        <div class="table-responsive">\n          <table class="table table-hover">\n            <thead>\n              <tr>\n                <th ng-if="isAdmin">\n                  <input type="checkbox" ng-model="allSelected" ng-change="selectItems(allSelected)" />\n                </th>\n                <th>\n                  <a ng-click="order(\'Name\')">\n                    Name\n                    <span ng-show="sortType == \'Name\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                    <span ng-show="sortType == \'Name\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                  </a>\n                </th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr dir-paginate="team in (state.filteredTeams = (teams | filter:state.filter | orderBy:sortType:sortReverse | itemsPerPage: state.pagination_count))">\n                <td ng-if="isAdmin"><input type="checkbox" ng-model="team.Checked" ng-change="selectItem(team)" /></td>\n                <td>{{ team.Name }}</td>\n                <td>\n                  <a ui-sref="team({id: team.Id})"><i class="fa fa-pencil-square-o" aria-hidden="true"></i> Edit</a>\n                </td>\n              </tr>\n              <tr ng-if="!teams">\n                <td colspan="3" class="text-center text-muted">Loading...</td>\n              </tr>\n              <tr ng-if="teams.length == 0">\n                <td colspan="3" class="text-center text-muted">No teams available.</td>\n              </tr>\n            </tbody>\n          </table>\n          <div ng-if="teams" class="pull-left pagination-controls">\n            <dir-pagination-controls></dir-pagination-controls>\n          </div>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),angular.module("app/components/templates/templates.html",[]).run(["$templateCache",function(a){
a.put("app/components/templates/templates.html",'<rd-header id="view-top">\n  <rd-header-title title="Application templates list">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="templates" ui-sref-opts="{reload: true}">\n      <i class="fa fa-refresh" aria-hidden="true"></i>\n    </a>\n    <i id="loadTemplatesSpinner" class="fa fa-cog fa-spin" style="margin-left: 5px;"></i>\n  </rd-header-title>\n  <rd-header-content>Templates</rd-header-content>\n</rd-header>\n\n<div class="row" style="height: 90%">\n\n  <div class="col-sm-12" ng-if="state.selectedTemplate">\n    <rd-widget>\n      <rd-widget-custom-header icon="state.selectedTemplate.Logo" title="state.selectedTemplate.Image">\n        <div class="pull-right">\n          <button type="button" class="btn btn-sm btn-primary" ng-click="unselectTemplate()">Hide</button>\n        </div>\n      </rd-widget-custom-header>\n      <rd-widget-body classes="padding">\n\n        <form class="form-horizontal">\n          \x3c!-- description --\x3e\n          <div ng-if="state.selectedTemplate.Note">\n            <div class="col-sm-12 form-section-title">\n              Information\n            </div>\n            <div class="form-group">\n              <div class="col-sm-12">\n                <div class="template-note" ng-if="state.selectedTemplate.Note" ng-bind-html="state.selectedTemplate.Note"></div>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !description --\x3e\n          <div class="col-sm-12 form-section-title">\n            Configuration\n          </div>\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="container_name" class="col-sm-2 control-label text-left">Name</label>\n            <div class="col-sm-10">\n              <input type="text" name="container_name" class="form-control" ng-model="formValues.name" placeholder="e.g. web (optional)">\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          \x3c!-- network-input --\x3e\n          <div class="form-group">\n            <label for="container_network" class="col-sm-2 control-label text-left">Network</label>\n            <div class="col-sm-10">\n              <select class="form-control" ng-options="net.Name for net in availableNetworks" ng-model="formValues.network">\n                <option disabled hidden value="">Select a network</option>\n              </select>\n            </div>\n          </div>\n          \x3c!-- !network-input --\x3e\n          \x3c!-- env --\x3e\n          <div ng-repeat="var in state.selectedTemplate.Env" ng-if="!var.set" class="form-group">\n            <label for="field_{{ $index }}" class="col-sm-2 control-label text-left">{{ var.label }}</label>\n            <div class="col-sm-10">\n              <select ng-if="applicationState.endpoint.mode.provider !== \'DOCKER_SWARM\' && var.type === \'container\'" ng-options="container|containername for container in runningContainers" class="form-control" ng-model="var.value">\n                <option selected disabled hidden value="">Select a container</option>\n              </select>\n              <select ng-if="applicationState.endpoint.mode.provider === \'DOCKER_SWARM\' && var.type === \'container\'" ng-options="container|swarmcontainername for container in runningContainers" class="form-control" ng-model="var.value">\n                <option selected disabled hidden value="">Select a container</option>\n              </select>\n              <input ng-if="!var.type || !var.type === \'container\'" type="text" class="form-control" ng-model="var.value" id="field_{{ $index }}">\n            </div>\n          </div>\n          \x3c!-- !env --\x3e\n          \x3c!-- access-control --\x3e\n          <por-access-control-form form-data="formValues.AccessControlData" ng-if="applicationState.application.authentication"></por-access-control-form>\n          \x3c!-- !access-control --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <a class="small interactive" ng-if="!state.showAdvancedOptions" ng-click="state.showAdvancedOptions = true;">\n                <i class="fa fa-plus space-right" aria-hidden="true"></i> Show advanced options\n              </a>\n              <a class="small interactive" ng-if="state.showAdvancedOptions" ng-click="state.showAdvancedOptions = false;">\n                <i class="fa fa-minus space-right" aria-hidden="true"></i> Hide advanced options\n              </a>\n            </div>\n          </div>\n          <div ng-if="state.showAdvancedOptions">\n            \x3c!-- port-mapping --\x3e\n            <div class="form-group" >\n              <div class="col-sm-12" style="margin-top: 5px;">\n                <label class="control-label text-left">Port mapping</label>\n                <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addPortBinding()">\n                  <i class="fa fa-plus-circle" aria-hidden="true"></i> map additional port\n                </span>\n              </div>\n              <div class="col-sm-12" style="margin-top: 10px" ng-if="state.selectedTemplate.Ports.length > 0">\n                <span class="small text-muted">Portainer will automatically assign a port if you leave the host port empty.</span>\n              </div>\n              \x3c!-- !port-mapping --\x3e\n              \x3c!-- port-mapping-input-list --\x3e\n              <div class="col-sm-12">\n                <div class="col-sm-12 form-inline" style="margin-top: 10px;">\n                  <div ng-repeat="portBinding in state.selectedTemplate.Ports" style="margin-top: 2px;">\n                    \x3c!-- host-port --\x3e\n                    <div class="input-group col-sm-4 input-group-sm">\n                      <span class="input-group-addon">host</span>\n                      <input type="text" class="form-control" ng-model="portBinding.hostPort" placeholder="e.g. 80 or 1.2.3.4:80 (optional)">\n                    </div>\n                    \x3c!-- !host-port --\x3e\n                    <span style="margin: 0 10px 0 10px;">\n                      <i class="fa fa-long-arrow-right" aria-hidden="true"></i>\n                    </span>\n                    \x3c!-- container-port --\x3e\n                    <div class="input-group col-sm-4 input-group-sm">\n                      <span class="input-group-addon">container</span>\n                      <input type="text" class="form-control" ng-model="portBinding.containerPort" placeholder="e.g. 80">\n                    </div>\n                    \x3c!-- !container-port --\x3e\n                    \x3c!-- protocol-actions --\x3e\n                    <div class="input-group col-sm-3 input-group-sm">\n                      <div class="btn-group btn-group-sm">\n                        <label class="btn btn-primary" ng-model="portBinding.protocol" uib-btn-radio="\'tcp\'">TCP</label>\n                        <label class="btn btn-primary" ng-model="portBinding.protocol" uib-btn-radio="\'udp\'">UDP</label>\n                      </div>\n                      <button class="btn btn-sm btn-danger" type="button" ng-click="removePortBinding($index)">\n                        <i class="fa fa-trash" aria-hidden="true"></i>\n                      </button>\n                    </div>\n                    \x3c!-- !protocol-actions --\x3e\n                  </div>\n                </div>\n              </div>\n            </div>\n            \x3c!-- !port-mapping-input-list --\x3e\n            \x3c!-- volume-mapping --\x3e\n            <div class="form-group" >\n              <div class="col-sm-12" style="margin-top: 5px;">\n                <label class="control-label text-left">Volume mapping</label>\n                <span class="label label-default interactive" style="margin-left: 10px;" ng-click="addVolume()">\n                  <i class="fa fa-plus-circle" aria-hidden="true"></i> map additional volume\n                </span>\n              </div>\n              <div class="col-sm-12" style="margin-top: 10px" ng-if="state.selectedTemplate.Volumes.length > 0">\n                <span class="small text-muted">Portainer will automatically create and map a local volume when using the <b>auto</b> option.</span>\n              </div>\n              <div ng-repeat="volume in state.selectedTemplate.Volumes">\n                <div class="col-sm-12" style="margin-top: 10px;">\n                  \x3c!-- volume-line1 --\x3e\n                  <div class="col-sm-12 form-inline">\n                    \x3c!-- container-path --\x3e\n                    <div class="input-group input-group-sm col-sm-6">\n                      <span class="input-group-addon">container</span>\n                      <input type="text" class="form-control" ng-model="volume.containerPath" placeholder="e.g. /path/in/container">\n                    </div>\n                    \x3c!-- !container-path --\x3e\n                    \x3c!-- volume-type --\x3e\n                    <div class="input-group col-sm-5" style="margin-left: 5px;">\n                      <div class="btn-group btn-group-sm">\n                        <label class="btn btn-primary" ng-model="volume.type" uib-btn-radio="\'auto\'" ng-click="volume.name = \'\'">Auto</label>\n                        <label class="btn btn-primary" ng-model="volume.type" uib-btn-radio="\'volume\'" ng-click="volume.name = \'\'">Volume</label>\n                        <label class="btn btn-primary" ng-model="volume.type" uib-btn-radio="\'bind\'" ng-click="volume.name = \'\'">Bind</label>\n                      </div>\n                      <button class="btn btn-sm btn-danger" type="button" ng-click="removeVolume($index)">\n                        <i class="fa fa-trash" aria-hidden="true"></i>\n                      </button>\n                    </div>\n                    \x3c!-- !volume-type --\x3e\n                  </div>\n                  \x3c!-- !volume-line1 --\x3e\n                  \x3c!-- volume-line2 --\x3e\n                  <div class="col-sm-12 form-inline" style="margin-top: 5px;" ng-if="volume.type !== \'auto\'">\n                    <i class="fa fa-long-arrow-right" aria-hidden="true"></i>\n                    \x3c!-- volume --\x3e\n                    <div class="input-group input-group-sm col-sm-6" ng-if="volume.type === \'volume\'">\n                      <span class="input-group-addon">volume</span>\n                      <select class="form-control" ng-model="volume.name">\n                        <option selected disabled hidden value="">Select a volume</option>\n                        <option ng-repeat="vol in availableVolumes" ng-value="vol.Name">{{ vol.Name|truncate:30}}</option>\n                      </select>\n                    </div>\n                    \x3c!-- !volume --\x3e\n                    \x3c!-- bind --\x3e\n                    <div class="input-group input-group-sm col-sm-6" ng-if="volume.type === \'bind\'">\n                      <span class="input-group-addon">host</span>\n                      <input type="text" class="form-control" ng-model="volume.name" placeholder="e.g. /path/on/host">\n                    </div>\n                    \x3c!-- !bind --\x3e\n                    \x3c!-- read-only --\x3e\n                    <div class="input-group input-group-sm col-sm-5" style="margin-left: 5px;">\n                      <div class="btn-group btn-group-sm">\n                        <label class="btn btn-primary" ng-model="volume.readOnly" uib-btn-radio="false">Writable</label>\n                        <label class="btn btn-primary" ng-model="volume.readOnly" uib-btn-radio="true">Read-only</label>\n                      </div>\n                    </div>\n                    \x3c!-- !read-only --\x3e\n                  </div>\n                  \x3c!-- !volume-line2 --\x3e\n                </div>\n              </div>\n            </div>\n            \x3c!-- !volume-mapping --\x3e\n          </div>\n          \x3c!-- !advanced-options --\x3e\n          \x3c!-- actions --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-disabled="!formValues.network" ng-click="createTemplate()">Create</button>\n              <i id="createContainerSpinner" class="fa fa-cog fa-spin" style="margin-left: 5px; display: none;"></i>\n              <span class="small text-muted" style="margin-left: 10px" ng-if="globalNetworkCount === 0 && applicationState.endpoint.mode.provider === \'DOCKER_SWARM\' && !state.formValidationError">\n                When using Swarm, we recommend deploying containers in a shared network. Looks like you don\'t have any shared network, head over the <a ui-sref="networks">networks view</a> to create one.\n              </span>\n              <span ng-if="applicationState.endpoint.mode.provider === \'DOCKER_SWARM_MODE\' && !state.formValidationError" style="margin-left: 10px">\n                <i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\n                <span class="small text-muted" style="margin-left: 5px;">App templates cannot be deployed as Swarm Mode services for the moment. You can still use them to quickly deploy containers on the Docker host.</span>\n              </span>\n              <span class="text-danger" ng-if="state.formValidationError" style="margin-left: 5px;">{{ state.formValidationError }}</span>\n            </div>\n          </div>\n          \x3c!-- !actions --\x3e\n        </form>\n\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n\n  <div class="col-sm-12" style="height: 100%">\n    <rd-template-widget>\n      <rd-widget-header icon="fa-rocket" title="Templates">\n        <div ng-if="availableCategories.length > 0" class="pull-right">\n          Category\n          <select ng-model="state.filters.Categories">\n            <option value="!">All</option>\n            <option ng-repeat="category in availableCategories" value="{{ category }}">{{ category }}</option>\n          </select>\n        </div>\n      </rd-widget-header>\n      <rd-widget-taskbar>\n        <div>\n          \x3c!-- Platform --\x3e\n          <span class="btn-group btn-group-sm" style="margin-right: 15px;">\n            <label class="btn btn-primary" ng-model="state.filters.Platform" uib-btn-radio="\'!\'">\n              All\n            </label>\n            <label class="btn btn-primary" ng-model="state.filters.Platform" uib-btn-radio="\'windows\'">\n              <i class="fa fa-windows" aria-hidden="true"></i>\n              Windows\n            </label>\n            <label class="btn btn-primary" ng-model="state.filters.Platform" uib-btn-radio="\'linux\'">\n              <i class="fa fa-linux" aria-hidden="true"></i>\n              Linux\n            </label>\n          </span>\n        </div>\n      </rd-widget-taskbar>\n      <rd-widget-body classes="padding template-widget-body">\n        <div class="template-list">\n          \x3c!-- template --\x3e\n          <div ng-repeat="tpl in templates | filter:state.filters:true" class="template-container" id="template_{{ tpl.index }}" ng-click="selectTemplate(tpl.index, $index)">\n            <div class="template-main">\n              \x3c!-- template-image --\x3e\n              <span class="">\n                <img class="template-logo" ng-src="{{ tpl.Logo }}" />\n              </span>\n              \x3c!-- !template-image --\x3e\n              \x3c!-- template-details --\x3e\n              <span class="col-sm-12">\n                \x3c!-- template-line1 --\x3e\n                <div class="template-line">\n                  <span class="template-title">\n                    {{ tpl.Title }}\n                  </span>\n                  <span>\n                    <i class="fa fa-windows" aria-hidden="true" ng-if="tpl.Platform === \'windows\'"></i>\n                    <i class="fa fa-linux" aria-hidden="true" ng-if="tpl.Platform === \'linux\'"></i>\n                    \x3c!-- Arch / Platform --\x3e\n                  </span>\n                </div>\n                \x3c!-- !template-line1 --\x3e\n                \x3c!-- template-line2 --\x3e\n                <div class="template-line">\n                  <span class="template-description">\n                    {{ tpl.Description }}\n                  </span>\n                  <span class="small text-muted" ng-if="tpl.Categories.length > 0">\n                    {{ tpl.Categories.join(\', \') }}\n                  </span>\n                </div>\n                \x3c!-- !template-line2 --\x3e\n              </span>\n              \x3c!-- !template-details --\x3e\n            </div>\n            \x3c!-- !template --\x3e\n          </div>\n          <div ng-if="!templates" class="text-center text-muted">\n            Loading...\n          </div>\n          <div ng-if="(templates | filter:state.filters:true).length == 0" class="text-center text-muted">\n            No templates available.\n          </div>\n        </div>\n      </rd-widget-body>\n    </rd-template-widget>\n  </div>\n\n</div>\n')}]),angular.module("app/components/user/user.html",[]).run(["$templateCache",function(a){a.put("app/components/user/user.html",'<rd-header>\n  <rd-header-title title="User details">\n    <i id="loadingViewSpinner" class="fa fa-cog fa-spin"></i>\n  </rd-header-title>\n  <rd-header-content>\n    <a ui-sref="users">Users</a> &gt; <a ui-sref="user({id: user.Id})">{{ user.Username }}</a>\n  </rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-user" title="User details"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td><label>Name</label></td>\n              <td>\n                {{ user.Username }}\n                <button class="btn btn-xs btn-danger" ng-click="deleteUser()"><i class="fa fa-trash space-right" aria-hidden="true"></i>Delete this user</button>\n              </td>\n            </tr>\n            <tr>\n              <td colspan="2">\n                <label for="permissions" class="control-label text-left">\n                  Administrator\n                  <portainer-tooltip position="bottom" message="Administrators have access to Portainer settings management as well as full control over all defined endpoints and their resources."></portainer-tooltip>\n                </label>\n                <label class="switch" style="margin-left: 20px;">\n                  <input type="checkbox" ng-model="formValues.Administrator" ng-change="updatePermissions()"><i></i>\n                </label>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row" ng-if="AuthenticationMethod === 1">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-lock" title="Change user password"></rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal" style="margin-top: 15px;">\n          \x3c!-- new-password-input --\x3e\n          <div class="form-group">\n            <label for="new_password" class="col-sm-2 control-label text-left">New password</label>\n            <div class="col-sm-8">\n              <div class="input-group">\n                <span class="input-group-addon"><i class="fa fa-lock" aria-hidden="true"></i></span>\n                <input type="password" class="form-control" ng-model="formValues.newPassword" id="new_password">\n              </div>\n            </div>\n          </div>\n          \x3c!-- !new-password-input --\x3e\n          \x3c!-- confirm-password-input --\x3e\n          <div class="form-group">\n            <label for="confirm_password" class="col-sm-2 control-label text-left">Confirm password</label>\n            <div class="col-sm-8">\n              <div class="input-group">\n                <span class="input-group-addon"><i class="fa fa-lock" aria-hidden="true"></i></span>\n                <input type="password" class="form-control" ng-model="formValues.confirmPassword" id="confirm_password">\n                <span class="input-group-addon"><i ng-class="{true: \'fa fa-check green-icon\', false: \'fa fa-times red-icon\'}[formValues.newPassword !== \'\' && formValues.newPassword === formValues.confirmPassword]" aria-hidden="true"></i></span>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !confirm-password-input --\x3e\n          <div class="form-group">\n            <div class="col-sm-2">\n              <button type="submit" class="btn btn-primary btn-sm" ng-disabled="formValues.newPassword === \'\' || formValues.newPassword !== formValues.confirmPassword" ng-click="updatePassword()">Update password</button>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),angular.module("app/components/userSettings/userSettings.html",[]).run(["$templateCache",function(a){a.put("app/components/userSettings/userSettings.html",'<rd-header>\n  <rd-header-title title="User settings">\n    <i id="loadingViewSpinner" class="fa fa-cog fa-spin" style="margin-left: 5px;"></i>\n  </rd-header-title>\n  <rd-header-content>User settings</rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-lock" title="Change user password"></rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal" style="margin-top: 15px;">\n          \x3c!-- current-password-input --\x3e\n          <div class="form-group">\n            <label for="current_password" class="col-sm-2 control-label text-left">Current password</label>\n            <div class="col-sm-8">\n              <div class="input-group">\n                <span class="input-group-addon"><i class="fa fa-lock" aria-hidden="true"></i></span>\n                <input type="password" class="form-control" ng-model="formValues.currentPassword" id="current_password">\n              </div>\n            </div>\n          </div>\n          \x3c!-- !current-password-input --\x3e\n          <div class="form-group" ng-if="invalidPassword">\n            <div class="col-sm-12">\n              <i class="fa fa-times red-icon" aria-hidden="true"></i>\n              <span class="small text-muted">Current password is not valid</span>\n            </div>\n          </div>\n          \x3c!-- new-password-input --\x3e\n          <div class="form-group">\n            <label for="new_password" class="col-sm-2 control-label text-left">New password</label>\n            <div class="col-sm-8">\n              <div class="input-group">\n                <span class="input-group-addon"><i class="fa fa-lock" aria-hidden="true"></i></span>\n                <input type="password" class="form-control" ng-model="formValues.newPassword" id="new_password">\n              </div>\n            </div>\n          </div>\n          \x3c!-- !new-password-input --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <i ng-class="{true: \'fa fa-check green-icon\', false: \'fa fa-times red-icon\'}[formValues.newPassword.length >= 8]" aria-hidden="true"></i>\n              <span class="small text-muted">Your new password must be at least 8 characters long</span>\n            </div>\n          </div>\n          \x3c!-- confirm-password-input --\x3e\n          <div class="form-group">\n            <label for="confirm_password" class="col-sm-2 control-label text-left">Confirm password</label>\n            <div class="col-sm-8">\n              <div class="input-group">\n                <span class="input-group-addon"><i class="fa fa-lock" aria-hidden="true"></i></span>\n                <input type="password" class="form-control" ng-model="formValues.confirmPassword" id="confirm_password">\n                <span class="input-group-addon"><i ng-class="{true: \'fa fa-check green-icon\', false: \'fa fa-times red-icon\'}[formValues.newPassword !== \'\' && formValues.newPassword === formValues.confirmPassword]" aria-hidden="true"></i></span>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !confirm-password-input --\x3e\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="submit" class="btn btn-primary btn-sm" ng-disabled="AuthenticationMethod !== 1 || !formValues.currentPassword || formValues.newPassword.length < 8 || formValues.newPassword !== formValues.confirmPassword" ng-click="updatePassword()">Update password</button>\n              <span class="text-muted small" style="margin-left: 5px;" ng-if="AuthenticationMethod === 2">\n                <i class="fa fa-exclamation-triangle" aria-hidden="true"></i>\n                You cannot change your password when using LDAP authentication.\n              </span>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),angular.module("app/components/users/users.html",[]).run(["$templateCache",function(a){
a.put("app/components/users/users.html",'<rd-header>\n  <rd-header-title title="Users">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="users" ui-sref-opts="{reload: true}">\n      <i class="fa fa-refresh" aria-hidden="true"></i>\n    </a>\n    <i id="loadUsersSpinner" class="fa fa-cog fa-spin" style="margin-left: 5px;"></i>\n  </rd-header-title>\n  <rd-header-content>User management</rd-header-content>\n</rd-header>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-plus" title="Add a new user">\n      </rd-widget-header>\n      <rd-widget-body>\n        <form class="form-horizontal">\n          \x3c!-- name-input --\x3e\n          <div class="form-group">\n            <label for="username" class="col-sm-3 col-lg-2 control-label text-left">\n              Username\n              <portainer-tooltip ng-if="AuthenticationMethod === 2" position="bottom" message="Username must exactly match username defined in external LDAP source."></portainer-tooltip>\n            </label>\n            <div class="col-sm-8">\n              <div class="input-group">\n                <input type="text" class="form-control" id="username" ng-model="formValues.Username" ng-change="checkUsernameValidity()" placeholder="e.g. jdoe">\n                <span class="input-group-addon"><i ng-class="{true: \'fa fa-check green-icon\', false: \'fa fa-times red-icon\'}[state.validUsername]" aria-hidden="true"></i></span>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !name-input --\x3e\n          \x3c!-- new-password-input --\x3e\n          <div class="form-group" ng-if="AuthenticationMethod === 1">\n            <label for="password" class="col-sm-3 col-lg-2 control-label text-left">Password</label>\n            <div class="col-sm-8">\n              <div class="input-group">\n                <span class="input-group-addon"><i class="fa fa-lock" aria-hidden="true"></i></span>\n                <input type="password" class="form-control" ng-model="formValues.Password" id="password">\n              </div>\n            </div>\n          </div>\n          \x3c!-- !new-password-input --\x3e\n          \x3c!-- confirm-password-input --\x3e\n          <div class="form-group" ng-if="AuthenticationMethod === 1">\n            <label for="confirm_password" class="col-sm-3 col-lg-2 control-label text-left">Confirm password</label>\n            <div class="col-sm-8">\n              <div class="input-group">\n                <span class="input-group-addon"><i class="fa fa-lock" aria-hidden="true"></i></span>\n                <input type="password" class="form-control" ng-model="formValues.ConfirmPassword" id="confirm_password">\n                <span class="input-group-addon"><i ng-class="{true: \'fa fa-check green-icon\', false: \'fa fa-times red-icon\'}[formValues.Password !== \'\' && formValues.Password === formValues.ConfirmPassword]" aria-hidden="true"></i></span>\n              </div>\n            </div>\n          </div>\n          \x3c!-- !confirm-password-input --\x3e\n          \x3c!-- admin-checkbox --\x3e\n          <div class="form-group" ng-if="isAdmin">\n            <div class="col-sm-12">\n              <label for="permissions" class="control-label text-left">\n                Administrator\n                <portainer-tooltip position="bottom" message="Administrators have access to Portainer settings management as well as full control over all defined endpoints and their resources."></portainer-tooltip>\n              </label>\n              <label class="switch" style="margin-left: 20px;">\n                <input type="checkbox" ng-model="formValues.Administrator"><i></i>\n              </label>\n            </div>\n          </div>\n          \x3c!-- !admin-checkbox --\x3e\n          \x3c!-- teams --\x3e\n          <div class="form-group" ng-if="!formValues.Administrator">\n            <div class="col-sm-12">\n              <label class="control-label text-left">\n                Add to team(s)\n              </label>\n              <span class="small text-muted" style="margin-left: 20px;" ng-if="teams.length === 0">\n                You have not yet created any team. Head over the <a ui-sref="teams">teams view</a> to manage user teams.\n              </span>\n              <span isteven-multi-select\n               ng-if="teams.length > 0"\n               input-model="teams"\n               output-model="formValues.Teams"\n               button-label="Name"\n               item-label="Name"\n               tick-property="ticked"\n               helper-elements="filter"\n               search-property="Name"\n               translation="{nothingSelected: \'Select one or more teams\', search: \'Search...\'}"\n               style="margin-left: 20px;">\n               </span>\n            </div>\n          </div>\n          \x3c!-- !teams --\x3e\n          <div class="form-group" ng-if="isAdmin && !formValues.Administrator && formValues.Teams.length === 0">\n            <div class="col-sm-12">\n              <span class="small text-muted">\n                Note: non-administrator users with no team do not have access to any endpoint by default. Head over the <a ui-sref="endpoints">endpoints view</a> to manage their accesses.\n              </span>\n            </div>\n          </div>\n          <div class="form-group">\n            <div class="col-sm-12">\n              <button type="button" class="btn btn-primary btn-sm" ng-disabled="!state.validUsername || formValues.Username === \'\' || (AuthenticationMethod === 1 && formValues.Password === \'\') || (AuthenticationMethod === 1 && formValues.Password !== formValues.ConfirmPassword)" ng-click="addUser()"><i class="fa fa-user-plus" aria-hidden="true"></i> Add user</button>\n              <i id="createUserSpinner" class="fa fa-cog fa-spin" style="margin-left: 5px; display: none;"></i>\n              <span class="text-danger" ng-if="state.userCreationError" style="margin: 5px;">\n                <i class="fa fa-exclamation-circle" aria-hidden="true"></i> {{ state.userCreationError }}\n              </span>\n            </div>\n          </div>\n        </form>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n<div class="row">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-user" title="Users">\n        <div class="pull-right">\n          Items per page:\n          <select ng-model="state.pagination_count" ng-change="changePaginationCount()">\n            <option value="0">All</option>\n            <option value="10">10</option>\n            <option value="25">25</option>\n            <option value="50">50</option>\n            <option value="100">100</option>\n          </select>\n        </div>\n      </rd-widget-header>\n      <rd-widget-taskbar classes="col-lg-12">\n        <div class="pull-left" ng-if="isAdmin">\n          <button type="button" class="btn btn-danger" ng-click="removeAction()" ng-disabled="!state.selectedItemCount"><i class="fa fa-trash space-right" aria-hidden="true"></i>Remove</button>\n        </div>\n        <div class="pull-right">\n          <input type="text" id="filter" ng-model="state.filter" placeholder="Filter..." class="form-control input-sm" />\n        </div>\n      </rd-widget-taskbar>\n      <rd-widget-body classes="no-padding">\n        <div class="table-responsive">\n          <table class="table table-hover">\n            <thead>\n              <tr>\n                <th ng-if="isAdmin">\n                  <input type="checkbox" ng-model="allSelected" ng-change="selectItems(allSelected)" />\n                </th>\n                <th>\n                  <a ng-click="order(\'Username\')">\n                    Name\n                    <span ng-show="sortType == \'Username\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                    <span ng-show="sortType == \'Username\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                  </a>\n                </th>\n                <th>\n                  <a ng-click="order(\'RoleName\')">\n                    Role\n                    <span ng-show="sortType == \'RoleName\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                    <span ng-show="sortType == \'RoleName\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                  </a>\n                </th>\n                <th>\n                  <a ng-click="order(\'AuthenticationMethod\')">\n                    Authentication\n                    <span ng-show="sortType == \'AuthenticationMethod\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                    <span ng-show="sortType == \'AuthenticationMethod\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                  </a>\n                </th>\n                <th ng-if="isAdmin"></th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr dir-paginate="user in (state.filteredUsers = (users | filter:state.filter | orderBy:sortType:sortReverse | itemsPerPage: state.pagination_count))">\n                <td ng-if="isAdmin"><input type="checkbox" ng-model="user.Checked" ng-change="selectItem(user)" /></td>\n                <td>{{ user.Username }}</td>\n                <td>\n                  <i ng-if="user.Role === 1" class="fa fa-user-circle-o" aria-hidden="true" style="margin-right: 2px;"></i>\n                  <i ng-if="user.Role !== 1 && !user.isTeamLeader" class="fa fa-user" aria-hidden="true" style="margin-right: 2px;"></i>\n                  <i ng-if="user.isTeamLeader" class="fa fa-user-plus" aria-hidden="true" style="margin-right: 2px;"></i>\n                  {{ user.RoleName }}\n                </td>\n                <td>\n                  <span ng-if="AuthenticationMethod === 1 || user.Id === 1">Internal</span>\n                  <span ng-if="AuthenticationMethod === 2 && user.Id !== 1">LDAP</span>\n                </td>\n                <td ng-if="isAdmin">\n                  <a ui-sref="user({id: user.Id})"><i class="fa fa-pencil-square-o" aria-hidden="true"></i> Edit</a>\n                </td>\n              </tr>\n            <tr ng-if="!users">\n              <td colspan="4" class="text-center text-muted">Loading...</td>\n            </tr>\n            <tr ng-if="users.length == 0">\n              <td colspan="4" class="text-center text-muted">No users available.</td>\n            </tr>\n            </tbody>\n          </table>\n          <div ng-if="users" class="pull-left pagination-controls">\n            <dir-pagination-controls></dir-pagination-controls>\n          </div>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),angular.module("app/components/volume/volume.html",[]).run(["$templateCache",function(a){a.put("app/components/volume/volume.html",'<rd-header>\n  <rd-header-title title="Volume details">\n    <i id="loadingViewSpinner" class="fa fa-cog fa-spin"></i>\n  </rd-header-title>\n  <rd-header-content>\n    <a ui-sref="volumes">Volumes</a> &gt; <a ui-sref="volume({id: volume.Id})">{{ volume.Id }}</a>\n  </rd-header-content>\n</rd-header>\n\n<div class="row" ng-if="volume">\n  <div class="col-sm-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-cube" title="Volume details"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr>\n              <td>ID</td>\n              <td>\n                {{ volume.Id }}\n                <button class="btn btn-xs btn-danger" ng-click="removeVolume()"><i class="fa fa-trash space-right" aria-hidden="true"></i>Remove this volume</button>\n              </td>\n            </tr>\n            <tr>\n              <td>Mount path</td>\n              <td>{{ volume.Mountpoint }}</td>\n            </tr>\n            <tr>\n              <td>Driver</td>\n              <td>{{ volume.Driver }}</td>\n            </tr>\n            <tr ng-if="!(volume.Labels | emptyobject)">\n              <td>Labels</td>\n              <td>\n                <table class="table table-bordered table-condensed">\n                  <tr ng-repeat="(k, v) in volume.Labels">\n                    <td>{{ k }}</td>\n                    <td>{{ v }}</td>\n                  </tr>\n                </table>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n\n\x3c!-- access-control-panel --\x3e\n<por-access-control-panel\n  ng-if="volume && applicationState.application.authentication"\n  resource-id="volume.Id"\n  resource-control="volume.ResourceControl"\n  resource-type="\'volume\'">\n</por-access-control-panel>\n\x3c!-- !access-control-panel --\x3e\n\n<div class="row" ng-if="!(volume.Options | emptyobject)">\n  <div class="col-lg-12 col-md-12 col-xs-12">\n    <rd-widget>\n      <rd-widget-header icon="fa-cogs" title="Volume options"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            <tr ng-repeat="(key, value) in volume.Options">\n              <td>{{ key }}</td>\n              <td>{{ value }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),angular.module("app/components/volumes/volumes.html",[]).run(["$templateCache",function(a){a.put("app/components/volumes/volumes.html",'<rd-header>\n  <rd-header-title title="Volume list">\n    <a data-toggle="tooltip" title="Refresh" ui-sref="volumes" ui-sref-opts="{reload: true}">\n      <i class="fa fa-refresh" aria-hidden="true"></i>\n    </a>\n    <i id="loadVolumesSpinner" class="fa fa-cog fa-spin" style="margin-left: 5px;"></i>\n  </rd-header-title>\n  <rd-header-content>Volumes</rd-header-content>\n</rd-header>\n\n<div class="col-lg-12">\n  <rd-widget>\n    <rd-widget-header icon="fa-cubes" title="Volumes">\n      <div class="pull-right">\n        Items per page:\n        <select ng-model="state.pagination_count" ng-change="changePaginationCount()">\n          <option value="0">All</option>\n          <option value="10">10</option>\n          <option value="25">25</option>\n          <option value="50">50</option>\n          <option value="100">100</option>\n        </select>\n      </div>\n    </rd-widget-header>\n    <rd-widget-taskbar classes="col-lg-12">\n      <div class="pull-left">\n        <button type="button" class="btn btn-danger" ng-click="removeAction()" ng-disabled="!state.selectedItemCount"><i class="fa fa-trash space-right" aria-hidden="true"></i>Remove</button>\n        <a class="btn btn-primary" type="button" ui-sref="actions.create.volume"><i class="fa fa-plus space-right" aria-hidden="true"></i>Add volume</a>\n      </div>\n      <div class="pull-right">\n        <input type="text" id="filter" ng-model="state.filter" placeholder="Filter..." class="form-control input-sm" />\n      </div>\n      <span class="btn-group btn-group-sm pull-right" style="margin-right: 20px;">\n        <label class="btn btn-primary" ng-model="state.danglingVolumesOnly" uib-btn-radio="undefined">\n          All\n        </label>\n        <label class="btn btn-primary" ng-model="state.danglingVolumesOnly" uib-btn-radio="false">\n          Attached\n        </label>\n        <label class="btn btn-primary" ng-model="state.danglingVolumesOnly" uib-btn-radio="true">\n          Unused\n        </label>\n      </span>\n    </rd-widget-taskbar>\n    <rd-widget-body classes="no-padding">\n      <div class="table-responsive">\n        <table class="table table-hover">\n          <thead>\n            <tr>\n              <th>\n                <input type="checkbox" ng-model="allSelected" ng-change="selectItems(allSelected)" />\n              </th>\n              <th>\n                <a ui-sref="volumes" ng-click="order(\'Id\')">\n                  Name\n                  <span ng-show="sortType == \'Id\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                  <span ng-show="sortType == \'Id\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                </a>\n              </th>\n              <th>\n                <a ui-sref="volumes" ng-click="order(\'Driver\')">\n                  Driver\n                  <span ng-show="sortType == \'Driver\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                  <span ng-show="sortType == \'Driver\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                </a>\n              </th>\n              <th>\n                <a ui-sref="volumes" ng-click="order(\'Mountpoint\')">\n                  Mount point\n                  <span ng-show="sortType == \'Mountpoint\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                  <span ng-show="sortType == \'Mountpoint\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                </a>\n              </th>\n              <th ng-if="applicationState.application.authentication">\n                <a ui-sref="volumes" ng-click="order(\'ResourceControl.Ownership\')">\n                  Ownership\n                  <span ng-show="sortType == \'ResourceControl.Ownership\' && !sortReverse" class="glyphicon glyphicon-chevron-down"></span>\n                  <span ng-show="sortType == \'ResourceControl.Ownership\' && sortReverse" class="glyphicon glyphicon-chevron-up"></span>\n                </a>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr dir-paginate="volume in (state.filteredVolumes = (volumes | filter:{dangling: state.danglingVolumesOnly} | filter:state.filter | orderBy:sortType:sortReverse | itemsPerPage: state.pagination_count))">\n              <td><input type="checkbox" ng-model="volume.Checked" ng-change="selectItem(volume)"/></td>\n              <td>\n                <a ui-sref="volume({id: volume.Id})" class="monospaced">{{ volume.Id|truncate:25 }}</a>\n                <span style="margin-left: 10px;" class="label label-warning image-tag" ng-if="volume.dangling">Unused</span></td>\n              </td>\n              <td>{{ volume.Driver }}</td>\n              <td>{{ volume.Mountpoint | truncatelr }}</td>\n              <td ng-if="applicationState.application.authentication">\n                <span>\n                  <i ng-class="volume.ResourceControl.Ownership | ownershipicon" aria-hidden="true"></i>\n                  {{ volume.ResourceControl.Ownership ? volume.ResourceControl.Ownership : volume.ResourceControl.Ownership = \'public\' }}\n                </span>\n              </td>\n            </tr>\n            <tr ng-if="!volumes">\n              <td colspan="5" class="text-center text-muted">Loading...</td>\n            </tr>\n            <tr ng-if="volumes.length === 0 || state.filteredVolumes.length === 0">\n              <td colspan="5" class="text-center text-muted">No volumes available.</td>\n            </tr>\n          </tbody>\n        </table>\n        <div ng-if="volumes" class="pull-left pagination-controls">\n          <dir-pagination-controls></dir-pagination-controls>\n        </div>\n      </div>\n    </rd-widget-body>\n  </rd-widget>\n</div>\n')}]),angular.module("app/directives/accessControlForm/porAccessControlForm.html",[]).run(["$templateCache",function(a){a.put("app/directives/accessControlForm/porAccessControlForm.html",'<div>\n  <div class="col-sm-12 form-section-title">\n    Access control\n  </div>\n  \x3c!-- access-control-switch --\x3e\n  <div class="form-group">\n    <div class="col-sm-12">\n      <label for="ownership" class="control-label text-left">\n        Enable access control\n        <portainer-tooltip position="bottom" message="When enabled, you can restrict the access and management of this resource."></portainer-tooltip>\n      </label>\n      <label class="switch" style="margin-left: 20px;">\n        <input name="ownership" type="checkbox" ng-model="$ctrl.formData.AccessControlEnabled"><i></i>\n      </label>\n    </div>\n  </div>\n  \x3c!-- !access-control-switch --\x3e\n  \x3c!-- restricted-access --\x3e\n  <div class="form-group" ng-if="$ctrl.formData.AccessControlEnabled" style="margin-bottom: 0">\n    <div class="boxselector_wrapper">\n      <div ng-if="$ctrl.isAdmin">\n        <input type="radio" id="access_administrators" ng-model="$ctrl.formData.Ownership" value="administrators">\n        <label for="access_administrators">\n          <div class="boxselector_header">\n            <i ng-class="\'administrators\' | ownershipicon" aria-hidden="true" style="margin-right: 2px;"></i>\n            Administrators\n          </div>\n          <p>I want to restrict the management of this resource to administrators only</p>\n        </label>\n      </div>\n      <div ng-if="$ctrl.isAdmin">\n        <input type="radio" id="access_restricted" ng-model="$ctrl.formData.Ownership" value="restricted">\n        <label for="access_restricted">\n          <div class="boxselector_header">\n            <i ng-class="\'restricted\' | ownershipicon" aria-hidden="true" style="margin-right: 2px;"></i>\n            Restricted\n          </div>\n          <p>\n            I want to restrict the management of this resource to a set of users and/or teams\n          </p>\n        </label>\n      </div>\n      <div ng-if="!$ctrl.isAdmin">\n        <input type="radio" id="access_private" ng-model="$ctrl.formData.Ownership" value="private">\n        <label for="access_private">\n          <div class="boxselector_header">\n            <i ng-class="\'private\' | ownershipicon" aria-hidden="true" style="margin-right: 2px;"></i>\n            Private\n          </div>\n          <p>\n            I want to this resource to be manageable by myself only\n          </p>\n        </label>\n      </div>\n      <div ng-if="!$ctrl.isAdmin && $ctrl.availableTeams.length > 0">\n        <input type="radio" id="access_restricted" ng-model="$ctrl.formData.Ownership" value="restricted">\n        <label for="access_restricted">\n          <div class="boxselector_header">\n            <i ng-class="\'restricted\' | ownershipicon" aria-hidden="true" style="margin-right: 2px;"></i>\n            Restricted\n          </div>\n          <p ng-if="$ctrl.availableTeams.length === 1">\n            I want any member of my team (<b>{{ $ctrl.availableTeams[0].Name }}</b>) to be able to manage this resource\n          </p>\n          <p ng-if="$ctrl.availableTeams.length > 1">\n            I want to restrict the management of this resource to one or more of my teams\n          </p>\n        </label>\n      </div>\n    </div>\n  </div>\n  \x3c!-- restricted-access --\x3e\n  \x3c!-- authorized-teams --\x3e\n  <div class="form-group" ng-if="$ctrl.formData.AccessControlEnabled && $ctrl.formData.Ownership === \'restricted\' && ($ctrl.isAdmin || (!$ctrl.isAdmin && $ctrl.availableTeams.length > 1))" >\n    <div class="col-sm-12">\n      <label for="group-access" class="control-label text-left">\n        Authorized teams\n        <portainer-tooltip ng-if="$ctrl.isAdmin && $ctrl.availableTeams.length > 0" position="bottom" message="You can select which teams(s) will be able to manage this resource."></portainer-tooltip>\n        <portainer-tooltip ng-if="!$ctrl.isAdmin && $ctrl.availableTeams.length > 1" position="bottom" message="As you are a member of multiple teams, you can select which teams(s) will be able to manage this resource."></portainer-tooltip>\n      </label>\n      <span ng-if="$ctrl.isAdmin && $ctrl.availableTeams.length === 0" class="small text-muted" style="margin-left: 20px;">\n        You have not yet created any team. Head over the <a ui-sref="teams">teams view</a> to manage user teams.\n      </span>\n      <span isteven-multi-select\n        ng-if="($ctrl.isAdmin && $ctrl.availableTeams.length > 0) || (!$ctrl.isAdmin && $ctrl.availableTeams.length > 1)"\n        input-model="$ctrl.availableTeams"\n        output-model="$ctrl.formData.AuthorizedTeams"\n        button-label="Name"\n        item-label="Name"\n        tick-property="selected"\n        helper-elements="filter"\n        search-property="Name"\n        translation="{nothingSelected: \'Select one or more teams\', search: \'Search...\'}"\n        style="margin-left: 20px;">\n      </span>\n    </div>\n  </div>\n  \x3c!-- !authorized-teams --\x3e\n  \x3c!-- authorized-users --\x3e\n  <div class="form-group" ng-if="$ctrl.formData.AccessControlEnabled && $ctrl.formData.Ownership === \'restricted\' && $ctrl.isAdmin">\n    <div class="col-sm-12">\n      <label for="group-access" class="control-label text-left">\n        Authorized users\n        <portainer-tooltip ng-if="$ctrl.isAdmin && $ctrl.availableUsers.length > 0" position="bottom" message="You can select which user(s) will be able to manage this resource."></portainer-tooltip>\n      </label>\n      <span ng-if="$ctrl.availableUsers.length === 0" class="small text-muted" style="margin-left: 20px;">\n        You have not yet created any user. Head over the <a ui-sref="users">users view</a> to manage users.\n      </span>\n      <span isteven-multi-select\n        ng-if="$ctrl.availableUsers.length > 0"\n        input-model="$ctrl.availableUsers"\n        output-model="$ctrl.formData.AuthorizedUsers"\n        button-label="Username"\n        item-label="Username"\n        tick-property="selected"\n        helper-elements="filter"\n        search-property="Username"\n        translation="{nothingSelected: \'Select one or more users\', search: \'Search...\'}"\n        style="margin-left: 20px;">\n      </span>\n    </div>\n  </div>\n  \x3c!-- !authorized-users --\x3e\n</div>\n')}]),angular.module("app/directives/accessControlPanel/porAccessControlPanel.html",[]).run(["$templateCache",function(a){
a.put("app/directives/accessControlPanel/porAccessControlPanel.html",'<div class="row">\n  <div class="col-sm-12" ng-if="$ctrl.state.displayAccessControlPanel">\n    <rd-widget>\n      <rd-widget-header icon="fa-eye" title="Access control"></rd-widget-header>\n      <rd-widget-body classes="no-padding">\n        <table class="table">\n          <tbody>\n            \x3c!-- ownership --\x3e\n            <tr>\n              <td>Ownership</td>\n              <td>\n                <i ng-class="$ctrl.resourceControl.Ownership | ownershipicon" aria-hidden="true" style="margin-right: 2px;"></i>\n                <span ng-if="!$ctrl.resourceControl">\n                  public\n                  <portainer-tooltip message="This resource can be managed by any user with access to this endpoint." position="bottom" style="margin-left: -3px;"></portainer-tooltip>\n                </span>\n                <span ng-if="$ctrl.resourceControl">\n                  {{ $ctrl.resourceControl.Ownership }}\n                  <portainer-tooltip ng-if="$ctrl.resourceControl.Ownership === \'administrators\'" message="This resource can only be managed by administrators." position="bottom" style="margin-left: -3px;"></portainer-tooltip>\n                  <portainer-tooltip ng-if="$ctrl.resourceControl.Ownership === \'private\'" message="Management of this resource is restricted to a single user." position="bottom" style="margin-left: -3px;"></portainer-tooltip>\n                  <portainer-tooltip ng-if="$ctrl.resourceControl.Ownership === \'restricted\'" message="This resource can be managed by a restricted set of users and/or teams." position="bottom" style="margin-left: -3px;"></portainer-tooltip>\n                </span>\n              </td>\n            </tr>\n            \x3c!-- !ownership --\x3e\n            <tr ng-if="$ctrl.resourceControl.Type === 2 && $ctrl.resourceType === \'container\'">\n              <td colspan="2">\n                <i class="fa fa-info-circle" aria-hidden="true" style="margin-right: 2px;"></i>\n                Access control on this resource is inherited from the following service: <a ui-sref="service({ id: $ctrl.resourceControl.ResourceId })">{{ $ctrl.resourceControl.ResourceId | truncate }}</a>\n                <portainer-tooltip message="Access control applied on a service is also applied on each container of that service." position="bottom" style="margin-left: 2px;"></portainer-tooltip>\n              </td>\n            </tr>\n            <tr ng-if="$ctrl.resourceControl.Type === 1 && $ctrl.resourceType === \'volume\'">\n              <td colspan="2">\n                <i class="fa fa-info-circle" aria-hidden="true" style="margin-right: 2px;"></i>\n                Access control on this resource is inherited from the following container: <a ui-sref="container({ id: $ctrl.resourceControl.ResourceId })">{{ $ctrl.resourceControl.ResourceId | truncate }}</a>\n                <portainer-tooltip message="Access control applied on a container created using a template is also applied on each volume associated to the container." position="bottom" style="margin-left: 2px;"></portainer-tooltip>\n              </td>\n            </tr>\n            \x3c!-- authorized-users --\x3e\n            <tr ng-if="$ctrl.resourceControl.UserAccesses.length > 0">\n              <td>Authorized users</td>\n              <td>\n                <span ng-repeat="user in $ctrl.authorizedUsers">{{user.Username}}{{$last ? \'\' : \', \'}} </span>\n              </td>\n            </tr>\n            \x3c!-- !authorized-users --\x3e\n            \x3c!-- authorized-teams --\x3e\n            <tr ng-if="$ctrl.resourceControl.TeamAccesses.length > 0">\n              <td>Authorized teams</td>\n              <td>\n                <span ng-repeat="team in $ctrl.authorizedTeams">{{team.Name}}{{$last ? \'\' : \', \'}} </span>\n              </td>\n            </tr>\n            \x3c!-- !authorized-teams --\x3e\n            \x3c!-- edit-ownership --\x3e\n            <tr ng-if="!($ctrl.resourceControl.Type === 1 && $ctrl.resourceType === \'volume\') && !($ctrl.resourceControl.Type === 2 && $ctrl.resourceType === \'container\') && !$ctrl.state.editOwnership && ($ctrl.isAdmin || $ctrl.state.canEditOwnership)">\n              <td colspan="2">\n                <a class="btn-outline-secondary" ng-click="$ctrl.state.editOwnership = true"><i class="fa fa-edit space-right" aria-hidden="true"></i>Change ownership</a>\n              </td>\n            </tr>\n            \x3c!-- !edit-ownership --\x3e\n            \x3c!-- edit-ownership-choices --\x3e\n            <tr ng-if="$ctrl.state.editOwnership">\n              <td colspan="2">\n                <div class="boxselector_wrapper">\n                  <div ng-if="$ctrl.isAdmin">\n                    <input type="radio" id="access_administrators" ng-model="$ctrl.formValues.Ownership" value="administrators">\n                    <label for="access_administrators">\n                      <div class="boxselector_header">\n                        <i ng-class="\'administrators\' | ownershipicon" aria-hidden="true" style="margin-right: 2px;"></i>\n                        Administrators\n                      </div>\n                      <p>I want to restrict the management of this resource to administrators only</p>\n                    </label>\n                  </div>\n                  <div ng-if="$ctrl.isAdmin">\n                    <input type="radio" id="access_restricted" ng-model="$ctrl.formValues.Ownership" value="restricted">\n                    <label for="access_restricted">\n                      <div class="boxselector_header">\n                        <i ng-class="\'restricted\' | ownershipicon" aria-hidden="true" style="margin-right: 2px;"></i>\n                        Restricted\n                      </div>\n                      <p>\n                        I want to restrict the management of this resource to a set of users and/or teams\n                      </p>\n                    </label>\n                  </div>\n                  <div ng-if="!$ctrl.isAdmin && $ctrl.state.canChangeOwnershipToTeam && $ctrl.availableTeams.length > 0">\n                    <input type="radio" id="access_restricted" ng-model="$ctrl.formValues.Ownership" value="restricted">\n                    <label for="access_restricted">\n                      <div class="boxselector_header">\n                        <i ng-class="\'restricted\' | ownershipicon" aria-hidden="true" style="margin-right: 2px;"></i>\n                        Restricted\n                      </div>\n                      <p ng-if="$ctrl.availableTeams.length === 1">\n                        I want any member of my team (<b>{{ $ctrl.availableTeams[0].Name }}</b>) to be able to manage this resource\n                      </p>\n                      <p ng-if="$ctrl.availableTeams.length > 1">\n                        I want to restrict the management of this resource to one or more of my teams\n                      </p>\n                    </label>\n                  </div>\n                  <div>\n                    <input type="radio" id="access_public" ng-model="$ctrl.formValues.Ownership" value="public">\n                    <label for="access_public">\n                      <div class="boxselector_header">\n                        <i ng-class="\'public\' | ownershipicon" aria-hidden="true" style="margin-right: 2px;"></i>\n                        Public\n                      </div>\n                      <p>I want any user with access to this endpoint to be able to manage this resource</p>\n                    </label>\n                  </div>\n                </div>\n              </td>\n            </tr>\n            \x3c!-- edit-ownership-choices --\x3e\n            \x3c!-- select-teams --\x3e\n            <tr ng-if="$ctrl.state.editOwnership && $ctrl.formValues.Ownership === \'restricted\' && ($ctrl.isAdmin || !$ctrl.isAdmin && $ctrl.availableTeams.length > 1)">\n              <td colspan="2">\n                <span>Teams</span>\n                <span ng-if="$ctrl.isAdmin && $ctrl.availableTeams.length === 0" class="small text-muted" style="margin-left: 10px;">\n                  You have not yet created any team. Head over the <a ui-sref="teams">teams view</a> to manage user teams.\n                </span>\n                <span isteven-multi-select\n                  ng-if="($ctrl.isAdmin && $ctrl.availableTeams.length > 0) || (!$ctrl.isAdmin && $ctrl.availableTeams.length > 1)"\n                  input-model="$ctrl.availableTeams"\n                  output-model="$ctrl.formValues.Ownership_Teams"\n                  button-label="Name"\n                  item-label="Name"\n                  tick-property="selected"\n                  helper-elements="filter"\n                  search-property="Name"\n                  max-labels="3"\n                  translation="{nothingSelected: \'Select one or more teams\', search: \'Search...\'}">\n                </span>\n              </td>\n            </tr>\n            \x3c!-- !select-teams --\x3e\n            \x3c!-- select-users --\x3e\n            <tr ng-if="$ctrl.isAdmin && $ctrl.state.editOwnership && $ctrl.formValues.Ownership === \'restricted\'">\n              <td colspan="2">\n                <span>Users</span>\n                <span ng-if="$ctrl.availableUsers.length === 0" class="small text-muted" style="margin-left: 10px;">\n                  You have not yet created any user. Head over the <a ui-sref="users">users view</a> to manage users.\n                </span>\n                <span isteven-multi-select\n                  ng-if="$ctrl.availableUsers.length > 0"\n                  input-model="$ctrl.availableUsers"\n                  output-model="$ctrl.formValues.Ownership_Users"\n                  button-label="Username"\n                  item-label="Username"\n                  tick-property="selected"\n                  helper-elements="filter"\n                  search-property="Username"\n                  max-labels="3"\n                  translation="{nothingSelected: \'Select one or more users\', search: \'Search...\'}">\n                </span>\n              </td>\n            </tr>\n            \x3c!-- !select-users --\x3e\n            \x3c!-- ownership-actions --\x3e\n            <tr ng-if="$ctrl.state.editOwnership">\n              <td colspan="2">\n                <div>\n                  <a type="button" class="btn btn-default btn-sm" ng-click="$ctrl.state.editOwnership = false">Cancel</a>\n                  <a type="button" class="btn btn-primary btn-sm" ng-click="$ctrl.confirmUpdateOwnership()">Update ownership</a>\n                  <span class="text-danger" ng-if="$ctrl.state.formValidationError" style="margin-left: 5px;">{{ $ctrl.state.formValidationError }}</span>\n                </div>\n              </td>\n            </tr>\n            \x3c!-- !ownership-actions --\x3e\n          </tbody>\n        </table>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),angular.module("app/directives/accessManagement/porAccessManagement.html",[]).run(["$templateCache",function(a){a.put("app/directives/accessManagement/porAccessManagement.html",'<div class="row">\n  <div class="col-sm-6">\n    <rd-widget>\n      <rd-widget-header classes="col-sm-12 col-md-6 nopadding" icon="fa-users" title="Users and teams">\n        <div class="pull-md-right pull-lg-right">\n          Items per page:\n          <select ng-model="$ctrl.state.pagination_count_accesses" ng-change="$ctrl.changePaginationCountAccesses()">\n            <option value="0">All</option>\n            <option value="10">10</option>\n            <option value="25">25</option>\n            <option value="50">50</option>\n            <option value="100">100</option>\n          </select>\n        </div>\n      </rd-widget-header>\n      <rd-widget-taskbar classes="col-sm-12 nopadding">\n        <div class="col-sm-12 col-md-6 nopadding">\n          <button class="btn btn-primary btn-sm" ng-click="$ctrl.authorizeAllAccesses()" ng-disabled="$ctrl.accesses.length ===  0 || $ctrl.filteredUsers.length === 0"><i class="fa fa-user-plus space-right" aria-hidden="true"></i>Authorize all</button>\n        </div>\n        <div class="col-sm-12 col-md-6 nopadding">\n          <input type="text" id="filter" ng-model="$ctrl.state.filterUsers" placeholder="Filter..." class="form-control input-sm" />\n        </div>\n      </rd-widget-taskbar>\n      <rd-widget-body classes="no-padding">\n        <div class="table-responsive">\n          <table class="table table-hover">\n            <thead>\n              <tr>\n                <th>\n                  <a ng-click="$ctrl.orderAccesses(\'Name\')">\n                    Name\n                    <span ng-show="$ctrl.state.sortAccessesBy == \'Name\' && !$ctrl.state.sortAccessesReverse" class="glyphicon glyphicon-chevron-down"></span>\n                    <span ng-show="$ctrl.state.sortAccessesBy == \'Name\' && $ctrl.state.sortAccessesReverse" class="glyphicon glyphicon-chevron-up"></span>\n                  </a>\n                </th>\n                <th>\n                  <a ng-click="$ctrl.orderAccesses(\'Type\')">\n                    Type\n                    <span ng-show="$ctrl.state.sortAccessesBy == \'Type\' && !$ctrl.state.sortAccessesReverse" class="glyphicon glyphicon-chevron-down"></span>\n                    <span ng-show="$ctrl.state.sortAccessesBy == \'Type\' && $ctrl.state.sortAccessesReverse" class="glyphicon glyphicon-chevron-up"></span>\n                  </a>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr ng-click="$ctrl.authorizeAccess(user)" class="interactive" dir-paginate="user in $ctrl.accesses | filter:$ctrl.state.filterUsers | orderBy:$ctrl.state.sortAccessesBy:$ctrl.state.sortAccessesReverse | itemsPerPage: $ctrl.state.pagination_count_accesses">\n                <td>{{ user.Name }}</td>\n                <td>\n                  <i class="fa" ng-class="user.Type === \'user\' ? \'fa-user\' : \'fa-users\'" aria-hidden="true" style="margin-right: 2px;"></i>\n                  {{ user.Type }}\n                </td>\n              </tr>\n              <tr ng-if="!$ctrl.accesses">\n                <td colspan="2" class="text-center text-muted">Loading...</td>\n              </tr>\n              <tr ng-if="$ctrl.accesses.length === 0 || ($ctrl.accesses | filter:$ctrl.state.filterUsers | orderBy:$ctrl.state.sortAccessesBy:$ctrl.state.sortAccessesReverse | itemsPerPage: $ctrl.state.pagination_count_accesses).length === 0">\n                <td colspan="2" class="text-center text-muted">No user or team available.</td>\n              </tr>\n            </tbody>\n          </table>\n          <div ng-if="$ctrl.accesses" class="pull-left pagination-controls">\n            <dir-pagination-controls></dir-pagination-controls>\n          </div>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n  <div class="col-sm-6">\n    <rd-widget>\n      <rd-widget-header classes="col-sm-12 col-md-6 nopadding" icon="fa-users" title="Authorized users and teams">\n        <div class="pull-md-right pull-lg-right">\n          Items per page:\n          <select ng-model="$ctrl.state.pagination_count_authorizedAccesses" ng-change="$ctrl.changePaginationCountAuthorizedAccesses()">\n            <option value="0">All</option>\n            <option value="10">10</option>\n            <option value="25">25</option>\n            <option value="50">50</option>\n            <option value="100">100</option>\n          </select>\n        </div>\n      </rd-widget-header>\n      <rd-widget-taskbar classes="col-sm-12 nopadding">\n        <div class="col-sm-12 col-md-6 nopadding">\n          <button class="btn btn-primary btn-sm" ng-click="$ctrl.unauthorizeAllAccesses()" ng-disabled="$ctrl.authorizedAccesses.length ===  0 || $ctrl.filteredAuthorizedUsers.length === 0"><i class="fa fa-user-times space-right" aria-hidden="true"></i>Deny all</button>\n        </div>\n        <div class="col-sm-12 col-md-6 nopadding">\n          <input type="text" id="filter" ng-model="$ctrl.state.filterAuthorizedUsers" placeholder="Filter..." class="form-control input-sm" />\n        </div>\n      </rd-widget-taskbar>\n      <rd-widget-body classes="no-padding">\n        <div class="table-responsive">\n          <table class="table table-hover">\n            <thead>\n              <tr>\n                <th>\n                  <a ng-click="$ctrl.orderAuthorizedAccesses(\'Name\')">\n                    Name\n                    <span ng-show="$ctrl.state.sortAuthorizedAccessesBy == \'Name\' && !$ctrl.state.sortAuthorizedAccessesReverse" class="glyphicon glyphicon-chevron-down"></span>\n                    <span ng-show="$ctrl.state.sortAuthorizedAccessesBy == \'Name\' && $ctrl.state.sortAuthorizedAccessesReverse" class="glyphicon glyphicon-chevron-up"></span>\n                  </a>\n                </th>\n                <th>\n                  <a ng-click="$ctrl.orderAuthorizedAccesses(\'Type\')">\n                    Type\n                    <span ng-show="$ctrl.state.sortAuthorizedAccessesBy == \'Type\' && !$ctrl.state.sortAuthorizedAccessesReverse" class="glyphicon glyphicon-chevron-down"></span>\n                    <span ng-show="$ctrl.state.sortAuthorizedAccessesBy == \'Type\' && $ctrl.state.sortAuthorizedAccessesReverse" class="glyphicon glyphicon-chevron-up"></span>\n                  </a>\n                </th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr ng-click="$ctrl.unauthorizeAccess(user)" class="interactive" pagination-id="table_authaccess" dir-paginate="user in $ctrl.authorizedAccesses | filter:$ctrl.state.filterAuthorizedUsers | orderBy:$ctrl.state.sortAuthorizedAccessesBy:$ctrl.state.sortAuthorizedAccessesReverse | itemsPerPage: $ctrl.state.pagination_count_authorizedAccesses">\n                <td>{{ user.Name }}</td>\n                <td>\n                  <i class="fa" ng-class="user.Type === \'user\' ? \'fa-user\' : \'fa-users\'" aria-hidden="true" style="margin-right: 2px;"></i>\n                  {{ user.Type }}\n                </td>\n              </tr>\n              <tr ng-if="!$ctrl.authorizedAccesses">\n                <td colspan="2" class="text-center text-muted">Loading...</td>\n              </tr>\n              <tr ng-if="$ctrl.authorizedAccesses.length === 0 || (authorizedAccesses | filter:state.filterAuthorizedUsers | orderBy:sortTypeAuthorizedAccesses:sortReverseAuthorizedAccesses | itemsPerPage: state.pagination_count_authorizedAccesses).length === 0">\n                <td colspan="2" class="text-center text-muted">No authorized user or team.</td>\n              </tr>\n            </tbody>\n          </table>\n          <div ng-if="$ctrl.authorizedAccesses" class="pull-left pagination-controls">\n            <dir-pagination-controls pagination-id="table_authaccess"></dir-pagination-controls>\n          </div>\n        </div>\n      </rd-widget-body>\n    </rd-widget>\n  </div>\n</div>\n')}]),angular.module("app/directives/imageRegistry/porImageRegistry.html",[]).run(["$templateCache",function(a){a.put("app/directives/imageRegistry/porImageRegistry.html",'<div>\n  <label for="image_name" class="col-sm-1 control-label text-left">Name</label>\n  <div class="col-sm-11 col-md-6">\n    <input type="text" class="form-control" ng-model="$ctrl.image" id="image_name" placeholder="e.g. myImage:myTag">\n  </div>\n  <label for="image_registry" class="col-sm-2 col-md-1 margin-sm-top control-label text-left">\n    Registry\n  </label>\n  <div class="col-sm-10 col-md-4 margin-sm-top">\n    <select ng-options="registry as registry.Name for registry in $ctrl.availableRegistries" ng-model="$ctrl.registry" id="image_registry" class="form-control"></select>\n  </div>\n</div>\n')}]);